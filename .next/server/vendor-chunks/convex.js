"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/convex";
exports.ids = ["vendor-chunks/convex"];
exports.modules = {

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/http_client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/http_client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexHttpClient: () => (/* binding */ ConvexHttpClient),\n/* harmony export */   STATUS_CODE_BAD_REQUEST: () => (/* binding */ STATUS_CODE_BAD_REQUEST),\n/* harmony export */   STATUS_CODE_OK: () => (/* binding */ STATUS_CODE_OK),\n/* harmony export */   STATUS_CODE_UDF_FAILED: () => (/* binding */ STATUS_CODE_UDF_FAILED),\n/* harmony export */   setFetch: () => (/* binding */ setFetch)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(rsc)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logging.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nconst STATUS_CODE_OK = 200;\nconst STATUS_CODE_BAD_REQUEST = 400;\nconst STATUS_CODE_UDF_FAILED = 560;\nlet specifiedFetch = void 0;\nfunction setFetch(f) {\n  specifiedFetch = f;\n}\nclass ConvexHttpClient {\n  /**\n   * Create a new {@link ConvexHttpClient}.\n   *\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - An object of options.\n   * - `skipConvexDeploymentUrlCheck` - Skip validating that the Convex deployment URL looks like\n   * `https://happy-animal-123.convex.cloud` or localhost. This can be useful if running a self-hosted\n   * Convex backend that uses a different URL.\n   * - `logger` - A logger. If not provided, logs to the console.\n   * You can construct your own logger to customize logging to log elsewhere\n   * or not log at all.\n   */\n  constructor(address, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"adminAuth\");\n    __publicField(this, \"encodedTsPromise\");\n    __publicField(this, \"debug\");\n    __publicField(this, \"fetchOptions\");\n    __publicField(this, \"logger\");\n    if (typeof options === \"boolean\") {\n      throw new Error(\n        \"skipConvexDeploymentUrlCheck as the second argument is no longer supported. Please pass an options object, `{ skipConvexDeploymentUrlCheck: true }`.\"\n      );\n    }\n    const opts = options ?? {};\n    if (opts.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.validateDeploymentUrl)(address);\n    }\n    this.logger = options?.logger === false ? (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.instantiateNoopLogger)({ verbose: false }) : options?.logger !== true && options?.logger ? options.logger : (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.instantiateDefaultLogger)({ verbose: false });\n    this.address = address;\n    this.debug = true;\n  }\n  /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   * @deprecated Use url, which returns the url without /api at the end.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */\n  backendUrl() {\n    return `${this.address}/api`;\n  }\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */\n  setAuth(value) {\n    this.clearAuth();\n    this.auth = value;\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, actingAsIdentity) {\n    this.clearAuth();\n    if (actingAsIdentity !== void 0) {\n      const bytes = new TextEncoder().encode(JSON.stringify(actingAsIdentity));\n      const actingAsIdentityEncoded = btoa(String.fromCodePoint(...bytes));\n      this.adminAuth = `${token}:${actingAsIdentityEncoded}`;\n    } else {\n      this.adminAuth = token;\n    }\n  }\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.auth = void 0;\n    this.adminAuth = void 0;\n  }\n  /**\n   * Sets whether the result log lines should be printed on the console or not.\n   *\n   * @internal\n   */\n  setDebug(debug) {\n    this.debug = debug;\n  }\n  /**\n   * Used to customize the fetch behavior in some runtimes.\n   *\n   * @internal\n   */\n  setFetchOptions(fetchOptions) {\n    this.fetchOptions = fetchOptions;\n  }\n  /**\n   * This API is experimental: it may change or disappear.\n   *\n   * Execute a Convex query function at the same timestamp as every other\n   * consistent query execution run by this HTTP client.\n   *\n   * This doesn't make sense for long-lived ConvexHttpClients as Convex\n   * backends can read a limited amount into the past: beyond 30 seconds\n   * in the past may not be available.\n   *\n   * Create a new client to use a consistent time.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   *\n   * @deprecated This API is experimental: it may change or disappear.\n   */\n  async consistentQuery(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const timestampPromise = this.getTimestamp();\n    return await this.queryInner(query, queryArgs, { timestampPromise });\n  }\n  async getTimestamp() {\n    if (this.encodedTsPromise) {\n      return this.encodedTsPromise;\n    }\n    return this.encodedTsPromise = this.getTimestampInner();\n  }\n  async getTimestampInner() {\n    const localFetch = specifiedFetch || fetch;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    const response = await localFetch(`${this.address}/api/query_ts`, {\n      ...this.fetchOptions,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok) {\n      throw new Error(await response.text());\n    }\n    const { ts } = await response.json();\n    return ts;\n  }\n  /**\n   * Execute a Convex query function.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */\n  async query(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    return await this.queryInner(query, queryArgs, {});\n  }\n  async queryInner(query, queryArgs, options) {\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    const args = [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(queryArgs)];\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const timestamp = options.timestampPromise ? await options.timestampPromise : void 0;\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args,\n      ...timestamp ? { ts: timestamp } : {}\n    });\n    const endpoint = timestamp ? `${this.address}/api/query_at_ts` : `${this.address}/api/query`;\n    const response = await localFetch(endpoint, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"query\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex mutation function.\n   *\n   * @param name - The name of the mutation.\n   * @param args - The arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation(mutation, ...args) {\n    const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(mutation);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(mutationArgs)]\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/mutation`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"mutation\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex action function.\n   *\n   * @param name - The name of the action.\n   * @param args - The arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action(action, ...args) {\n    const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(action);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(actionArgs)]\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/action`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"action\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex function of an unknown type.\n   *\n   * @param name - The name of the function.\n   * @param args - The arguments object for the function. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the function's result.\n   *\n   * @internal\n   */\n  async function(anyFunction, componentPath, ...args) {\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = typeof anyFunction === \"string\" ? anyFunction : (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(anyFunction);\n    const body = JSON.stringify({\n      componentPath,\n      path: name,\n      format: \"convex_encoded_json\",\n      args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(functionArgs)\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/function`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"any\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n}\nfunction forwardErrorData(errorData, error) {\n  error.data = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(errorData);\n  return error;\n}\n//# sourceMappingURL=http_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/http_client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* reexport safe */ _sync_client_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient),\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexClient),\n/* harmony export */   ConvexHttpClient: () => (/* reexport safe */ _http_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHttpClient)\n/* harmony export */ });\n/* harmony import */ var _sync_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sync/client.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/client.js\");\n/* harmony import */ var _simple_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simple_client.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/simple_client.js\");\n/* harmony import */ var _http_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http_client.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/http_client.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDdUM7QUFDRjtBQUNFO0FBQ3BEIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgeyBCYXNlQ29udmV4Q2xpZW50IH0gZnJvbSBcIi4vc3luYy9jbGllbnQuanNcIjtcbmV4cG9ydCB7IENvbnZleENsaWVudCB9IGZyb20gXCIuL3NpbXBsZV9jbGllbnQuanNcIjtcbmV4cG9ydCB7IENvbnZleEh0dHBDbGllbnQgfSBmcm9tIFwiLi9odHRwX2NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/logging.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/logging.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   createHybridErrorStacktrace: () => (/* binding */ createHybridErrorStacktrace),\n/* harmony export */   forwardData: () => (/* binding */ forwardData),\n/* harmony export */   instantiateDefaultLogger: () => (/* binding */ instantiateDefaultLogger),\n/* harmony export */   instantiateNoopLogger: () => (/* binding */ instantiateNoopLogger),\n/* harmony export */   logFatalError: () => (/* binding */ logFatalError),\n/* harmony export */   logForFunction: () => (/* binding */ logForFunction)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\nfunction prefix_for_source(source) {\n  switch (source) {\n    case \"query\":\n      return \"Q\";\n    case \"mutation\":\n      return \"M\";\n    case \"action\":\n      return \"A\";\n    case \"any\":\n      return \"?\";\n  }\n}\nclass Logger {\n  constructor(options) {\n    __publicField(this, \"_onLogLineFuncs\");\n    __publicField(this, \"_verbose\");\n    this._onLogLineFuncs = {};\n    this._verbose = options.verbose;\n  }\n  addLogLineListener(func) {\n    let id = Math.random().toString(36).substring(2, 15);\n    for (let i = 0; i < 10; i++) {\n      if (this._onLogLineFuncs[id] === void 0) {\n        break;\n      }\n      id = Math.random().toString(36).substring(2, 15);\n    }\n    this._onLogLineFuncs[id] = func;\n    return () => {\n      delete this._onLogLineFuncs[id];\n    };\n  }\n  logVerbose(...args) {\n    if (this._verbose) {\n      for (const func of Object.values(this._onLogLineFuncs)) {\n        func(\"debug\", `${(/* @__PURE__ */ new Date()).toISOString()}`, ...args);\n      }\n    }\n  }\n  log(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"info\", ...args);\n    }\n  }\n  warn(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"warn\", ...args);\n    }\n  }\n  error(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"error\", ...args);\n    }\n  }\n}\nfunction instantiateDefaultLogger(options) {\n  const logger = new Logger(options);\n  logger.addLogLineListener((level, ...args) => {\n    switch (level) {\n      case \"debug\":\n        console.debug(...args);\n        break;\n      case \"info\":\n        console.log(...args);\n        break;\n      case \"warn\":\n        console.warn(...args);\n        break;\n      case \"error\":\n        console.error(...args);\n        break;\n      default: {\n        const _typecheck = level;\n        console.log(...args);\n      }\n    }\n  });\n  return logger;\n}\nfunction instantiateNoopLogger(options) {\n  return new Logger(options);\n}\nfunction logForFunction(logger, type, source, udfPath, message) {\n  const prefix = prefix_for_source(source);\n  if (typeof message === \"object\") {\n    message = `ConvexError ${JSON.stringify(message.errorData, null, 2)}`;\n  }\n  if (type === \"info\") {\n    const match = message.match(/^\\[.*?\\] /);\n    if (match === null) {\n      logger.error(\n        `[CONVEX ${prefix}(${udfPath})] Could not parse console.log`\n      );\n      return;\n    }\n    const level = message.slice(1, match[0].length - 2);\n    const args = message.slice(match[0].length);\n    logger.log(`%c[CONVEX ${prefix}(${udfPath})] [${level}]`, INFO_COLOR, args);\n  } else {\n    logger.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n  }\n}\nfunction logFatalError(logger, message) {\n  const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n  logger.error(errorMessage);\n  return new Error(errorMessage);\n}\nfunction createHybridErrorStacktrace(source, udfPath, result) {\n  const prefix = prefix_for_source(source);\n  return `[CONVEX ${prefix}(${udfPath})] ${result.errorMessage}\n  Called by client`;\n}\nfunction forwardData(result, error) {\n  error.data = result.errorData;\n  return error;\n}\n//# sourceMappingURL=logging.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJDQUEyQztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsNkJBQTZCLDJDQUEyQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU8sR0FBRyxRQUFRO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTyxHQUFHLFFBQVEsTUFBTSxNQUFNO0FBQzFELElBQUk7QUFDSiw0QkFBNEIsT0FBTyxHQUFHLFFBQVEsS0FBSyxRQUFRO0FBQzNEO0FBQ0E7QUFDTztBQUNQLCtDQUErQyxRQUFRO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsT0FBTyxHQUFHLFFBQVEsS0FBSztBQUMzQztBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvZ2dpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY29uc3QgSU5GT19DT0xPUiA9IFwiY29sb3I6cmdiKDAsIDE0NSwgMjU1KVwiO1xuZnVuY3Rpb24gcHJlZml4X2Zvcl9zb3VyY2Uoc291cmNlKSB7XG4gIHN3aXRjaCAoc291cmNlKSB7XG4gICAgY2FzZSBcInF1ZXJ5XCI6XG4gICAgICByZXR1cm4gXCJRXCI7XG4gICAgY2FzZSBcIm11dGF0aW9uXCI6XG4gICAgICByZXR1cm4gXCJNXCI7XG4gICAgY2FzZSBcImFjdGlvblwiOlxuICAgICAgcmV0dXJuIFwiQVwiO1xuICAgIGNhc2UgXCJhbnlcIjpcbiAgICAgIHJldHVybiBcIj9cIjtcbiAgfVxufVxuZXhwb3J0IGNsYXNzIExvZ2dlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX29uTG9nTGluZUZ1bmNzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfdmVyYm9zZVwiKTtcbiAgICB0aGlzLl9vbkxvZ0xpbmVGdW5jcyA9IHt9O1xuICAgIHRoaXMuX3ZlcmJvc2UgPSBvcHRpb25zLnZlcmJvc2U7XG4gIH1cbiAgYWRkTG9nTGluZUxpc3RlbmVyKGZ1bmMpIHtcbiAgICBsZXQgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX29uTG9nTGluZUZ1bmNzW2lkXSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpO1xuICAgIH1cbiAgICB0aGlzLl9vbkxvZ0xpbmVGdW5jc1tpZF0gPSBmdW5jO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkZWxldGUgdGhpcy5fb25Mb2dMaW5lRnVuY3NbaWRdO1xuICAgIH07XG4gIH1cbiAgbG9nVmVyYm9zZSguLi5hcmdzKSB7XG4gICAgaWYgKHRoaXMuX3ZlcmJvc2UpIHtcbiAgICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgICBmdW5jKFwiZGVidWdcIiwgYCR7KC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKS50b0lTT1N0cmluZygpfWAsIC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBsb2coLi4uYXJncykge1xuICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgZnVuYyhcImluZm9cIiwgLi4uYXJncyk7XG4gICAgfVxuICB9XG4gIHdhcm4oLi4uYXJncykge1xuICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgZnVuYyhcIndhcm5cIiwgLi4uYXJncyk7XG4gICAgfVxuICB9XG4gIGVycm9yKC4uLmFyZ3MpIHtcbiAgICBmb3IgKGNvbnN0IGZ1bmMgb2YgT2JqZWN0LnZhbHVlcyh0aGlzLl9vbkxvZ0xpbmVGdW5jcykpIHtcbiAgICAgIGZ1bmMoXCJlcnJvclwiLCAuLi5hcmdzKTtcbiAgICB9XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZURlZmF1bHRMb2dnZXIob3B0aW9ucykge1xuICBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKG9wdGlvbnMpO1xuICBsb2dnZXIuYWRkTG9nTGluZUxpc3RlbmVyKChsZXZlbCwgLi4uYXJncykgPT4ge1xuICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgIGNhc2UgXCJkZWJ1Z1wiOlxuICAgICAgICBjb25zb2xlLmRlYnVnKC4uLmFyZ3MpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJpbmZvXCI6XG4gICAgICAgIGNvbnNvbGUubG9nKC4uLmFyZ3MpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ3YXJuXCI6XG4gICAgICAgIGNvbnNvbGUud2FybiguLi5hcmdzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiZXJyb3JcIjpcbiAgICAgICAgY29uc29sZS5lcnJvciguLi5hcmdzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGNvbnN0IF90eXBlY2hlY2sgPSBsZXZlbDtcbiAgICAgICAgY29uc29sZS5sb2coLi4uYXJncyk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGxvZ2dlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZU5vb3BMb2dnZXIob3B0aW9ucykge1xuICByZXR1cm4gbmV3IExvZ2dlcihvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGb3JGdW5jdGlvbihsb2dnZXIsIHR5cGUsIHNvdXJjZSwgdWRmUGF0aCwgbWVzc2FnZSkge1xuICBjb25zdCBwcmVmaXggPSBwcmVmaXhfZm9yX3NvdXJjZShzb3VyY2UpO1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09IFwib2JqZWN0XCIpIHtcbiAgICBtZXNzYWdlID0gYENvbnZleEVycm9yICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZS5lcnJvckRhdGEsIG51bGwsIDIpfWA7XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwiaW5mb1wiKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBtZXNzYWdlLm1hdGNoKC9eXFxbLio/XFxdIC8pO1xuICAgIGlmIChtYXRjaCA9PT0gbnVsbCkge1xuICAgICAgbG9nZ2VyLmVycm9yKFxuICAgICAgICBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIENvdWxkIG5vdCBwYXJzZSBjb25zb2xlLmxvZ2BcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGxldmVsID0gbWVzc2FnZS5zbGljZSgxLCBtYXRjaFswXS5sZW5ndGggLSAyKTtcbiAgICBjb25zdCBhcmdzID0gbWVzc2FnZS5zbGljZShtYXRjaFswXS5sZW5ndGgpO1xuICAgIGxvZ2dlci5sb2coYCVjW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIFske2xldmVsfV1gLCBJTkZPX0NPTE9SLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICBsb2dnZXIuZXJyb3IoYFtDT05WRVggJHtwcmVmaXh9KCR7dWRmUGF0aH0pXSAke21lc3NhZ2V9YCk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGYXRhbEVycm9yKGxvZ2dlciwgbWVzc2FnZSkge1xuICBjb25zdCBlcnJvck1lc3NhZ2UgPSBgW0NPTlZFWCBGQVRBTCBFUlJPUl0gJHttZXNzYWdlfWA7XG4gIGxvZ2dlci5lcnJvcihlcnJvck1lc3NhZ2UpO1xuICByZXR1cm4gbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSHlicmlkRXJyb3JTdGFja3RyYWNlKHNvdXJjZSwgdWRmUGF0aCwgcmVzdWx0KSB7XG4gIGNvbnN0IHByZWZpeCA9IHByZWZpeF9mb3Jfc291cmNlKHNvdXJjZSk7XG4gIHJldHVybiBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldICR7cmVzdWx0LmVycm9yTWVzc2FnZX1cbiAgQ2FsbGVkIGJ5IGNsaWVudGA7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZERhdGEocmVzdWx0LCBlcnJvcikge1xuICBlcnJvci5kYXRhID0gcmVzdWx0LmVycm9yRGF0YTtcbiAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/logging.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/long.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/long.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Long: () => (/* binding */ Long)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass Long {\n  constructor(low, high) {\n    __publicField(this, \"low\");\n    __publicField(this, \"high\");\n    __publicField(this, \"__isUnsignedLong__\");\n    this.low = low | 0;\n    this.high = high | 0;\n    this.__isUnsignedLong__ = true;\n  }\n  static isLong(obj) {\n    return (obj && obj.__isUnsignedLong__) === true;\n  }\n  // prettier-ignore\n  static fromBytesLE(bytes) {\n    return new Long(\n      bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24,\n      bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24\n    );\n  }\n  // prettier-ignore\n  toBytesLE() {\n    const hi = this.high;\n    const lo = this.low;\n    return [\n      lo & 255,\n      lo >>> 8 & 255,\n      lo >>> 16 & 255,\n      lo >>> 24,\n      hi & 255,\n      hi >>> 8 & 255,\n      hi >>> 16 & 255,\n      hi >>> 24\n    ];\n  }\n  static fromNumber(value) {\n    if (isNaN(value)) return UZERO;\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    return new Long(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0);\n  }\n  toString() {\n    return (BigInt(this.high) * BigInt(TWO_PWR_32_DBL) + BigInt(this.low)).toString();\n  }\n  equals(other) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  }\n  notEquals(other) {\n    return !this.equals(other);\n  }\n  comp(other) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.equals(other)) return 0;\n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  }\n  lessThanOrEqual(other) {\n    return this.comp(\n      /* validates */\n      other\n    ) <= 0;\n  }\n  static fromValue(val) {\n    if (typeof val === \"number\") return Long.fromNumber(val);\n    return new Long(val.low, val.high);\n  }\n}\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(4294967295 | 0, 4294967295 | 0);\n//# sourceMappingURL=long.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9uZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuZXhwb3J0IGNsYXNzIExvbmcge1xuICBjb25zdHJ1Y3Rvcihsb3csIGhpZ2gpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG93XCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJoaWdoXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfX2lzVW5zaWduZWRMb25nX19cIik7XG4gICAgdGhpcy5sb3cgPSBsb3cgfCAwO1xuICAgIHRoaXMuaGlnaCA9IGhpZ2ggfCAwO1xuICAgIHRoaXMuX19pc1Vuc2lnbmVkTG9uZ19fID0gdHJ1ZTtcbiAgfVxuICBzdGF0aWMgaXNMb25nKG9iaikge1xuICAgIHJldHVybiAob2JqICYmIG9iai5fX2lzVW5zaWduZWRMb25nX18pID09PSB0cnVlO1xuICB9XG4gIC8vIHByZXR0aWVyLWlnbm9yZVxuICBzdGF0aWMgZnJvbUJ5dGVzTEUoYnl0ZXMpIHtcbiAgICByZXR1cm4gbmV3IExvbmcoXG4gICAgICBieXRlc1swXSB8IGJ5dGVzWzFdIDw8IDggfCBieXRlc1syXSA8PCAxNiB8IGJ5dGVzWzNdIDw8IDI0LFxuICAgICAgYnl0ZXNbNF0gfCBieXRlc1s1XSA8PCA4IHwgYnl0ZXNbNl0gPDwgMTYgfCBieXRlc1s3XSA8PCAyNFxuICAgICk7XG4gIH1cbiAgLy8gcHJldHRpZXItaWdub3JlXG4gIHRvQnl0ZXNMRSgpIHtcbiAgICBjb25zdCBoaSA9IHRoaXMuaGlnaDtcbiAgICBjb25zdCBsbyA9IHRoaXMubG93O1xuICAgIHJldHVybiBbXG4gICAgICBsbyAmIDI1NSxcbiAgICAgIGxvID4+PiA4ICYgMjU1LFxuICAgICAgbG8gPj4+IDE2ICYgMjU1LFxuICAgICAgbG8gPj4+IDI0LFxuICAgICAgaGkgJiAyNTUsXG4gICAgICBoaSA+Pj4gOCAmIDI1NSxcbiAgICAgIGhpID4+PiAxNiAmIDI1NSxcbiAgICAgIGhpID4+PiAyNFxuICAgIF07XG4gIH1cbiAgc3RhdGljIGZyb21OdW1iZXIodmFsdWUpIHtcbiAgICBpZiAoaXNOYU4odmFsdWUpKSByZXR1cm4gVVpFUk87XG4gICAgaWYgKHZhbHVlIDwgMCkgcmV0dXJuIFVaRVJPO1xuICAgIGlmICh2YWx1ZSA+PSBUV09fUFdSXzY0X0RCTCkgcmV0dXJuIE1BWF9VTlNJR05FRF9WQUxVRTtcbiAgICByZXR1cm4gbmV3IExvbmcodmFsdWUgJSBUV09fUFdSXzMyX0RCTCB8IDAsIHZhbHVlIC8gVFdPX1BXUl8zMl9EQkwgfCAwKTtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gKEJpZ0ludCh0aGlzLmhpZ2gpICogQmlnSW50KFRXT19QV1JfMzJfREJMKSArIEJpZ0ludCh0aGlzLmxvdykpLnRvU3RyaW5nKCk7XG4gIH1cbiAgZXF1YWxzKG90aGVyKSB7XG4gICAgaWYgKCFMb25nLmlzTG9uZyhvdGhlcikpIG90aGVyID0gTG9uZy5mcm9tVmFsdWUob3RoZXIpO1xuICAgIGlmICh0aGlzLmhpZ2ggPj4+IDMxID09PSAxICYmIG90aGVyLmhpZ2ggPj4+IDMxID09PSAxKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMuaGlnaCA9PT0gb3RoZXIuaGlnaCAmJiB0aGlzLmxvdyA9PT0gb3RoZXIubG93O1xuICB9XG4gIG5vdEVxdWFscyhvdGhlcikge1xuICAgIHJldHVybiAhdGhpcy5lcXVhbHMob3RoZXIpO1xuICB9XG4gIGNvbXAob3RoZXIpIHtcbiAgICBpZiAoIUxvbmcuaXNMb25nKG90aGVyKSkgb3RoZXIgPSBMb25nLmZyb21WYWx1ZShvdGhlcik7XG4gICAgaWYgKHRoaXMuZXF1YWxzKG90aGVyKSkgcmV0dXJuIDA7XG4gICAgcmV0dXJuIG90aGVyLmhpZ2ggPj4+IDAgPiB0aGlzLmhpZ2ggPj4+IDAgfHwgb3RoZXIuaGlnaCA9PT0gdGhpcy5oaWdoICYmIG90aGVyLmxvdyA+Pj4gMCA+IHRoaXMubG93ID4+PiAwID8gLTEgOiAxO1xuICB9XG4gIGxlc3NUaGFuT3JFcXVhbChvdGhlcikge1xuICAgIHJldHVybiB0aGlzLmNvbXAoXG4gICAgICAvKiB2YWxpZGF0ZXMgKi9cbiAgICAgIG90aGVyXG4gICAgKSA8PSAwO1xuICB9XG4gIHN0YXRpYyBmcm9tVmFsdWUodmFsKSB7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwibnVtYmVyXCIpIHJldHVybiBMb25nLmZyb21OdW1iZXIodmFsKTtcbiAgICByZXR1cm4gbmV3IExvbmcodmFsLmxvdywgdmFsLmhpZ2gpO1xuICB9XG59XG5jb25zdCBVWkVSTyA9IG5ldyBMb25nKDAsIDApO1xuY29uc3QgVFdPX1BXUl8xNl9EQkwgPSAxIDw8IDE2O1xuY29uc3QgVFdPX1BXUl8zMl9EQkwgPSBUV09fUFdSXzE2X0RCTCAqIFRXT19QV1JfMTZfREJMO1xuY29uc3QgVFdPX1BXUl82NF9EQkwgPSBUV09fUFdSXzMyX0RCTCAqIFRXT19QV1JfMzJfREJMO1xuY29uc3QgTUFYX1VOU0lHTkVEX1ZBTFVFID0gbmV3IExvbmcoNDI5NDk2NzI5NSB8IDAsIDQyOTQ5NjcyOTUgfCAwKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/long.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/simple_client.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/simple_client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexClient: () => (/* binding */ ConvexClient),\n/* harmony export */   setDefaultWebSocketConstructor: () => (/* binding */ setDefaultWebSocketConstructor)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(rsc)/./node_modules/convex/dist/esm/server/api.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nlet defaultWebSocketConstructor;\nfunction setDefaultWebSocketConstructor(ws) {\n  defaultWebSocketConstructor = ws;\n}\nclass ConvexClient {\n  /**\n   * Construct a client and immediately initiate a WebSocket connection to the passed address.\n   *\n   * @public\n   */\n  constructor(address, options = {}) {\n    __publicField(this, \"listeners\");\n    __publicField(this, \"_client\");\n    // A synthetic server event to run callbacks the first time\n    __publicField(this, \"callNewListenersWithCurrentValuesTimer\");\n    __publicField(this, \"_closed\");\n    __publicField(this, \"_disabled\");\n    if (options.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.validateDeploymentUrl)(address);\n    }\n    const { disabled, ...baseOptions } = options;\n    this._closed = false;\n    this._disabled = !!disabled;\n    if (defaultWebSocketConstructor && !(\"webSocketConstructor\" in baseOptions) && typeof WebSocket === \"undefined\") {\n      baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n    }\n    if (typeof window === \"undefined\" && !(\"unsavedChangesWarning\" in baseOptions)) {\n      baseOptions.unsavedChangesWarning = false;\n    }\n    if (!this.disabled) {\n      this._client = new _index_js__WEBPACK_IMPORTED_MODULE_1__.BaseConvexClient(\n        address,\n        (updatedQueries) => this._transition(updatedQueries),\n        baseOptions\n      );\n    }\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  /**\n   * Once closed no registered callbacks will fire again.\n   */\n  get closed() {\n    return this._closed;\n  }\n  get client() {\n    if (this._client) return this._client;\n    throw new Error(\"ConvexClient is disabled\");\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Call a callback whenever a new result for a query is received. The callback\n   * will run soon after being registered if a result for the query is already\n   * in memory.\n   *\n   * The return value is an {@link Unsubscribe} object which is both a function\n   * an an object with properties. Both of the patterns below work with this object:\n   *\n   *```ts\n   * // call the return value as a function\n   * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   * unsubscribe();\n   *\n   * // unpack the return value into its properties\n   * const {\n   *   getCurrentValue,\n   *   unsubscribe,\n   * } = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   *```\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - The arguments to run the query with.\n   * @param callback - Function to call when the query result updates.\n   * @param onError - Function to call when the query result updates with an error.\n   * If not provided, errors will be thrown instead of calling the callback.\n   *\n   * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n   */\n  onUpdate(query, args, callback, onError) {\n    if (this.disabled) {\n      const disabledUnsubscribe = () => {\n      };\n      const unsubscribeProps2 = {\n        unsubscribe: disabledUnsubscribe,\n        getCurrentValue: () => void 0,\n        getQueryLogs: () => void 0\n      };\n      Object.assign(disabledUnsubscribe, unsubscribeProps2);\n      return disabledUnsubscribe;\n    }\n    const { queryToken, unsubscribe } = this.client.subscribe(\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query),\n      args\n    );\n    const queryInfo = {\n      queryToken,\n      callback,\n      onError,\n      unsubscribe,\n      hasEverRun: false,\n      query,\n      args\n    };\n    this.listeners.add(queryInfo);\n    if (this.queryResultReady(queryToken) && this.callNewListenersWithCurrentValuesTimer === void 0) {\n      this.callNewListenersWithCurrentValuesTimer = setTimeout(\n        () => this.callNewListenersWithCurrentValues(),\n        0\n      );\n    }\n    const unsubscribeProps = {\n      unsubscribe: () => {\n        if (this.closed) {\n          return;\n        }\n        this.listeners.delete(queryInfo);\n        unsubscribe();\n      },\n      getCurrentValue: () => this.client.localQueryResultByToken(queryToken),\n      getQueryLogs: () => this.client.localQueryLogs(queryToken)\n    };\n    const ret = unsubscribeProps.unsubscribe;\n    Object.assign(ret, unsubscribeProps);\n    return ret;\n  }\n  // Run all callbacks that have never been run before if they have a query\n  // result available now.\n  callNewListenersWithCurrentValues() {\n    this.callNewListenersWithCurrentValuesTimer = void 0;\n    this._transition([], true);\n  }\n  queryResultReady(queryToken) {\n    return this.client.hasLocalQueryResultByToken(queryToken);\n  }\n  async close() {\n    if (this.disabled) return;\n    this.listeners.clear();\n    this._closed = true;\n    return this.client.close();\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT (typically an OpenID Connect Identity Token)\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    if (this.disabled) return;\n    this.client.setAuth(\n      fetchToken,\n      onChange ?? (() => {\n      })\n    );\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, identity) {\n    if (this.closed) {\n      throw new Error(\"ConvexClient has already been closed.\");\n    }\n    if (this.disabled) return;\n    this.client.setAdminAuth(token, identity);\n  }\n  /**\n   * @internal\n   */\n  _transition(updatedQueries, callNewListeners = false) {\n    for (const queryInfo of this.listeners) {\n      const { callback, queryToken, onError, hasEverRun } = queryInfo;\n      if (updatedQueries.includes(queryToken) || callNewListeners && !hasEverRun && this.client.hasLocalQueryResultByToken(queryToken)) {\n        queryInfo.hasEverRun = true;\n        let newValue;\n        try {\n          newValue = this.client.localQueryResultByToken(queryToken);\n        } catch (error) {\n          if (!(error instanceof Error)) throw error;\n          if (onError) {\n            onError(\n              error,\n              \"Second argument to onUpdate onError is reserved for later use\"\n            );\n          } else {\n            void Promise.reject(error);\n          }\n          continue;\n        }\n        callback(\n          newValue,\n          \"Second argument to onUpdate callback is reserved for later use\"\n        );\n      }\n    }\n  }\n  /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation(mutation, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.mutation((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(mutation), args);\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action.\n   * @returns A promise of the action's result.\n   */\n  async action(action, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.action((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(action), args);\n  }\n  /**\n   * Fetch a query result once.\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query.\n   * @returns A promise of the query's result.\n   */\n  async query(query, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    const value = this.client.localQueryResult((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n    if (value !== void 0) return Promise.resolve(value);\n    return new Promise((resolve, reject) => {\n      const { unsubscribe } = this.onUpdate(\n        query,\n        args,\n        (value2) => {\n          unsubscribe();\n          resolve(value2);\n        },\n        (e) => {\n          unsubscribe();\n          reject(e);\n        }\n      );\n    });\n  }\n}\n//# sourceMappingURL=simple_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/simple_client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/authentication_manager.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationManager: () => (/* binding */ AuthenticationManager)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"(rsc)/./node_modules/jwt-decode/build/esm/index.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst MAXIMUM_REFRESH_DELAY = 20 * 24 * 60 * 60 * 1e3;\nconst MAX_TOKEN_CONFIRMATION_ATTEMPTS = 2;\nclass AuthenticationManager {\n  constructor(syncState, callbacks, config) {\n    __publicField(this, \"authState\", { state: \"noAuth\" });\n    // Used to detect races involving `setConfig` calls\n    // while a token is being fetched.\n    __publicField(this, \"configVersion\", 0);\n    // Shared by the BaseClient so that the auth manager can easily inspect it\n    __publicField(this, \"syncState\");\n    // Passed down by BaseClient, sends a message to the server\n    __publicField(this, \"authenticate\");\n    __publicField(this, \"stopSocket\");\n    __publicField(this, \"tryRestartSocket\");\n    __publicField(this, \"pauseSocket\");\n    __publicField(this, \"resumeSocket\");\n    // Passed down by BaseClient, sends a message to the server\n    __publicField(this, \"clearAuth\");\n    __publicField(this, \"logger\");\n    __publicField(this, \"refreshTokenLeewaySeconds\");\n    // Number of times we have attempted to confirm the latest token. We retry up\n    // to `MAX_TOKEN_CONFIRMATION_ATTEMPTS` times.\n    __publicField(this, \"tokenConfirmationAttempts\", 0);\n    this.syncState = syncState;\n    this.authenticate = callbacks.authenticate;\n    this.stopSocket = callbacks.stopSocket;\n    this.tryRestartSocket = callbacks.tryRestartSocket;\n    this.pauseSocket = callbacks.pauseSocket;\n    this.resumeSocket = callbacks.resumeSocket;\n    this.clearAuth = callbacks.clearAuth;\n    this.logger = config.logger;\n    this.refreshTokenLeewaySeconds = config.refreshTokenLeewaySeconds;\n  }\n  async setConfig(fetchToken, onChange) {\n    this.resetAuthState();\n    this._logVerbose(\"pausing WS for auth token fetch\");\n    this.pauseSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(fetchToken, {\n      forceRefreshToken: false\n    });\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfCachedToken\",\n        config: { fetchToken, onAuthChange: onChange },\n        hasRetried: false\n      });\n      this.authenticate(token.value);\n    } else {\n      this.setAuthState({\n        state: \"initialRefetch\",\n        config: { fetchToken, onAuthChange: onChange }\n      });\n      await this.refetchToken();\n    }\n    this._logVerbose(\"resuming WS after auth token fetch\");\n    this.resumeSocket();\n  }\n  onTransition(serverMessage) {\n    if (!this.syncState.isCurrentOrNewerAuthVersion(\n      serverMessage.endVersion.identity\n    )) {\n      return;\n    }\n    if (serverMessage.endVersion.identity <= serverMessage.startVersion.identity) {\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n      this._logVerbose(\"server confirmed auth token is valid\");\n      void this.refetchToken();\n      this.authState.config.onAuthChange(true);\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this._logVerbose(\"server confirmed new auth token is valid\");\n      this.scheduleTokenRefetch(this.authState.token);\n      this.tokenConfirmationAttempts = 0;\n      if (!this.authState.hadAuth) {\n        this.authState.config.onAuthChange(true);\n      }\n    }\n  }\n  onAuthError(serverMessage) {\n    if (serverMessage.authUpdateAttempted === false && (this.authState.state === \"waitingForServerConfirmationOfFreshToken\" || this.authState.state === \"waitingForServerConfirmationOfCachedToken\")) {\n      this._logVerbose(\"ignoring non-auth token expired error\");\n      return;\n    }\n    const { baseVersion } = serverMessage;\n    if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n      this._logVerbose(\"ignoring auth error for previous auth attempt\");\n      return;\n    }\n    void this.tryToReauthenticate(serverMessage);\n    return;\n  }\n  // This is similar to `refetchToken` defined below, in fact we\n  // don't represent them as different states, but it is different\n  // in that we pause the WebSocket so that mutations\n  // don't retry with bad auth.\n  async tryToReauthenticate(serverMessage) {\n    this._logVerbose(`attempting to reauthenticate: ${serverMessage.error}`);\n    if (\n      // No way to fetch another token, kaboom\n      this.authState.state === \"noAuth\" || // We failed on a fresh token. After a small number of retries, we give up\n      // and clear the auth state to avoid infinite retries.\n      this.authState.state === \"waitingForServerConfirmationOfFreshToken\" && this.tokenConfirmationAttempts >= MAX_TOKEN_CONFIRMATION_ATTEMPTS\n    ) {\n      this.logger.error(\n        `Failed to authenticate: \"${serverMessage.error}\", check your server auth config`\n      );\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      if (this.authState.state !== \"noAuth\") {\n        this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n      }\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this.tokenConfirmationAttempts++;\n      this._logVerbose(\n        `retrying reauthentication, ${MAX_TOKEN_CONFIRMATION_ATTEMPTS - this.tokenConfirmationAttempts} attempts remaining`\n      );\n    }\n    await this.stopSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true\n      }\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value && this.syncState.isNewAuth(token.value)) {\n      this.authenticate(token.value);\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfFreshToken\",\n        config: this.authState.config,\n        token: token.value,\n        hadAuth: this.authState.state === \"notRefetching\" || this.authState.state === \"waitingForScheduledRefetch\"\n      });\n    } else {\n      this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this.tryRestartSocket();\n  }\n  // Force refetch the token and schedule another refetch\n  // before the token expires - an active client should never\n  // need to reauthenticate.\n  async refetchToken() {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    this._logVerbose(\"refetching auth token\");\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true\n      }\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      if (this.syncState.isNewAuth(token.value)) {\n        this.setAuthState({\n          state: \"waitingForServerConfirmationOfFreshToken\",\n          hadAuth: this.syncState.hasAuth(),\n          token: token.value,\n          config: this.authState.config\n        });\n        this.authenticate(token.value);\n      } else {\n        this.setAuthState({\n          state: \"notRefetching\",\n          config: this.authState.config\n        });\n      }\n    } else {\n      this._logVerbose(\"refetching token failed\");\n      if (this.syncState.hasAuth()) {\n        this.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this._logVerbose(\n      \"restarting WS after auth token fetch (if currently stopped)\"\n    );\n    this.tryRestartSocket();\n  }\n  scheduleTokenRefetch(token) {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    const decodedToken = this.decodeToken(token);\n    if (!decodedToken) {\n      this.logger.error(\n        \"Auth token is not a valid JWT, cannot refetch the token\"\n      );\n      return;\n    }\n    const { iat, exp } = decodedToken;\n    if (!iat || !exp) {\n      this.logger.error(\n        \"Auth token does not have required fields, cannot refetch the token\"\n      );\n      return;\n    }\n    const tokenValiditySeconds = exp - iat;\n    if (tokenValiditySeconds <= 2) {\n      this.logger.error(\n        \"Auth token does not live long enough, cannot refetch the token\"\n      );\n      return;\n    }\n    let delay = Math.min(\n      MAXIMUM_REFRESH_DELAY,\n      (tokenValiditySeconds - this.refreshTokenLeewaySeconds) * 1e3\n    );\n    if (delay <= 0) {\n      this.logger.warn(\n        `Refetching auth token immediately, configured leeway ${this.refreshTokenLeewaySeconds}s is larger than the token's lifetime ${tokenValiditySeconds}s`\n      );\n      delay = 0;\n    }\n    const refetchTokenTimeoutId = setTimeout(() => {\n      this._logVerbose(\"running scheduled token refetch\");\n      void this.refetchToken();\n    }, delay);\n    this.setAuthState({\n      state: \"waitingForScheduledRefetch\",\n      refetchTokenTimeoutId,\n      config: this.authState.config\n    });\n    this._logVerbose(\n      `scheduled preemptive auth token refetching in ${delay}ms`\n    );\n  }\n  // Protects against simultaneous calls to `setConfig`\n  // while we're fetching a token\n  async fetchTokenAndGuardAgainstRace(fetchToken, fetchArgs) {\n    const originalConfigVersion = ++this.configVersion;\n    this._logVerbose(\n      `fetching token with config version ${originalConfigVersion}`\n    );\n    const token = await fetchToken(fetchArgs);\n    if (this.configVersion !== originalConfigVersion) {\n      this._logVerbose(\n        `stale config version, expected ${originalConfigVersion}, got ${this.configVersion}`\n      );\n      return { isFromOutdatedConfig: true };\n    }\n    return { isFromOutdatedConfig: false, value: token };\n  }\n  stop() {\n    this.resetAuthState();\n    this.configVersion++;\n    this._logVerbose(`config version bumped to ${this.configVersion}`);\n  }\n  setAndReportAuthFailed(onAuthChange) {\n    onAuthChange(false);\n    this.resetAuthState();\n  }\n  resetAuthState() {\n    this.setAuthState({ state: \"noAuth\" });\n  }\n  setAuthState(newAuth) {\n    const authStateForLog = newAuth.state === \"waitingForServerConfirmationOfFreshToken\" ? {\n      hadAuth: newAuth.hadAuth,\n      state: newAuth.state,\n      token: `...${newAuth.token.slice(-7)}`\n    } : { state: newAuth.state };\n    this._logVerbose(\n      `setting auth state to ${JSON.stringify(authStateForLog)}`\n    );\n    switch (newAuth.state) {\n      case \"waitingForScheduledRefetch\":\n      case \"notRefetching\":\n      case \"noAuth\":\n        this.tokenConfirmationAttempts = 0;\n        break;\n      case \"waitingForServerConfirmationOfFreshToken\":\n      case \"waitingForServerConfirmationOfCachedToken\":\n      case \"initialRefetch\":\n        break;\n      default: {\n        const _typeCheck = newAuth;\n      }\n    }\n    if (this.authState.state === \"waitingForScheduledRefetch\") {\n      clearTimeout(this.authState.refetchTokenTimeoutId);\n      this.syncState.markAuthCompletion();\n    }\n    this.authState = newAuth;\n  }\n  decodeToken(token) {\n    try {\n      return (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__.jwtDecode)(token);\n    } catch (e) {\n      this._logVerbose(\n        `Error decoding token: ${e instanceof Error ? e.message : \"Unknown error\"}`\n      );\n      return null;\n    }\n  }\n  _logVerbose(message) {\n    this.logger.logVerbose(`${message} [v${this.configVersion}]`);\n  }\n}\n//# sourceMappingURL=authentication_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* binding */ BaseConvexClient)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _local_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local_state.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/local_state.js\");\n/* harmony import */ var _request_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./request_manager.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\");\n/* harmony import */ var _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimistic_updates_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\");\n/* harmony import */ var _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./remote_query_set.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_socket_manager.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/session.js\");\n/* harmony import */ var _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authentication_manager.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\");\n/* harmony import */ var _metrics_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/metrics.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../values/errors.js */ \"(rsc)/./node_modules/convex/dist/esm/values/errors.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass BaseConvexClient {\n  /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param onTransition - A callback receiving an array of query tokens\n   * corresponding to query results that have changed -- additional handlers\n   * can be added via `addOnTransitionHandler`.\n   * @param options - See {@link BaseConvexClientOptions} for a full description.\n   */\n  constructor(address, onTransition, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"state\");\n    __publicField(this, \"requestManager\");\n    __publicField(this, \"webSocketManager\");\n    __publicField(this, \"authenticationManager\");\n    __publicField(this, \"remoteQuerySet\");\n    __publicField(this, \"optimisticQueryResults\");\n    __publicField(this, \"_transitionHandlerCounter\", 0);\n    __publicField(this, \"_nextRequestId\");\n    __publicField(this, \"_onTransitionFns\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_sessionId\");\n    __publicField(this, \"firstMessageReceived\", false);\n    __publicField(this, \"debug\");\n    __publicField(this, \"logger\");\n    __publicField(this, \"maxObservedTimestamp\");\n    // Instance property so that `mark()` doesn't need to be called as a method.\n    __publicField(this, \"mark\", (name) => {\n      if (this.debug) {\n        (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.mark)(name, this.sessionId);\n      }\n    });\n    if (typeof address === \"object\") {\n      throw new Error(\n        \"Passing a ClientConfig object is no longer supported. Pass the URL of the Convex deployment as a string directly.\"\n      );\n    }\n    if (options?.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.validateDeploymentUrl)(address);\n    }\n    options = { ...options };\n    const authRefreshTokenLeewaySeconds = options.authRefreshTokenLeewaySeconds ?? 2;\n    let webSocketConstructor = options.webSocketConstructor;\n    if (!webSocketConstructor && typeof WebSocket === \"undefined\") {\n      throw new Error(\n        \"No WebSocket global variable defined! To use Convex in an environment without WebSocket try the HTTP client: https://docs.convex.dev/api/classes/browser.ConvexHttpClient\"\n      );\n    }\n    webSocketConstructor = webSocketConstructor || WebSocket;\n    this.debug = options.reportDebugInfoToConvex ?? false;\n    this.address = address;\n    this.logger = options.logger === false ? (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.instantiateNoopLogger)({ verbose: options.verbose ?? false }) : options.logger !== true && options.logger ? options.logger : (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.instantiateDefaultLogger)({ verbose: options.verbose ?? false });\n    const i = address.search(\"://\");\n    if (i === -1) {\n      throw new Error(\"Provided address was not an absolute URL.\");\n    }\n    const origin = address.substring(i + 3);\n    const protocol = address.substring(0, i);\n    let wsProtocol;\n    if (protocol === \"http\") {\n      wsProtocol = \"ws\";\n    } else if (protocol === \"https\") {\n      wsProtocol = \"wss\";\n    } else {\n      throw new Error(`Unknown parent protocol ${protocol}`);\n    }\n    const wsUri = `${wsProtocol}://${origin}/api/${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}/sync`;\n    this.state = new _local_state_js__WEBPACK_IMPORTED_MODULE_3__.LocalSyncState();\n    this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet(\n      (queryId) => this.state.queryPath(queryId),\n      this.logger\n    );\n    this.requestManager = new _request_manager_js__WEBPACK_IMPORTED_MODULE_4__.RequestManager(this.logger);\n    this.authenticationManager = new _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__.AuthenticationManager(\n      this.state,\n      {\n        authenticate: (token) => {\n          const message = this.state.setAuth(token);\n          this.webSocketManager.sendMessage(message);\n          return message.baseVersion;\n        },\n        stopSocket: () => this.webSocketManager.stop(),\n        tryRestartSocket: () => this.webSocketManager.tryRestart(),\n        pauseSocket: () => {\n          this.webSocketManager.pause();\n          this.state.pause();\n        },\n        resumeSocket: () => this.webSocketManager.resume(),\n        clearAuth: () => {\n          this.clearAuth();\n        }\n      },\n      {\n        logger: this.logger,\n        refreshTokenLeewaySeconds: authRefreshTokenLeewaySeconds\n      }\n    );\n    this.optimisticQueryResults = new _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__.OptimisticQueryResults();\n    this.addOnTransitionHandler((transition) => {\n      onTransition(transition.queries.map((q) => q.token));\n    });\n    this._nextRequestId = 0;\n    this._sessionId = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.newSessionId)();\n    const { unsavedChangesWarning } = options;\n    if (typeof window === \"undefined\" || typeof window.addEventListener === \"undefined\") {\n      if (unsavedChangesWarning === true) {\n        throw new Error(\n          \"unsavedChangesWarning requested, but window.addEventListener not found! Remove {unsavedChangesWarning: true} from Convex client options.\"\n        );\n      }\n    } else if (unsavedChangesWarning !== false) {\n      window.addEventListener(\"beforeunload\", (e) => {\n        if (this.requestManager.hasIncompleteRequests()) {\n          e.preventDefault();\n          const confirmationMessage = \"Are you sure you want to leave? Your changes may not be saved.\";\n          (e || window.event).returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      });\n    }\n    this.webSocketManager = new _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__.WebSocketManager(\n      wsUri,\n      {\n        onOpen: (reconnectMetadata) => {\n          this.mark(\"convexWebSocketOpen\");\n          this.webSocketManager.sendMessage({\n            ...reconnectMetadata,\n            type: \"Connect\",\n            sessionId: this._sessionId,\n            maxObservedTimestamp: this.maxObservedTimestamp\n          });\n          const oldRemoteQueryResults = new Set(\n            this.remoteQuerySet.remoteQueryResults().keys()\n          );\n          this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet(\n            (queryId) => this.state.queryPath(queryId),\n            this.logger\n          );\n          const [querySetModification, authModification] = this.state.restart(\n            oldRemoteQueryResults\n          );\n          if (authModification) {\n            this.webSocketManager.sendMessage(authModification);\n          }\n          this.webSocketManager.sendMessage(querySetModification);\n          for (const message of this.requestManager.restart()) {\n            this.webSocketManager.sendMessage(message);\n          }\n        },\n        onResume: () => {\n          const [querySetModification, authModification] = this.state.resume();\n          if (authModification) {\n            this.webSocketManager.sendMessage(authModification);\n          }\n          if (querySetModification) {\n            this.webSocketManager.sendMessage(querySetModification);\n          }\n          for (const message of this.requestManager.resume()) {\n            this.webSocketManager.sendMessage(message);\n          }\n        },\n        onMessage: (serverMessage) => {\n          if (!this.firstMessageReceived) {\n            this.firstMessageReceived = true;\n            this.mark(\"convexFirstMessageReceived\");\n            this.reportMarks();\n          }\n          switch (serverMessage.type) {\n            case \"Transition\": {\n              this.observedTimestamp(serverMessage.endVersion.ts);\n              this.authenticationManager.onTransition(serverMessage);\n              this.remoteQuerySet.transition(serverMessage);\n              this.state.transition(serverMessage);\n              const completedRequests = this.requestManager.removeCompleted(\n                this.remoteQuerySet.timestamp()\n              );\n              this.notifyOnQueryResultChanges(completedRequests);\n              break;\n            }\n            case \"MutationResponse\": {\n              if (serverMessage.success) {\n                this.observedTimestamp(serverMessage.ts);\n              }\n              const completedMutationInfo = this.requestManager.onResponse(serverMessage);\n              if (completedMutationInfo !== null) {\n                this.notifyOnQueryResultChanges(\n                  /* @__PURE__ */ new Map([\n                    [\n                      completedMutationInfo.requestId,\n                      completedMutationInfo.result\n                    ]\n                  ])\n                );\n              }\n              break;\n            }\n            case \"ActionResponse\": {\n              this.requestManager.onResponse(serverMessage);\n              break;\n            }\n            case \"AuthError\": {\n              this.authenticationManager.onAuthError(serverMessage);\n              break;\n            }\n            case \"FatalError\": {\n              const error = (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logFatalError)(this.logger, serverMessage.error);\n              void this.webSocketManager.terminate();\n              throw error;\n            }\n            case \"Ping\":\n              break;\n            // do nothing\n            default: {\n              const _typeCheck = serverMessage;\n            }\n          }\n          return {\n            hasSyncedPastLastReconnect: this.hasSyncedPastLastReconnect()\n          };\n        }\n      },\n      webSocketConstructor,\n      this.logger\n    );\n    this.mark(\"convexClientConstructed\");\n  }\n  /**\n   * Return true if there is outstanding work from prior to the time of the most recent restart.\n   * This indicates that the client has not proven itself to have gotten past the issue that\n   * potentially led to the restart. Use this to influence when to reset backoff after a failure.\n   */\n  hasSyncedPastLastReconnect() {\n    const hasSyncedPastLastReconnect = this.requestManager.hasSyncedPastLastReconnect() || this.state.hasSyncedPastLastReconnect();\n    return hasSyncedPastLastReconnect;\n  }\n  observedTimestamp(observedTs) {\n    if (this.maxObservedTimestamp === void 0 || this.maxObservedTimestamp.lessThanOrEqual(observedTs)) {\n      this.maxObservedTimestamp = observedTs;\n    }\n  }\n  getMaxObservedTimestamp() {\n    return this.maxObservedTimestamp;\n  }\n  /**\n   * Compute the current query results based on the remoteQuerySet and the\n   * current optimistic updates and call `onTransition` for all the changed\n   * queries.\n   *\n   * @param completedMutations - A set of mutation IDs whose optimistic updates\n   * are no longer needed.\n   */\n  notifyOnQueryResultChanges(completedRequests) {\n    const remoteQueryResults = this.remoteQuerySet.remoteQueryResults();\n    const queryTokenToValue = /* @__PURE__ */ new Map();\n    for (const [queryId, result] of remoteQueryResults) {\n      const queryToken = this.state.queryToken(queryId);\n      if (queryToken !== null) {\n        const query = {\n          result,\n          udfPath: this.state.queryPath(queryId),\n          args: this.state.queryArgs(queryId)\n        };\n        queryTokenToValue.set(queryToken, query);\n      }\n    }\n    const changedQueryTokens = this.optimisticQueryResults.ingestQueryResultsFromServer(\n      queryTokenToValue,\n      new Set(completedRequests.keys())\n    );\n    this.handleTransition({\n      queries: changedQueryTokens.map((token) => ({\n        token,\n        modification: {\n          kind: \"Updated\",\n          result: queryTokenToValue.get(token).result\n        }\n      })),\n      reflectedMutations: Array.from(completedRequests).map(\n        ([requestId, result]) => ({\n          requestId,\n          result\n        })\n      ),\n      timestamp: this.remoteQuerySet.timestamp()\n    });\n  }\n  handleTransition(transition) {\n    for (const fn of this._onTransitionFns.values()) {\n      fn(transition);\n    }\n  }\n  /**\n   * Add a handler that will be called on a transition.\n   *\n   * Any external side effects (e.g. setting React state) should be handled here.\n   *\n   * @param fn\n   *\n   * @returns\n   */\n  addOnTransitionHandler(fn) {\n    const id = this._transitionHandlerCounter++;\n    this._onTransitionFns.set(id, fn);\n    return () => this._onTransitionFns.delete(id);\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    void this.authenticationManager.setConfig(fetchToken, onChange);\n  }\n  hasAuth() {\n    return this.state.hasAuth();\n  }\n  /** @internal */\n  setAdminAuth(value, fakeUserIdentity) {\n    const message = this.state.setAdminAuth(value, fakeUserIdentity);\n    this.webSocketManager.sendMessage(message);\n  }\n  clearAuth() {\n    const message = this.state.clearAuth();\n    this.webSocketManager.sendMessage(message);\n  }\n  /**\n     * Subscribe to a query function.\n     *\n     * Whenever this query's result changes, the `onTransition` callback\n     * passed into the constructor will be called.\n     *\n     * @param name - The name of the query.\n     * @param args - An arguments object for the query. If this is omitted, the\n     * arguments will be `{}`.\n     * @param options - A {@link SubscribeOptions} options object for this query.\n  \n     * @returns An object containing a {@link QueryToken} corresponding to this\n     * query and an `unsubscribe` callback.\n     */\n  subscribe(name, args, options) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const { modification, queryToken, unsubscribe } = this.state.subscribe(\n      name,\n      argsObject,\n      options?.journal,\n      options?.componentPath\n    );\n    if (modification !== null) {\n      this.webSocketManager.sendMessage(modification);\n    }\n    return {\n      queryToken,\n      unsubscribe: () => {\n        const modification2 = unsubscribe();\n        if (modification2) {\n          this.webSocketManager.sendMessage(modification2);\n        }\n      }\n    };\n  }\n  /**\n   * A query result based only on the current, local state.\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   */\n  localQueryResult(udfPath, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n  /**\n   * Get query result by query token based on current, local state\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   *\n   * @internal\n   */\n  localQueryResultByToken(queryToken) {\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n  /**\n   * Whether local query result is available for a toke.\n   *\n   * This method does not throw if the result is an error.\n   *\n   * @internal\n   */\n  hasLocalQueryResultByToken(queryToken) {\n    return this.optimisticQueryResults.hasQueryResult(queryToken);\n  }\n  /**\n   * @internal\n   */\n  localQueryLogs(udfPath, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n    return this.optimisticQueryResults.queryLogs(queryToken);\n  }\n  /**\n   * Retrieve the current {@link QueryJournal} for this query function.\n   *\n   * If we have not yet received a result for this query, this will be `undefined`.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for this query.\n   * @returns The query's {@link QueryJournal} or `undefined`.\n   */\n  queryJournal(name, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(name, argsObject);\n    return this.state.queryJournal(queryToken);\n  }\n  /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */\n  connectionState() {\n    const wsConnectionState = this.webSocketManager.connectionState();\n    return {\n      hasInflightRequests: this.requestManager.hasInflightRequests(),\n      isWebSocketConnected: wsConnectionState.isConnected,\n      hasEverConnected: wsConnectionState.hasEverConnected,\n      connectionCount: wsConnectionState.connectionCount,\n      connectionRetries: wsConnectionState.connectionRetries,\n      timeOfOldestInflightRequest: this.requestManager.timeOfOldestInflightRequest(),\n      inflightMutations: this.requestManager.inflightMutations(),\n      inflightActions: this.requestManager.inflightActions()\n    };\n  }\n  /**\n     * Execute a mutation function.\n     *\n     * @param name - The name of the mutation.\n     * @param args - An arguments object for the mutation. If this is omitted,\n     * the arguments will be `{}`.\n     * @param options - A {@link MutationOptions} options object for this mutation.\n  \n     * @returns - A promise of the mutation's result.\n     */\n  async mutation(name, args, options) {\n    const result = await this.mutationInternal(name, args, options);\n    if (!result.success) {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError(\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result)\n          )\n        );\n      }\n      throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result));\n    }\n    return result.value;\n  }\n  /**\n   * @internal\n   */\n  async mutationInternal(udfPath, args, options, componentPath) {\n    const { mutationPromise } = this.enqueueMutation(\n      udfPath,\n      args,\n      options,\n      componentPath\n    );\n    return mutationPromise;\n  }\n  /**\n   * @internal\n   */\n  enqueueMutation(udfPath, args, options, componentPath) {\n    const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    this.tryReportLongDisconnect();\n    const requestId = this.nextRequestId;\n    this._nextRequestId++;\n    if (options !== void 0) {\n      const optimisticUpdate = options.optimisticUpdate;\n      if (optimisticUpdate !== void 0) {\n        const wrappedUpdate = (localQueryStore) => {\n          optimisticUpdate(localQueryStore, mutationArgs);\n        };\n        const changedQueryTokens = this.optimisticQueryResults.applyOptimisticUpdate(\n          wrappedUpdate,\n          requestId\n        );\n        const changedQueries = changedQueryTokens.map((token) => {\n          const localResult = this.localQueryResultByToken(token);\n          return {\n            token,\n            modification: {\n              kind: \"Updated\",\n              result: localResult === void 0 ? void 0 : {\n                success: true,\n                value: localResult,\n                logLines: []\n              }\n            }\n          };\n        });\n        this.handleTransition({\n          queries: changedQueries,\n          reflectedMutations: [],\n          timestamp: this.remoteQuerySet.timestamp()\n        });\n      }\n    }\n    const message = {\n      type: \"Mutation\",\n      requestId,\n      udfPath,\n      componentPath,\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(mutationArgs)]\n    };\n    const mightBeSent = this.webSocketManager.sendMessage(message);\n    const mutationPromise = this.requestManager.request(message, mightBeSent);\n    return {\n      requestId,\n      mutationPromise\n    };\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param name - The name of the action.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action(name, args) {\n    const result = await this.actionInternal(name, args);\n    if (!result.success) {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result))\n        );\n      }\n      throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result));\n    }\n    return result.value;\n  }\n  /**\n   * @internal\n   */\n  async actionInternal(udfPath, args, componentPath) {\n    const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const requestId = this.nextRequestId;\n    this._nextRequestId++;\n    this.tryReportLongDisconnect();\n    const message = {\n      type: \"Action\",\n      requestId,\n      udfPath,\n      componentPath,\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(actionArgs)]\n    };\n    const mightBeSent = this.webSocketManager.sendMessage(message);\n    return this.requestManager.request(message, mightBeSent);\n  }\n  /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with an {@link BaseConvexClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */\n  async close() {\n    this.authenticationManager.stop();\n    return this.webSocketManager.terminate();\n  }\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n  /**\n   * @internal\n   */\n  get nextRequestId() {\n    return this._nextRequestId;\n  }\n  /**\n   * @internal\n   */\n  get sessionId() {\n    return this._sessionId;\n  }\n  /**\n   * Reports performance marks to the server. This should only be called when\n   * we have a functional websocket.\n   */\n  reportMarks() {\n    if (this.debug) {\n      const report = (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.getMarksReport)(this.sessionId);\n      this.webSocketManager.sendMessage({\n        type: \"Event\",\n        eventType: \"ClientConnect\",\n        event: report\n      });\n    }\n  }\n  tryReportLongDisconnect() {\n    if (!this.debug) {\n      return;\n    }\n    const timeOfOldestRequest = this.connectionState().timeOfOldestInflightRequest;\n    if (timeOfOldestRequest === null || Date.now() - timeOfOldestRequest.getTime() <= 60 * 1e3) {\n      return;\n    }\n    const endpoint = `${this.address}/api/debug_event`;\n    fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}`\n      },\n      body: JSON.stringify({ event: \"LongWebsocketDisconnect\" })\n    }).then((response) => {\n      if (!response.ok) {\n        this.logger.warn(\n          \"Analytics request failed with response:\",\n          response.body\n        );\n      }\n    }).catch((error) => {\n      this.logger.warn(\"Analytics response failed with error:\", error);\n    });\n  }\n}\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/local_state.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/local_state.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalSyncState: () => (/* binding */ LocalSyncState)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass LocalSyncState {\n  constructor() {\n    __publicField(this, \"nextQueryId\");\n    __publicField(this, \"querySetVersion\");\n    __publicField(this, \"querySet\");\n    __publicField(this, \"queryIdToToken\");\n    __publicField(this, \"identityVersion\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"outstandingQueriesOlderThanRestart\");\n    __publicField(this, \"outstandingAuthOlderThanRestart\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"pendingQuerySetModifications\");\n    this.nextQueryId = 0;\n    this.querySetVersion = 0;\n    this.identityVersion = 0;\n    this.querySet = /* @__PURE__ */ new Map();\n    this.queryIdToToken = /* @__PURE__ */ new Map();\n    this.outstandingQueriesOlderThanRestart = /* @__PURE__ */ new Set();\n    this.outstandingAuthOlderThanRestart = false;\n    this.paused = false;\n    this.pendingQuerySetModifications = /* @__PURE__ */ new Map();\n  }\n  hasSyncedPastLastReconnect() {\n    return this.outstandingQueriesOlderThanRestart.size === 0 && !this.outstandingAuthOlderThanRestart;\n  }\n  markAuthCompletion() {\n    this.outstandingAuthOlderThanRestart = false;\n  }\n  subscribe(udfPath, args, journal, componentPath) {\n    const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== void 0) {\n      existingEntry.numSubscribers += 1;\n      return {\n        queryToken,\n        modification: null,\n        unsubscribe: () => this.removeSubscriber(queryToken)\n      };\n    } else {\n      const queryId = this.nextQueryId++;\n      const query = {\n        id: queryId,\n        canonicalizedUdfPath,\n        args,\n        numSubscribers: 1,\n        journal,\n        componentPath\n      };\n      this.querySet.set(queryToken, query);\n      this.queryIdToToken.set(queryId, queryToken);\n      const baseVersion = this.querySetVersion;\n      const newVersion = this.querySetVersion + 1;\n      const add = {\n        type: \"Add\",\n        queryId,\n        udfPath: canonicalizedUdfPath,\n        args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)],\n        journal,\n        componentPath\n      };\n      if (this.paused) {\n        this.pendingQuerySetModifications.set(queryId, add);\n      } else {\n        this.querySetVersion = newVersion;\n      }\n      const modification = {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [add]\n      };\n      return {\n        queryToken,\n        modification,\n        unsubscribe: () => this.removeSubscriber(queryToken)\n      };\n    }\n  }\n  transition(transition) {\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\":\n        case \"QueryFailed\": {\n          this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n          const journal = modification.journal;\n          if (journal !== void 0) {\n            const queryToken = this.queryIdToToken.get(modification.queryId);\n            if (queryToken !== void 0) {\n              this.querySet.get(queryToken).journal = journal;\n            }\n          }\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n          break;\n        }\n        default: {\n          const _ = modification;\n          throw new Error(`Invalid modification ${modification.type}`);\n        }\n      }\n    }\n  }\n  queryId(udfPath, args) {\n    const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== void 0) {\n      return existingEntry.id;\n    }\n    return null;\n  }\n  isCurrentOrNewerAuthVersion(version) {\n    return version >= this.identityVersion;\n  }\n  setAuth(value) {\n    this.auth = {\n      tokenType: \"User\",\n      value\n    };\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      baseVersion,\n      ...this.auth\n    };\n  }\n  setAdminAuth(value, actingAs) {\n    const auth = {\n      tokenType: \"Admin\",\n      value,\n      impersonating: actingAs\n    };\n    this.auth = auth;\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      baseVersion,\n      ...auth\n    };\n  }\n  clearAuth() {\n    this.auth = void 0;\n    this.markAuthCompletion();\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      tokenType: \"None\",\n      baseVersion\n    };\n  }\n  hasAuth() {\n    return !!this.auth;\n  }\n  isNewAuth(value) {\n    return this.auth?.value !== value;\n  }\n  queryPath(queryId) {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs).canonicalizedUdfPath;\n    }\n    return null;\n  }\n  queryArgs(queryId) {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs).args;\n    }\n    return null;\n  }\n  queryToken(queryId) {\n    return this.queryIdToToken.get(queryId) ?? null;\n  }\n  queryJournal(queryToken) {\n    return this.querySet.get(queryToken)?.journal;\n  }\n  restart(oldRemoteQueryResults) {\n    this.unpause();\n    this.outstandingQueriesOlderThanRestart.clear();\n    const modifications = [];\n    for (const localQuery of this.querySet.values()) {\n      const add = {\n        type: \"Add\",\n        queryId: localQuery.id,\n        udfPath: localQuery.canonicalizedUdfPath,\n        args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(localQuery.args)],\n        journal: localQuery.journal,\n        componentPath: localQuery.componentPath\n      };\n      modifications.push(add);\n      if (!oldRemoteQueryResults.has(localQuery.id)) {\n        this.outstandingQueriesOlderThanRestart.add(localQuery.id);\n      }\n    }\n    this.querySetVersion = 1;\n    const querySet = {\n      type: \"ModifyQuerySet\",\n      baseVersion: 0,\n      newVersion: 1,\n      modifications\n    };\n    if (!this.auth) {\n      this.identityVersion = 0;\n      return [querySet, void 0];\n    }\n    this.outstandingAuthOlderThanRestart = true;\n    const authenticate = {\n      type: \"Authenticate\",\n      baseVersion: 0,\n      ...this.auth\n    };\n    this.identityVersion = 1;\n    return [querySet, authenticate];\n  }\n  pause() {\n    this.paused = true;\n  }\n  resume() {\n    const querySet = this.pendingQuerySetModifications.size > 0 ? {\n      type: \"ModifyQuerySet\",\n      baseVersion: this.querySetVersion,\n      newVersion: ++this.querySetVersion,\n      modifications: Array.from(\n        this.pendingQuerySetModifications.values()\n      )\n    } : void 0;\n    const authenticate = this.auth !== void 0 ? {\n      type: \"Authenticate\",\n      baseVersion: this.identityVersion++,\n      ...this.auth\n    } : void 0;\n    this.unpause();\n    return [querySet, authenticate];\n  }\n  unpause() {\n    this.paused = false;\n    this.pendingQuerySetModifications.clear();\n  }\n  removeSubscriber(queryToken) {\n    const localQuery = this.querySet.get(queryToken);\n    if (localQuery.numSubscribers > 1) {\n      localQuery.numSubscribers -= 1;\n      return null;\n    } else {\n      this.querySet.delete(queryToken);\n      this.queryIdToToken.delete(localQuery.id);\n      this.outstandingQueriesOlderThanRestart.delete(localQuery.id);\n      const baseVersion = this.querySetVersion;\n      const newVersion = this.querySetVersion + 1;\n      const remove = {\n        type: \"Remove\",\n        queryId: localQuery.id\n      };\n      if (this.paused) {\n        if (this.pendingQuerySetModifications.has(localQuery.id)) {\n          this.pendingQuerySetModifications.delete(localQuery.id);\n        } else {\n          this.pendingQuerySetModifications.set(localQuery.id, remove);\n        }\n      } else {\n        this.querySetVersion = newVersion;\n      }\n      return {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [remove]\n      };\n    }\n  }\n}\n//# sourceMappingURL=local_state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/local_state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/metrics.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/metrics.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMarksReport: () => (/* binding */ getMarksReport),\n/* harmony export */   mark: () => (/* binding */ mark)\n/* harmony export */ });\n\nconst markNames = [\n  \"convexClientConstructed\",\n  \"convexWebSocketOpen\",\n  \"convexFirstMessageReceived\"\n];\nfunction mark(name, sessionId) {\n  const detail = { sessionId };\n  if (typeof performance === \"undefined\" || !performance.mark) return;\n  performance.mark(name, { detail });\n}\nfunction performanceMarkToJson(mark2) {\n  let name = mark2.name.slice(\"convex\".length);\n  name = name.charAt(0).toLowerCase() + name.slice(1);\n  return {\n    name,\n    startTime: mark2.startTime\n  };\n}\nfunction getMarksReport(sessionId) {\n  if (typeof performance === \"undefined\" || !performance.getEntriesByName) {\n    return [];\n  }\n  const allMarks = [];\n  for (const name of markNames) {\n    const marks = performance.getEntriesByName(name).filter((entry) => entry.entryType === \"mark\").filter((mark2) => mark2.detail.sessionId === sessionId);\n    allMarks.push(...marks);\n  }\n  return allMarks.map(performanceMarkToJson);\n}\n//# sourceMappingURL=metrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxtQkFBbUI7QUFDbkI7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL21ldHJpY3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBtYXJrTmFtZXMgPSBbXG4gIFwiY29udmV4Q2xpZW50Q29uc3RydWN0ZWRcIixcbiAgXCJjb252ZXhXZWJTb2NrZXRPcGVuXCIsXG4gIFwiY29udmV4Rmlyc3RNZXNzYWdlUmVjZWl2ZWRcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBtYXJrKG5hbWUsIHNlc3Npb25JZCkge1xuICBjb25zdCBkZXRhaWwgPSB7IHNlc3Npb25JZCB9O1xuICBpZiAodHlwZW9mIHBlcmZvcm1hbmNlID09PSBcInVuZGVmaW5lZFwiIHx8ICFwZXJmb3JtYW5jZS5tYXJrKSByZXR1cm47XG4gIHBlcmZvcm1hbmNlLm1hcmsobmFtZSwgeyBkZXRhaWwgfSk7XG59XG5mdW5jdGlvbiBwZXJmb3JtYW5jZU1hcmtUb0pzb24obWFyazIpIHtcbiAgbGV0IG5hbWUgPSBtYXJrMi5uYW1lLnNsaWNlKFwiY29udmV4XCIubGVuZ3RoKTtcbiAgbmFtZSA9IG5hbWUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBuYW1lLnNsaWNlKDEpO1xuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgc3RhcnRUaW1lOiBtYXJrMi5zdGFydFRpbWVcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXJrc1JlcG9ydChzZXNzaW9uSWQpIHtcbiAgaWYgKHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBjb25zdCBhbGxNYXJrcyA9IFtdO1xuICBmb3IgKGNvbnN0IG5hbWUgb2YgbWFya05hbWVzKSB7XG4gICAgY29uc3QgbWFya3MgPSBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKG5hbWUpLmZpbHRlcigoZW50cnkpID0+IGVudHJ5LmVudHJ5VHlwZSA9PT0gXCJtYXJrXCIpLmZpbHRlcigobWFyazIpID0+IG1hcmsyLmRldGFpbC5zZXNzaW9uSWQgPT09IHNlc3Npb25JZCk7XG4gICAgYWxsTWFya3MucHVzaCguLi5tYXJrcyk7XG4gIH1cbiAgcmV0dXJuIGFsbE1hcmtzLm1hcChwZXJmb3JtYW5jZU1hcmtUb0pzb24pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0cmljcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/metrics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OptimisticQueryResults: () => (/* binding */ OptimisticQueryResults)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/api.js */ \"(rsc)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/errors.js */ \"(rsc)/./node_modules/convex/dist/esm/values/errors.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nclass OptimisticLocalStoreImpl {\n  constructor(queryResults) {\n    // A references of the query results in OptimisticQueryResults\n    __publicField(this, \"queryResults\");\n    // All of the queries modified by this class\n    __publicField(this, \"modifiedQueries\");\n    this.queryResults = queryResults;\n    this.modifiedQueries = [];\n  }\n  getQuery(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    const queryResult = this.queryResults.get(\n      (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs)\n    );\n    if (queryResult === void 0) {\n      return void 0;\n    }\n    return OptimisticLocalStoreImpl.queryValue(queryResult.result);\n  }\n  getAllQueries(query) {\n    const queriesWithName = [];\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    for (const queryResult of this.queryResults.values()) {\n      if (queryResult.udfPath === (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.canonicalizeUdfPath)(name)) {\n        queriesWithName.push({\n          args: queryResult.args,\n          value: OptimisticLocalStoreImpl.queryValue(queryResult.result)\n        });\n      }\n    }\n    return queriesWithName;\n  }\n  setQuery(queryReference, args, value) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(queryReference);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs);\n    let result;\n    if (value === void 0) {\n      result = void 0;\n    } else {\n      result = {\n        success: true,\n        value,\n        // It's an optimistic update, so there are no function logs to show.\n        logLines: []\n      };\n    }\n    const query = {\n      udfPath: name,\n      args: queryArgs,\n      result\n    };\n    this.queryResults.set(queryToken, query);\n    this.modifiedQueries.push(queryToken);\n  }\n  static queryValue(result) {\n    if (result === void 0) {\n      return void 0;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      return void 0;\n    }\n  }\n}\nclass OptimisticQueryResults {\n  constructor() {\n    __publicField(this, \"queryResults\");\n    __publicField(this, \"optimisticUpdates\");\n    this.queryResults = /* @__PURE__ */ new Map();\n    this.optimisticUpdates = [];\n  }\n  ingestQueryResultsFromServer(serverQueryResults, optimisticUpdatesToDrop) {\n    this.optimisticUpdates = this.optimisticUpdates.filter((updateAndId) => {\n      return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n    });\n    const oldQueryResults = this.queryResults;\n    this.queryResults = new Map(serverQueryResults);\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    for (const updateAndId of this.optimisticUpdates) {\n      updateAndId.update(localStore);\n    }\n    const changedQueries = [];\n    for (const [queryToken, query] of this.queryResults) {\n      const oldQuery = oldQueryResults.get(queryToken);\n      if (oldQuery === void 0 || oldQuery.result !== query.result) {\n        changedQueries.push(queryToken);\n      }\n    }\n    return changedQueries;\n  }\n  applyOptimisticUpdate(update, mutationId) {\n    this.optimisticUpdates.push({\n      update,\n      mutationId\n    });\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    update(localStore);\n    return localStore.modifiedQueries;\n  }\n  queryResult(queryToken) {\n    const query = this.queryResults.get(queryToken);\n    if (query === void 0) {\n      return void 0;\n    }\n    const result = query.result;\n    if (result === void 0) {\n      return void 0;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_4__.ConvexError(\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)\n          )\n        );\n      }\n      throw new Error(\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)\n      );\n    }\n  }\n  hasQueryResult(queryToken) {\n    return this.queryResults.get(queryToken) !== void 0;\n  }\n  /**\n   * @internal\n   */\n  queryLogs(queryToken) {\n    const query = this.queryResults.get(queryToken);\n    return query?.result?.logLines;\n  }\n}\n//# sourceMappingURL=optimistic_updates_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/protocol.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/protocol.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeClientMessage: () => (/* binding */ encodeClientMessage),\n/* harmony export */   longToU64: () => (/* binding */ longToU64),\n/* harmony export */   parseServerMessage: () => (/* binding */ parseServerMessage),\n/* harmony export */   u64ToLong: () => (/* binding */ u64ToLong)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/long.js\");\n\n\n\nfunction u64ToLong(encoded) {\n  const integerBytes = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.toByteArray(encoded);\n  return _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromBytesLE(Array.from(integerBytes));\n}\nfunction longToU64(raw) {\n  const integerBytes = new Uint8Array(raw.toBytesLE());\n  return _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.fromByteArray(integerBytes);\n}\nfunction parseServerMessage(encoded) {\n  switch (encoded.type) {\n    case \"FatalError\":\n    case \"AuthError\":\n    case \"ActionResponse\":\n    case \"Ping\": {\n      return { ...encoded };\n    }\n    case \"MutationResponse\": {\n      if (encoded.success) {\n        return { ...encoded, ts: u64ToLong(encoded.ts) };\n      } else {\n        return { ...encoded };\n      }\n    }\n    case \"Transition\": {\n      return {\n        ...encoded,\n        startVersion: {\n          ...encoded.startVersion,\n          ts: u64ToLong(encoded.startVersion.ts)\n        },\n        endVersion: {\n          ...encoded.endVersion,\n          ts: u64ToLong(encoded.endVersion.ts)\n        }\n      };\n    }\n    default: {\n      const _exhaustivenessCheck = encoded;\n    }\n  }\n  return void 0;\n}\nfunction encodeClientMessage(message) {\n  switch (message.type) {\n    case \"Authenticate\":\n    case \"ModifyQuerySet\":\n    case \"Mutation\":\n    case \"Action\":\n    case \"Event\": {\n      return { ...message };\n    }\n    case \"Connect\": {\n      if (message.maxObservedTimestamp !== void 0) {\n        return {\n          ...message,\n          maxObservedTimestamp: longToU64(message.maxObservedTimestamp)\n        };\n      } else {\n        return { ...message, maxObservedTimestamp: void 0 };\n      }\n    }\n    default: {\n      const _exhaustivenessCheck = message;\n    }\n  }\n  return void 0;\n}\n//# sourceMappingURL=protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNrQztBQUNiO0FBQzNCO0FBQ1AsdUJBQXVCLGdFQUFrQjtBQUN6QyxTQUFTLDBDQUFJO0FBQ2I7QUFDTztBQUNQO0FBQ0EsU0FBUyxrRUFBb0I7QUFDN0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLFFBQVE7QUFDUixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IEJhc2U2NCB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IExvbmcgfSBmcm9tIFwiLi4vbG9uZy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHU2NFRvTG9uZyhlbmNvZGVkKSB7XG4gIGNvbnN0IGludGVnZXJCeXRlcyA9IEJhc2U2NC50b0J5dGVBcnJheShlbmNvZGVkKTtcbiAgcmV0dXJuIExvbmcuZnJvbUJ5dGVzTEUoQXJyYXkuZnJvbShpbnRlZ2VyQnl0ZXMpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb25nVG9VNjQocmF3KSB7XG4gIGNvbnN0IGludGVnZXJCeXRlcyA9IG5ldyBVaW50OEFycmF5KHJhdy50b0J5dGVzTEUoKSk7XG4gIHJldHVybiBCYXNlNjQuZnJvbUJ5dGVBcnJheShpbnRlZ2VyQnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU2VydmVyTWVzc2FnZShlbmNvZGVkKSB7XG4gIHN3aXRjaCAoZW5jb2RlZC50eXBlKSB7XG4gICAgY2FzZSBcIkZhdGFsRXJyb3JcIjpcbiAgICBjYXNlIFwiQXV0aEVycm9yXCI6XG4gICAgY2FzZSBcIkFjdGlvblJlc3BvbnNlXCI6XG4gICAgY2FzZSBcIlBpbmdcIjoge1xuICAgICAgcmV0dXJuIHsgLi4uZW5jb2RlZCB9O1xuICAgIH1cbiAgICBjYXNlIFwiTXV0YXRpb25SZXNwb25zZVwiOiB7XG4gICAgICBpZiAoZW5jb2RlZC5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiB7IC4uLmVuY29kZWQsIHRzOiB1NjRUb0xvbmcoZW5jb2RlZC50cykgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IC4uLmVuY29kZWQgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSBcIlRyYW5zaXRpb25cIjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uZW5jb2RlZCxcbiAgICAgICAgc3RhcnRWZXJzaW9uOiB7XG4gICAgICAgICAgLi4uZW5jb2RlZC5zdGFydFZlcnNpb24sXG4gICAgICAgICAgdHM6IHU2NFRvTG9uZyhlbmNvZGVkLnN0YXJ0VmVyc2lvbi50cylcbiAgICAgICAgfSxcbiAgICAgICAgZW5kVmVyc2lvbjoge1xuICAgICAgICAgIC4uLmVuY29kZWQuZW5kVmVyc2lvbixcbiAgICAgICAgICB0czogdTY0VG9Mb25nKGVuY29kZWQuZW5kVmVyc2lvbi50cylcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgY29uc3QgX2V4aGF1c3RpdmVuZXNzQ2hlY2sgPSBlbmNvZGVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUNsaWVudE1lc3NhZ2UobWVzc2FnZSkge1xuICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgIGNhc2UgXCJBdXRoZW50aWNhdGVcIjpcbiAgICBjYXNlIFwiTW9kaWZ5UXVlcnlTZXRcIjpcbiAgICBjYXNlIFwiTXV0YXRpb25cIjpcbiAgICBjYXNlIFwiQWN0aW9uXCI6XG4gICAgY2FzZSBcIkV2ZW50XCI6IHtcbiAgICAgIHJldHVybiB7IC4uLm1lc3NhZ2UgfTtcbiAgICB9XG4gICAgY2FzZSBcIkNvbm5lY3RcIjoge1xuICAgICAgaWYgKG1lc3NhZ2UubWF4T2JzZXJ2ZWRUaW1lc3RhbXAgIT09IHZvaWQgMCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLm1lc3NhZ2UsXG4gICAgICAgICAgbWF4T2JzZXJ2ZWRUaW1lc3RhbXA6IGxvbmdUb1U2NChtZXNzYWdlLm1heE9ic2VydmVkVGltZXN0YW1wKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ubWVzc2FnZSwgbWF4T2JzZXJ2ZWRUaW1lc3RhbXA6IHZvaWQgMCB9O1xuICAgICAgfVxuICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICBjb25zdCBfZXhoYXVzdGl2ZW5lc3NDaGVjayA9IG1lc3NhZ2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB2b2lkIDA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm90b2NvbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/protocol.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/remote_query_set.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoteQuerySet: () => (/* binding */ RemoteQuerySet)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/long.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass RemoteQuerySet {\n  constructor(queryPath, logger) {\n    __publicField(this, \"version\");\n    __publicField(this, \"remoteQuerySet\");\n    __publicField(this, \"queryPath\");\n    __publicField(this, \"logger\");\n    this.version = { querySet: 0, ts: _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromNumber(0), identity: 0 };\n    this.remoteQuerySet = /* @__PURE__ */ new Map();\n    this.queryPath = queryPath;\n    this.logger = logger;\n  }\n  transition(transition) {\n    const start = transition.startVersion;\n    if (this.version.querySet !== start.querySet || this.version.ts.notEquals(start.ts) || this.version.identity !== start.identity) {\n      throw new Error(\n        `Invalid start version: ${start.ts.toString()}:${start.querySet}`\n      );\n    }\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logForFunction)(this.logger, \"info\", \"query\", queryPath, line);\n            }\n          }\n          const value = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(modification.value ?? null);\n          this.remoteQuerySet.set(modification.queryId, {\n            success: true,\n            value,\n            logLines: modification.logLines\n          });\n          break;\n        }\n        case \"QueryFailed\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logForFunction)(this.logger, \"info\", \"query\", queryPath, line);\n            }\n          }\n          const { errorData } = modification;\n          this.remoteQuerySet.set(modification.queryId, {\n            success: false,\n            errorMessage: modification.errorMessage,\n            errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n            logLines: modification.logLines\n          });\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.remoteQuerySet.delete(modification.queryId);\n          break;\n        }\n        default: {\n          const _ = modification;\n          throw new Error(`Invalid modification ${modification.type}`);\n        }\n      }\n    }\n    this.version = transition.endVersion;\n  }\n  remoteQueryResults() {\n    return this.remoteQuerySet;\n  }\n  timestamp() {\n    return this.version.ts;\n  }\n}\n//# sourceMappingURL=remote_query_set.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNxRDtBQUNuQjtBQUNhO0FBQ3hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUIsMENBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQkFBb0IsR0FBRyxlQUFlO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFjO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0IsOERBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBYztBQUM1QjtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDhEQUFZO0FBQzFEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Qsa0JBQWtCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IGpzb25Ub0NvbnZleCB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IExvbmcgfSBmcm9tIFwiLi4vbG9uZy5qc1wiO1xuaW1wb3J0IHsgbG9nRm9yRnVuY3Rpb24gfSBmcm9tIFwiLi4vbG9nZ2luZy5qc1wiO1xuZXhwb3J0IGNsYXNzIFJlbW90ZVF1ZXJ5U2V0IHtcbiAgY29uc3RydWN0b3IocXVlcnlQYXRoLCBsb2dnZXIpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidmVyc2lvblwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVtb3RlUXVlcnlTZXRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInF1ZXJ5UGF0aFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG9nZ2VyXCIpO1xuICAgIHRoaXMudmVyc2lvbiA9IHsgcXVlcnlTZXQ6IDAsIHRzOiBMb25nLmZyb21OdW1iZXIoMCksIGlkZW50aXR5OiAwIH07XG4gICAgdGhpcy5yZW1vdGVRdWVyeVNldCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgdGhpcy5xdWVyeVBhdGggPSBxdWVyeVBhdGg7XG4gICAgdGhpcy5sb2dnZXIgPSBsb2dnZXI7XG4gIH1cbiAgdHJhbnNpdGlvbih0cmFuc2l0aW9uKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0cmFuc2l0aW9uLnN0YXJ0VmVyc2lvbjtcbiAgICBpZiAodGhpcy52ZXJzaW9uLnF1ZXJ5U2V0ICE9PSBzdGFydC5xdWVyeVNldCB8fCB0aGlzLnZlcnNpb24udHMubm90RXF1YWxzKHN0YXJ0LnRzKSB8fCB0aGlzLnZlcnNpb24uaWRlbnRpdHkgIT09IHN0YXJ0LmlkZW50aXR5KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBJbnZhbGlkIHN0YXJ0IHZlcnNpb246ICR7c3RhcnQudHMudG9TdHJpbmcoKX06JHtzdGFydC5xdWVyeVNldH1gXG4gICAgICApO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IG1vZGlmaWNhdGlvbiBvZiB0cmFuc2l0aW9uLm1vZGlmaWNhdGlvbnMpIHtcbiAgICAgIHN3aXRjaCAobW9kaWZpY2F0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIlF1ZXJ5VXBkYXRlZFwiOiB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXRoID0gdGhpcy5xdWVyeVBhdGgobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGlmIChxdWVyeVBhdGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBtb2RpZmljYXRpb24ubG9nTGluZXMpIHtcbiAgICAgICAgICAgICAgbG9nRm9yRnVuY3Rpb24odGhpcy5sb2dnZXIsIFwiaW5mb1wiLCBcInF1ZXJ5XCIsIHF1ZXJ5UGF0aCwgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHZhbHVlID0ganNvblRvQ29udmV4KG1vZGlmaWNhdGlvbi52YWx1ZSA/PyBudWxsKTtcbiAgICAgICAgICB0aGlzLnJlbW90ZVF1ZXJ5U2V0LnNldChtb2RpZmljYXRpb24ucXVlcnlJZCwge1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgbG9nTGluZXM6IG1vZGlmaWNhdGlvbi5sb2dMaW5lc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJRdWVyeUZhaWxlZFwiOiB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXRoID0gdGhpcy5xdWVyeVBhdGgobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGlmIChxdWVyeVBhdGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBtb2RpZmljYXRpb24ubG9nTGluZXMpIHtcbiAgICAgICAgICAgICAgbG9nRm9yRnVuY3Rpb24odGhpcy5sb2dnZXIsIFwiaW5mb1wiLCBcInF1ZXJ5XCIsIHF1ZXJ5UGF0aCwgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHsgZXJyb3JEYXRhIH0gPSBtb2RpZmljYXRpb247XG4gICAgICAgICAgdGhpcy5yZW1vdGVRdWVyeVNldC5zZXQobW9kaWZpY2F0aW9uLnF1ZXJ5SWQsIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiBtb2RpZmljYXRpb24uZXJyb3JNZXNzYWdlLFxuICAgICAgICAgICAgZXJyb3JEYXRhOiBlcnJvckRhdGEgIT09IHZvaWQgMCA/IGpzb25Ub0NvbnZleChlcnJvckRhdGEpIDogdm9pZCAwLFxuICAgICAgICAgICAgbG9nTGluZXM6IG1vZGlmaWNhdGlvbi5sb2dMaW5lc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJRdWVyeVJlbW92ZWRcIjoge1xuICAgICAgICAgIHRoaXMucmVtb3RlUXVlcnlTZXQuZGVsZXRlKG1vZGlmaWNhdGlvbi5xdWVyeUlkKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgY29uc3QgXyA9IG1vZGlmaWNhdGlvbjtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbW9kaWZpY2F0aW9uICR7bW9kaWZpY2F0aW9uLnR5cGV9YCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy52ZXJzaW9uID0gdHJhbnNpdGlvbi5lbmRWZXJzaW9uO1xuICB9XG4gIHJlbW90ZVF1ZXJ5UmVzdWx0cygpIHtcbiAgICByZXR1cm4gdGhpcy5yZW1vdGVRdWVyeVNldDtcbiAgfVxuICB0aW1lc3RhbXAoKSB7XG4gICAgcmV0dXJuIHRoaXMudmVyc2lvbi50cztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3RlX3F1ZXJ5X3NldC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/request_manager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/request_manager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestManager: () => (/* binding */ RequestManager)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logging.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass RequestManager {\n  constructor(logger) {\n    this.logger = logger;\n    __publicField(this, \"inflightRequests\");\n    __publicField(this, \"requestsOlderThanRestart\");\n    __publicField(this, \"inflightMutationsCount\", 0);\n    __publicField(this, \"inflightActionsCount\", 0);\n    this.inflightRequests = /* @__PURE__ */ new Map();\n    this.requestsOlderThanRestart = /* @__PURE__ */ new Set();\n  }\n  request(message, sent) {\n    const result = new Promise((resolve) => {\n      const status = sent ? \"Requested\" : \"NotSent\";\n      this.inflightRequests.set(message.requestId, {\n        message,\n        status: { status, requestedAt: /* @__PURE__ */ new Date(), onResult: resolve }\n      });\n      if (message.type === \"Mutation\") {\n        this.inflightMutationsCount++;\n      } else if (message.type === \"Action\") {\n        this.inflightActionsCount++;\n      }\n    });\n    return result;\n  }\n  /**\n   * Update the state after receiving a response.\n   *\n   * @returns A RequestId if the request is complete and its optimistic update\n   * can be dropped, null otherwise.\n   */\n  onResponse(response) {\n    const requestInfo = this.inflightRequests.get(response.requestId);\n    if (requestInfo === void 0) {\n      return null;\n    }\n    if (requestInfo.status.status === \"Completed\") {\n      return null;\n    }\n    const udfType = requestInfo.message.type === \"Mutation\" ? \"mutation\" : \"action\";\n    const udfPath = requestInfo.message.udfPath;\n    for (const line of response.logLines) {\n      (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logForFunction)(this.logger, \"info\", udfType, udfPath, line);\n    }\n    const status = requestInfo.status;\n    let result;\n    let onResolve;\n    if (response.success) {\n      result = {\n        success: true,\n        logLines: response.logLines,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(response.result)\n      };\n      onResolve = () => status.onResult(result);\n    } else {\n      const errorMessage = response.result;\n      const { errorData } = response;\n      (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logForFunction)(this.logger, \"error\", udfType, udfPath, errorMessage);\n      result = {\n        success: false,\n        errorMessage,\n        errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n        logLines: response.logLines\n      };\n      onResolve = () => status.onResult(result);\n    }\n    if (response.type === \"ActionResponse\" || !response.success) {\n      onResolve();\n      this.inflightRequests.delete(response.requestId);\n      this.requestsOlderThanRestart.delete(response.requestId);\n      if (requestInfo.message.type === \"Action\") {\n        this.inflightActionsCount--;\n      } else if (requestInfo.message.type === \"Mutation\") {\n        this.inflightMutationsCount--;\n      }\n      return { requestId: response.requestId, result };\n    }\n    requestInfo.status = {\n      status: \"Completed\",\n      result,\n      ts: response.ts,\n      onResolve\n    };\n    return null;\n  }\n  // Remove and returns completed requests.\n  removeCompleted(ts) {\n    const completeRequests = /* @__PURE__ */ new Map();\n    for (const [requestId, requestInfo] of this.inflightRequests.entries()) {\n      const status = requestInfo.status;\n      if (status.status === \"Completed\" && status.ts.lessThanOrEqual(ts)) {\n        status.onResolve();\n        completeRequests.set(requestId, status.result);\n        if (requestInfo.message.type === \"Mutation\") {\n          this.inflightMutationsCount--;\n        } else if (requestInfo.message.type === \"Action\") {\n          this.inflightActionsCount--;\n        }\n        this.inflightRequests.delete(requestId);\n        this.requestsOlderThanRestart.delete(requestId);\n      }\n    }\n    return completeRequests;\n  }\n  restart() {\n    this.requestsOlderThanRestart = new Set(this.inflightRequests.keys());\n    const allMessages = [];\n    for (const [requestId, value] of this.inflightRequests) {\n      if (value.status.status === \"NotSent\") {\n        value.status.status = \"Requested\";\n        allMessages.push(value.message);\n        continue;\n      }\n      if (value.message.type === \"Mutation\") {\n        allMessages.push(value.message);\n      } else if (value.message.type === \"Action\") {\n        this.inflightRequests.delete(requestId);\n        this.requestsOlderThanRestart.delete(requestId);\n        this.inflightActionsCount--;\n        if (value.status.status === \"Completed\") {\n          throw new Error(\"Action should never be in 'Completed' state\");\n        }\n        value.status.onResult({\n          success: false,\n          errorMessage: \"Connection lost while action was in flight\",\n          logLines: []\n        });\n      }\n    }\n    return allMessages;\n  }\n  resume() {\n    const allMessages = [];\n    for (const [, value] of this.inflightRequests) {\n      if (value.status.status === \"NotSent\") {\n        value.status.status = \"Requested\";\n        allMessages.push(value.message);\n        continue;\n      }\n    }\n    return allMessages;\n  }\n  /**\n   * @returns true if there are any requests that have been requested but have\n   * not be completed yet.\n   */\n  hasIncompleteRequests() {\n    for (const requestInfo of this.inflightRequests.values()) {\n      if (requestInfo.status.status === \"Requested\") {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * @returns true if there are any inflight requests, including ones that have\n   * completed on the server, but have not been applied.\n   */\n  hasInflightRequests() {\n    return this.inflightRequests.size > 0;\n  }\n  /**\n   * @returns true if there are any inflight requests, that have been hanging around\n   * since prior to the most recent restart.\n   */\n  hasSyncedPastLastReconnect() {\n    return this.requestsOlderThanRestart.size === 0;\n  }\n  timeOfOldestInflightRequest() {\n    if (this.inflightRequests.size === 0) {\n      return null;\n    }\n    let oldestInflightRequest = Date.now();\n    for (const request of this.inflightRequests.values()) {\n      if (request.status.status !== \"Completed\") {\n        if (request.status.requestedAt.getTime() < oldestInflightRequest) {\n          oldestInflightRequest = request.status.requestedAt.getTime();\n        }\n      }\n    }\n    return new Date(oldestInflightRequest);\n  }\n  /**\n   * @returns The number of mutations currently in flight.\n   */\n  inflightMutations() {\n    return this.inflightMutationsCount;\n  }\n  /**\n   * @returns The number of actions currently in flight.\n   */\n  inflightActions() {\n    return this.inflightActionsCount;\n  }\n}\n//# sourceMappingURL=request_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/session.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/session.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newSessionId: () => (/* binding */ newSessionId)\n/* harmony export */ });\n\nfunction newSessionId() {\n  return uuidv4();\n}\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n}\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3Nlc3Npb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gbmV3U2Vzc2lvbklkKCkge1xuICByZXR1cm4gdXVpZHY0KCk7XG59XG5mdW5jdGlvbiB1dWlkdjQoKSB7XG4gIHJldHVybiBcInh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiLnJlcGxhY2UoL1t4eV0vZywgKGMpID0+IHtcbiAgICBjb25zdCByID0gTWF0aC5yYW5kb20oKSAqIDE2IHwgMCwgdiA9IGMgPT09IFwieFwiID8gciA6IHIgJiAzIHwgODtcbiAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vzc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canonicalizeUdfPath: () => (/* binding */ canonicalizeUdfPath),\n/* harmony export */   serializePathAndArgs: () => (/* binding */ serializePathAndArgs)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n\n\nfunction canonicalizeUdfPath(udfPath) {\n  const pieces = udfPath.split(\":\");\n  let moduleName;\n  let functionName;\n  if (pieces.length === 1) {\n    moduleName = pieces[0];\n    functionName = \"default\";\n  } else {\n    moduleName = pieces.slice(0, pieces.length - 1).join(\":\");\n    functionName = pieces[pieces.length - 1];\n  }\n  if (moduleName.endsWith(\".js\")) {\n    moduleName = moduleName.slice(0, -3);\n  }\n  return `${moduleName}:${functionName}`;\n}\nfunction serializePathAndArgs(udfPath, args) {\n  return JSON.stringify({\n    udfPath: canonicalizeUdfPath(udfPath),\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n  });\n}\n//# sourceMappingURL=udf_path_utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy91ZGZfcGF0aF91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUN3QztBQUM5QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVcsR0FBRyxhQUFhO0FBQ3ZDO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFBVSw4REFBWTtBQUN0QixHQUFHO0FBQ0g7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvdWRmX3BhdGhfdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY2Fub25pY2FsaXplVWRmUGF0aCh1ZGZQYXRoKSB7XG4gIGNvbnN0IHBpZWNlcyA9IHVkZlBhdGguc3BsaXQoXCI6XCIpO1xuICBsZXQgbW9kdWxlTmFtZTtcbiAgbGV0IGZ1bmN0aW9uTmFtZTtcbiAgaWYgKHBpZWNlcy5sZW5ndGggPT09IDEpIHtcbiAgICBtb2R1bGVOYW1lID0gcGllY2VzWzBdO1xuICAgIGZ1bmN0aW9uTmFtZSA9IFwiZGVmYXVsdFwiO1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZU5hbWUgPSBwaWVjZXMuc2xpY2UoMCwgcGllY2VzLmxlbmd0aCAtIDEpLmpvaW4oXCI6XCIpO1xuICAgIGZ1bmN0aW9uTmFtZSA9IHBpZWNlc1twaWVjZXMubGVuZ3RoIC0gMV07XG4gIH1cbiAgaWYgKG1vZHVsZU5hbWUuZW5kc1dpdGgoXCIuanNcIikpIHtcbiAgICBtb2R1bGVOYW1lID0gbW9kdWxlTmFtZS5zbGljZSgwLCAtMyk7XG4gIH1cbiAgcmV0dXJuIGAke21vZHVsZU5hbWV9OiR7ZnVuY3Rpb25OYW1lfWA7XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplUGF0aEFuZEFyZ3ModWRmUGF0aCwgYXJncykge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgIHVkZlBhdGg6IGNhbm9uaWNhbGl6ZVVkZlBhdGgodWRmUGF0aCksXG4gICAgYXJnczogY29udmV4VG9Kc29uKGFyZ3MpXG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWRmX3BhdGhfdXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketManager: () => (/* binding */ WebSocketManager)\n/* harmony export */ });\n/* harmony import */ var _protocol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/sync/protocol.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst CLOSE_NORMAL = 1e3;\nconst CLOSE_GOING_AWAY = 1001;\nconst CLOSE_NO_STATUS = 1005;\nconst CLOSE_NOT_FOUND = 4040;\nclass WebSocketManager {\n  constructor(uri, callbacks, webSocketConstructor, logger) {\n    __publicField(this, \"socket\");\n    __publicField(this, \"connectionCount\");\n    __publicField(this, \"_hasEverConnected\", false);\n    __publicField(this, \"lastCloseReason\");\n    /** Upon HTTPS/WSS failure, the first jittered backoff duration, in ms. */\n    __publicField(this, \"initialBackoff\");\n    /** We backoff exponentially, but we need to cap that--this is the jittered max. */\n    __publicField(this, \"maxBackoff\");\n    /** How many times have we failed consecutively? */\n    __publicField(this, \"retries\");\n    /** How long before lack of server response causes us to initiate a reconnect,\n     * in ms */\n    __publicField(this, \"serverInactivityThreshold\");\n    __publicField(this, \"reconnectDueToServerInactivityTimeout\");\n    __publicField(this, \"uri\");\n    __publicField(this, \"onOpen\");\n    __publicField(this, \"onResume\");\n    __publicField(this, \"onMessage\");\n    __publicField(this, \"webSocketConstructor\");\n    __publicField(this, \"logger\");\n    this.webSocketConstructor = webSocketConstructor;\n    this.socket = { state: \"disconnected\" };\n    this.connectionCount = 0;\n    this.lastCloseReason = \"InitialConnect\";\n    this.initialBackoff = 100;\n    this.maxBackoff = 16e3;\n    this.retries = 0;\n    this.serverInactivityThreshold = 3e4;\n    this.reconnectDueToServerInactivityTimeout = null;\n    this.uri = uri;\n    this.onOpen = callbacks.onOpen;\n    this.onResume = callbacks.onResume;\n    this.onMessage = callbacks.onMessage;\n    this.logger = logger;\n    this.connect();\n  }\n  setSocketState(state) {\n    this.socket = state;\n    this._logVerbose(\n      `socket state changed: ${this.socket.state}, paused: ${\"paused\" in this.socket ? this.socket.paused : void 0}`\n    );\n  }\n  connect() {\n    if (this.socket.state === \"terminated\") {\n      return;\n    }\n    if (this.socket.state !== \"disconnected\" && this.socket.state !== \"stopped\") {\n      throw new Error(\n        \"Didn't start connection from disconnected state: \" + this.socket.state\n      );\n    }\n    const ws = new this.webSocketConstructor(this.uri);\n    this._logVerbose(\"constructed WebSocket\");\n    this.setSocketState({\n      state: \"connecting\",\n      ws,\n      paused: \"no\"\n    });\n    this.resetServerInactivityTimeout();\n    ws.onopen = () => {\n      this.logger.logVerbose(\"begin ws.onopen\");\n      if (this.socket.state !== \"connecting\") {\n        throw new Error(\"onopen called with socket not in connecting state\");\n      }\n      this.setSocketState({\n        state: \"ready\",\n        ws,\n        paused: this.socket.paused === \"yes\" ? \"uninitialized\" : \"no\"\n      });\n      this.resetServerInactivityTimeout();\n      if (this.socket.paused === \"no\") {\n        this._hasEverConnected = true;\n        this.onOpen({\n          connectionCount: this.connectionCount,\n          lastCloseReason: this.lastCloseReason\n        });\n      }\n      if (this.lastCloseReason !== \"InitialConnect\") {\n        this.logger.log(\"WebSocket reconnected\");\n      }\n      this.connectionCount += 1;\n      this.lastCloseReason = null;\n    };\n    ws.onerror = (error) => {\n      const message = error.message;\n      this.logger.log(`WebSocket error: ${message}`);\n    };\n    ws.onmessage = (message) => {\n      this.resetServerInactivityTimeout();\n      const serverMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.parseServerMessage)(JSON.parse(message.data));\n      this._logVerbose(`received ws message with type ${serverMessage.type}`);\n      const response = this.onMessage(serverMessage);\n      if (response.hasSyncedPastLastReconnect) {\n        this.retries = 0;\n      }\n    };\n    ws.onclose = (event) => {\n      this._logVerbose(\"begin ws.onclose\");\n      if (this.lastCloseReason === null) {\n        this.lastCloseReason = event.reason ?? \"OnCloseInvoked\";\n      }\n      if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_GOING_AWAY && // This commonly gets fired on mobile apps when the app is backgrounded\n      event.code !== CLOSE_NO_STATUS && event.code !== CLOSE_NOT_FOUND) {\n        let msg = `WebSocket closed with code ${event.code}`;\n        if (event.reason) {\n          msg += `: ${event.reason}`;\n        }\n        this.logger.log(msg);\n      }\n      this.scheduleReconnect();\n      return;\n    };\n  }\n  /**\n   * @returns The state of the {@link Socket}.\n   */\n  socketState() {\n    return this.socket.state;\n  }\n  /**\n   * @param message - A ClientMessage to send.\n   * @returns Whether the message (might have been) sent.\n   */\n  sendMessage(message) {\n    const messageForLog = {\n      type: message.type,\n      ...message.type === \"Authenticate\" && message.tokenType === \"User\" ? {\n        value: `...${message.value.slice(-7)}`\n      } : {}\n    };\n    if (this.socket.state === \"ready\" && this.socket.paused === \"no\") {\n      const encodedMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.encodeClientMessage)(message);\n      const request = JSON.stringify(encodedMessage);\n      try {\n        this.socket.ws.send(request);\n      } catch (error) {\n        this.logger.log(\n          `Failed to send message on WebSocket, reconnecting: ${error}`\n        );\n        this.closeAndReconnect(\"FailedToSendMessage\");\n      }\n      this._logVerbose(\n        `sent message with type ${message.type}: ${JSON.stringify(\n          messageForLog\n        )}`\n      );\n      return true;\n    }\n    this._logVerbose(\n      `message not sent (socket state: ${this.socket.state}, paused: ${\"paused\" in this.socket ? this.socket.paused : void 0}): ${JSON.stringify(\n        messageForLog\n      )}`\n    );\n    return false;\n  }\n  resetServerInactivityTimeout() {\n    if (this.socket.state === \"terminated\") {\n      return;\n    }\n    if (this.reconnectDueToServerInactivityTimeout !== null) {\n      clearTimeout(this.reconnectDueToServerInactivityTimeout);\n      this.reconnectDueToServerInactivityTimeout = null;\n    }\n    this.reconnectDueToServerInactivityTimeout = setTimeout(() => {\n      this.closeAndReconnect(\"InactiveServer\");\n    }, this.serverInactivityThreshold);\n  }\n  scheduleReconnect() {\n    this.socket = { state: \"disconnected\" };\n    const backoff = this.nextBackoff();\n    this.logger.log(`Attempting reconnect in ${backoff}ms`);\n    setTimeout(() => this.connect(), backoff);\n  }\n  /**\n   * Close the WebSocket and schedule a reconnect.\n   *\n   * This should be used when we hit an error and would like to restart the session.\n   */\n  closeAndReconnect(closeReason) {\n    this._logVerbose(`begin closeAndReconnect with reason ${closeReason}`);\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"terminated\":\n      case \"stopped\":\n        return;\n      case \"connecting\":\n      case \"ready\": {\n        this.lastCloseReason = closeReason;\n        void this.close();\n        this.scheduleReconnect();\n        return;\n      }\n      default: {\n        const _ = this.socket;\n      }\n    }\n  }\n  /**\n   * Close the WebSocket, being careful to clear the onclose handler to avoid re-entrant\n   * calls. Use this instead of directly calling `ws.close()`\n   *\n   * It is the callers responsibility to update the state after this method is called so that the\n   * closed socket is not accessible or used again after this method is called\n   */\n  close() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"terminated\":\n      case \"stopped\":\n        return Promise.resolve();\n      case \"connecting\": {\n        const ws = this.socket.ws;\n        return new Promise((r) => {\n          ws.onclose = () => {\n            this._logVerbose(\"Closed after connecting\");\n            r();\n          };\n          ws.onopen = () => {\n            this._logVerbose(\"Opened after connecting\");\n            ws.close();\n          };\n        });\n      }\n      case \"ready\": {\n        this._logVerbose(\"ws.close called\");\n        const ws = this.socket.ws;\n        const result = new Promise((r) => {\n          ws.onclose = () => {\n            r();\n          };\n        });\n        ws.close();\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        return Promise.resolve();\n      }\n    }\n  }\n  /**\n   * Close the WebSocket and do not reconnect.\n   * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n   */\n  terminate() {\n    if (this.reconnectDueToServerInactivityTimeout) {\n      clearTimeout(this.reconnectDueToServerInactivityTimeout);\n    }\n    switch (this.socket.state) {\n      case \"terminated\":\n      case \"stopped\":\n      case \"disconnected\":\n      case \"connecting\":\n      case \"ready\": {\n        const result = this.close();\n        this.setSocketState({ state: \"terminated\" });\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        throw new Error(\n          `Invalid websocket state: ${this.socket.state}`\n        );\n      }\n    }\n  }\n  stop() {\n    switch (this.socket.state) {\n      case \"terminated\":\n        return Promise.resolve();\n      case \"connecting\":\n      case \"stopped\":\n      case \"disconnected\":\n      case \"ready\": {\n        const result = this.close();\n        this.socket = { state: \"stopped\" };\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        return Promise.resolve();\n      }\n    }\n  }\n  /**\n   * Create a new WebSocket after a previous `stop()`, unless `terminate()` was\n   * called before.\n   */\n  tryRestart() {\n    switch (this.socket.state) {\n      case \"stopped\":\n        break;\n      case \"terminated\":\n      case \"connecting\":\n      case \"ready\":\n      case \"disconnected\":\n        this.logger.logVerbose(\"Restart called without stopping first\");\n        return;\n      default: {\n        const _ = this.socket;\n      }\n    }\n    this.connect();\n  }\n  pause() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"stopped\":\n      case \"terminated\":\n        return;\n      case \"connecting\":\n      case \"ready\": {\n        this.socket = { ...this.socket, paused: \"yes\" };\n        return;\n      }\n      default: {\n        const _ = this.socket;\n        return;\n      }\n    }\n  }\n  /**\n   * Resume the state machine if previously paused.\n   */\n  resume() {\n    switch (this.socket.state) {\n      case \"connecting\":\n        this.socket = { ...this.socket, paused: \"no\" };\n        return;\n      case \"ready\":\n        if (this.socket.paused === \"uninitialized\") {\n          this.socket = { ...this.socket, paused: \"no\" };\n          this.onOpen({\n            connectionCount: this.connectionCount,\n            lastCloseReason: this.lastCloseReason\n          });\n        } else if (this.socket.paused === \"yes\") {\n          this.socket = { ...this.socket, paused: \"no\" };\n          this.onResume();\n        }\n        return;\n      case \"terminated\":\n      case \"stopped\":\n      case \"disconnected\":\n        return;\n      default: {\n        const _ = this.socket;\n      }\n    }\n    this.connect();\n  }\n  connectionState() {\n    return {\n      isConnected: this.socket.state === \"ready\",\n      hasEverConnected: this._hasEverConnected,\n      connectionCount: this.connectionCount,\n      connectionRetries: this.retries\n    };\n  }\n  _logVerbose(message) {\n    this.logger.logVerbose(message);\n  }\n  nextBackoff() {\n    const baseBackoff = this.initialBackoff * Math.pow(2, this.retries);\n    this.retries += 1;\n    const actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n    const jitter = actualBackoff * (Math.random() - 0.5);\n    return actualBackoff + jitter;\n  }\n}\n//# sourceMappingURL=web_socket_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/common/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/common/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSimpleObject: () => (/* binding */ isSimpleObject),\n/* harmony export */   parseArgs: () => (/* binding */ parseArgs),\n/* harmony export */   validateDeploymentUrl: () => (/* binding */ validateDeploymentUrl)\n/* harmony export */ });\n\nfunction parseArgs(args) {\n  if (args === void 0) {\n    return {};\n  }\n  if (!isSimpleObject(args)) {\n    throw new Error(\n      `The arguments to a Convex function must be an object. Received: ${args}`\n    );\n  }\n  return args;\n}\nfunction validateDeploymentUrl(deploymentUrl) {\n  if (typeof deploymentUrl === \"undefined\") {\n    throw new Error(\n      `Client created with undefined deployment address. If you used an environment variable, check that it's set.`\n    );\n  }\n  if (typeof deploymentUrl !== \"string\") {\n    throw new Error(\n      `Invalid deployment address: found ${deploymentUrl}\".`\n    );\n  }\n  if (!(deploymentUrl.startsWith(\"http:\") || deploymentUrl.startsWith(\"https:\"))) {\n    throw new Error(\n      `Invalid deployment address: Must start with \"https://\" or \"http://\". Found \"${deploymentUrl}\".`\n    );\n  }\n  try {\n    new URL(deploymentUrl);\n  } catch {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" is not a valid URL. If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`\n    );\n  }\n  if (deploymentUrl.endsWith(\".convex.site\")) {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" ends with .convex.site, which is used for HTTP Actions. Convex deployment URLs typically end with .convex.cloud? If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`\n    );\n  }\n}\nfunction isSimpleObject(value) {\n  const isObject = typeof value === \"object\";\n  const prototype = Object.getPrototypeOf(value);\n  const isSimple = prototype === null || prototype === Object.prototype || // Objects generated from other contexts (e.g. across Node.js `vm` modules) will not satisfy the previous\n  // conditions but are still simple objects.\n  prototype?.constructor?.name === \"Object\";\n  return isObject && isSimple;\n}\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2NvbW1vbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUNOO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxLQUFLO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxjQUFjO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLGNBQWM7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxzQ0FBc0MsY0FBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxjQUFjO0FBQ3BEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9jb21tb24vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBcmdzKGFyZ3MpIHtcbiAgaWYgKGFyZ3MgPT09IHZvaWQgMCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICBpZiAoIWlzU2ltcGxlT2JqZWN0KGFyZ3MpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYFRoZSBhcmd1bWVudHMgdG8gYSBDb252ZXggZnVuY3Rpb24gbXVzdCBiZSBhbiBvYmplY3QuIFJlY2VpdmVkOiAke2FyZ3N9YFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGFyZ3M7XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVEZXBsb3ltZW50VXJsKGRlcGxveW1lbnRVcmwpIHtcbiAgaWYgKHR5cGVvZiBkZXBsb3ltZW50VXJsID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYENsaWVudCBjcmVhdGVkIHdpdGggdW5kZWZpbmVkIGRlcGxveW1lbnQgYWRkcmVzcy4gSWYgeW91IHVzZWQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUsIGNoZWNrIHRoYXQgaXQncyBzZXQuYFxuICAgICk7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXBsb3ltZW50VXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEludmFsaWQgZGVwbG95bWVudCBhZGRyZXNzOiBmb3VuZCAke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbiAgaWYgKCEoZGVwbG95bWVudFVybC5zdGFydHNXaXRoKFwiaHR0cDpcIikgfHwgZGVwbG95bWVudFVybC5zdGFydHNXaXRoKFwiaHR0cHM6XCIpKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogTXVzdCBzdGFydCB3aXRoIFwiaHR0cHM6Ly9cIiBvciBcImh0dHA6Ly9cIi4gRm91bmQgXCIke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbiAgdHJ5IHtcbiAgICBuZXcgVVJMKGRlcGxveW1lbnRVcmwpO1xuICB9IGNhdGNoIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW52YWxpZCBkZXBsb3ltZW50IGFkZHJlc3M6IFwiJHtkZXBsb3ltZW50VXJsfVwiIGlzIG5vdCBhIHZhbGlkIFVSTC4gSWYgeW91IGJlbGlldmUgdGhpcyBVUkwgaXMgY29ycmVjdCwgdXNlIHRoZSBcXGBza2lwQ29udmV4RGVwbG95bWVudFVybENoZWNrXFxgIG9wdGlvbiB0byBieXBhc3MgdGhpcy5gXG4gICAgKTtcbiAgfVxuICBpZiAoZGVwbG95bWVudFVybC5lbmRzV2l0aChcIi5jb252ZXguc2l0ZVwiKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogXCIke2RlcGxveW1lbnRVcmx9XCIgZW5kcyB3aXRoIC5jb252ZXguc2l0ZSwgd2hpY2ggaXMgdXNlZCBmb3IgSFRUUCBBY3Rpb25zLiBDb252ZXggZGVwbG95bWVudCBVUkxzIHR5cGljYWxseSBlbmQgd2l0aCAuY29udmV4LmNsb3VkPyBJZiB5b3UgYmVsaWV2ZSB0aGlzIFVSTCBpcyBjb3JyZWN0LCB1c2UgdGhlIFxcYHNraXBDb252ZXhEZXBsb3ltZW50VXJsQ2hlY2tcXGAgb3B0aW9uIHRvIGJ5cGFzcyB0aGlzLmBcbiAgICApO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTaW1wbGVPYmplY3QodmFsdWUpIHtcbiAgY29uc3QgaXNPYmplY3QgPSB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCI7XG4gIGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XG4gIGNvbnN0IGlzU2ltcGxlID0gcHJvdG90eXBlID09PSBudWxsIHx8IHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZSB8fCAvLyBPYmplY3RzIGdlbmVyYXRlZCBmcm9tIG90aGVyIGNvbnRleHRzIChlLmcuIGFjcm9zcyBOb2RlLmpzIGB2bWAgbW9kdWxlcykgd2lsbCBub3Qgc2F0aXNmeSB0aGUgcHJldmlvdXNcbiAgLy8gY29uZGl0aW9ucyBidXQgYXJlIHN0aWxsIHNpbXBsZSBvYmplY3RzLlxuICBwcm90b3R5cGU/LmNvbnN0cnVjdG9yPy5uYW1lID09PSBcIk9iamVjdFwiO1xuICByZXR1cm4gaXNPYmplY3QgJiYgaXNTaW1wbGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/common/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/index.js":
/*!***********************************************!*\
  !*** ./node_modules/convex/dist/esm/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n\nconst version = \"1.24.2\";\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IFwiMS4yNC4yXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/nextjs/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/nextjs/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAction: () => (/* binding */ fetchAction),\n/* harmony export */   fetchMutation: () => (/* binding */ fetchMutation),\n/* harmony export */   fetchQuery: () => (/* binding */ fetchQuery),\n/* harmony export */   preloadQuery: () => (/* binding */ preloadQuery),\n/* harmony export */   preloadedQueryResult: () => (/* binding */ preloadedQueryResult)\n/* harmony export */ });\n/* harmony import */ var _browser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../browser/index.js */ \"(rsc)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/index.js */ \"(rsc)/./node_modules/convex/dist/esm/server/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\n\nasync function preloadQuery(query, ...args) {\n  const value = await fetchQuery(query, ...args);\n  const preloaded = {\n    _name: (0,_server_index_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query),\n    _argsJSON: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(args[0] ?? {}),\n    _valueJSON: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(value)\n  };\n  return preloaded;\n}\nfunction preloadedQueryResult(preloaded) {\n  return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloaded._valueJSON);\n}\nasync function fetchQuery(query, ...args) {\n  const [fnArgs, options] = args;\n  const client = setupClient(options ?? {});\n  return client.query(query, fnArgs);\n}\nasync function fetchMutation(mutation, ...args) {\n  const [fnArgs, options] = args;\n  const client = setupClient(options ?? {});\n  return client.mutation(mutation, fnArgs);\n}\nasync function fetchAction(action, ...args) {\n  const [fnArgs, options] = args;\n  const client = setupClient(options ?? {});\n  return client.action(action, fnArgs);\n}\nfunction setupClient(options) {\n  const client = new _browser_index_js__WEBPACK_IMPORTED_MODULE_0__.ConvexHttpClient(\n    getConvexUrl(options.url, options.skipConvexDeploymentUrlCheck ?? false)\n  );\n  if (options.token !== void 0) {\n    client.setAuth(options.token);\n  }\n  if (options.adminToken !== void 0) {\n    client.setAdminAuth(options.adminToken);\n  }\n  client.setFetchOptions({ cache: \"no-store\" });\n  return client;\n}\nfunction getConvexUrl(deploymentUrl, skipConvexDeploymentUrlCheck) {\n  const url = deploymentUrl ?? \"https://laudable-sparrow-361.convex.cloud\";\n  const isFromEnv = deploymentUrl === void 0;\n  if (typeof url !== \"string\") {\n    throw new Error(\n      isFromEnv ? `Environment variable NEXT_PUBLIC_CONVEX_URL is not set.` : `Convex function called with invalid deployment address.`\n    );\n  }\n  if (!skipConvexDeploymentUrlCheck) {\n    (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.validateDeploymentUrl)(url);\n  }\n  return url;\n}\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL25leHRqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBYTtBQUMwQztBQUNJO0FBRy9CO0FBQ29DO0FBQ3pEO0FBQ1A7QUFDQTtBQUNBLFdBQVcsaUVBQWU7QUFDMUIsZUFBZSw4REFBWSxjQUFjO0FBQ3pDLGdCQUFnQiw4REFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDTztBQUNQLFNBQVMsOERBQVk7QUFDckI7QUFDTztBQUNQO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwrREFBZ0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixtQkFBbUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDJDQUFrQztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdUVBQXFCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL25leHRqcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IENvbnZleEh0dHBDbGllbnQgfSBmcm9tIFwiLi4vYnJvd3Nlci9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVEZXBsb3ltZW50VXJsIH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHtcbiAgZ2V0RnVuY3Rpb25OYW1lXG59IGZyb20gXCIuLi9zZXJ2ZXIvaW5kZXguanNcIjtcbmltcG9ydCB7IGNvbnZleFRvSnNvbiwganNvblRvQ29udmV4IH0gZnJvbSBcIi4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWRRdWVyeShxdWVyeSwgLi4uYXJncykge1xuICBjb25zdCB2YWx1ZSA9IGF3YWl0IGZldGNoUXVlcnkocXVlcnksIC4uLmFyZ3MpO1xuICBjb25zdCBwcmVsb2FkZWQgPSB7XG4gICAgX25hbWU6IGdldEZ1bmN0aW9uTmFtZShxdWVyeSksXG4gICAgX2FyZ3NKU09OOiBjb252ZXhUb0pzb24oYXJnc1swXSA/PyB7fSksXG4gICAgX3ZhbHVlSlNPTjogY29udmV4VG9Kc29uKHZhbHVlKVxuICB9O1xuICByZXR1cm4gcHJlbG9hZGVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByZWxvYWRlZFF1ZXJ5UmVzdWx0KHByZWxvYWRlZCkge1xuICByZXR1cm4ganNvblRvQ29udmV4KHByZWxvYWRlZC5fdmFsdWVKU09OKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFF1ZXJ5KHF1ZXJ5LCAuLi5hcmdzKSB7XG4gIGNvbnN0IFtmbkFyZ3MsIG9wdGlvbnNdID0gYXJncztcbiAgY29uc3QgY2xpZW50ID0gc2V0dXBDbGllbnQob3B0aW9ucyA/PyB7fSk7XG4gIHJldHVybiBjbGllbnQucXVlcnkocXVlcnksIGZuQXJncyk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hNdXRhdGlvbihtdXRhdGlvbiwgLi4uYXJncykge1xuICBjb25zdCBbZm5BcmdzLCBvcHRpb25zXSA9IGFyZ3M7XG4gIGNvbnN0IGNsaWVudCA9IHNldHVwQ2xpZW50KG9wdGlvbnMgPz8ge30pO1xuICByZXR1cm4gY2xpZW50Lm11dGF0aW9uKG11dGF0aW9uLCBmbkFyZ3MpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoQWN0aW9uKGFjdGlvbiwgLi4uYXJncykge1xuICBjb25zdCBbZm5BcmdzLCBvcHRpb25zXSA9IGFyZ3M7XG4gIGNvbnN0IGNsaWVudCA9IHNldHVwQ2xpZW50KG9wdGlvbnMgPz8ge30pO1xuICByZXR1cm4gY2xpZW50LmFjdGlvbihhY3Rpb24sIGZuQXJncyk7XG59XG5mdW5jdGlvbiBzZXR1cENsaWVudChvcHRpb25zKSB7XG4gIGNvbnN0IGNsaWVudCA9IG5ldyBDb252ZXhIdHRwQ2xpZW50KFxuICAgIGdldENvbnZleFVybChvcHRpb25zLnVybCwgb3B0aW9ucy5za2lwQ29udmV4RGVwbG95bWVudFVybENoZWNrID8/IGZhbHNlKVxuICApO1xuICBpZiAob3B0aW9ucy50b2tlbiAhPT0gdm9pZCAwKSB7XG4gICAgY2xpZW50LnNldEF1dGgob3B0aW9ucy50b2tlbik7XG4gIH1cbiAgaWYgKG9wdGlvbnMuYWRtaW5Ub2tlbiAhPT0gdm9pZCAwKSB7XG4gICAgY2xpZW50LnNldEFkbWluQXV0aChvcHRpb25zLmFkbWluVG9rZW4pO1xuICB9XG4gIGNsaWVudC5zZXRGZXRjaE9wdGlvbnMoeyBjYWNoZTogXCJuby1zdG9yZVwiIH0pO1xuICByZXR1cm4gY2xpZW50O1xufVxuZnVuY3Rpb24gZ2V0Q29udmV4VXJsKGRlcGxveW1lbnRVcmwsIHNraXBDb252ZXhEZXBsb3ltZW50VXJsQ2hlY2spIHtcbiAgY29uc3QgdXJsID0gZGVwbG95bWVudFVybCA/PyBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DT05WRVhfVVJMO1xuICBjb25zdCBpc0Zyb21FbnYgPSBkZXBsb3ltZW50VXJsID09PSB2b2lkIDA7XG4gIGlmICh0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgaXNGcm9tRW52ID8gYEVudmlyb25tZW50IHZhcmlhYmxlIE5FWFRfUFVCTElDX0NPTlZFWF9VUkwgaXMgbm90IHNldC5gIDogYENvbnZleCBmdW5jdGlvbiBjYWxsZWQgd2l0aCBpbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzcy5gXG4gICAgKTtcbiAgfVxuICBpZiAoIXNraXBDb252ZXhEZXBsb3ltZW50VXJsQ2hlY2spIHtcbiAgICB2YWxpZGF0ZURlcGxveW1lbnRVcmwodXJsKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/nextjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/api.js":
/*!****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/api.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anyApi: () => (/* binding */ anyApi),\n/* harmony export */   filterApi: () => (/* binding */ filterApi),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   justActions: () => (/* binding */ justActions),\n/* harmony export */   justInternal: () => (/* binding */ justInternal),\n/* harmony export */   justMutations: () => (/* binding */ justMutations),\n/* harmony export */   justPaginatedQueries: () => (/* binding */ justPaginatedQueries),\n/* harmony export */   justPublic: () => (/* binding */ justPublic),\n/* harmony export */   justQueries: () => (/* binding */ justQueries),\n/* harmony export */   justSchedulable: () => (/* binding */ justSchedulable),\n/* harmony export */   makeFunctionReference: () => (/* binding */ makeFunctionReference)\n/* harmony export */ });\n/* harmony import */ var _functionName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functionName.js */ \"(rsc)/./node_modules/convex/dist/esm/server/functionName.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/paths.js */ \"(rsc)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\nfunction getFunctionName(functionReference) {\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionAddress)(functionReference);\n  if (address.name === void 0) {\n    if (address.functionHandle !== void 0) {\n      throw new Error(\n        `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received function handle ${address.functionHandle}`\n      );\n    } else if (address.reference !== void 0) {\n      throw new Error(\n        `Expected function reference in the current component like \"api.file.func\" or \"internal.file.func\", but received reference ${address.reference}`\n      );\n    }\n    throw new Error(\n      `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received ${JSON.stringify(address)}`\n    );\n  }\n  if (typeof functionReference === \"string\") return functionReference;\n  const name = functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName];\n  if (!name) {\n    throw new Error(`${functionReference} is not a functionReference`);\n  }\n  return name;\n}\nfunction makeFunctionReference(name) {\n  return { [_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName]: name };\n}\nfunction createApi(pathParts = []) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createApi(newParts);\n      } else if (prop === _functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName) {\n        if (pathParts.length < 2) {\n          const found = [\"api\", ...pathParts].join(\".\");\n          throw new Error(\n            `API path is expected to be of the form \\`api.moduleName.functionName\\`. Found: \\`${found}\\``\n          );\n        }\n        const path = pathParts.slice(0, -1).join(\"/\");\n        const exportName = pathParts[pathParts.length - 1];\n        if (exportName === \"default\") {\n          return path;\n        } else {\n          return path + \":\" + exportName;\n        }\n      } else if (prop === Symbol.toStringTag) {\n        return \"FunctionReference\";\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nfunction filterApi(api) {\n  return api;\n}\nfunction justInternal(api) {\n  return api;\n}\nfunction justPublic(api) {\n  return api;\n}\nfunction justQueries(api) {\n  return api;\n}\nfunction justMutations(api) {\n  return api;\n}\nfunction justActions(api) {\n  return api;\n}\nfunction justPaginatedQueries(api) {\n  return api;\n}\nfunction justSchedulable(api) {\n  return api;\n}\nconst anyApi = createApi();\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQ29DO0FBQ1U7QUFDcEQ7QUFDUCxrQkFBa0Isd0VBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLGtIQUFrSCx1QkFBdUI7QUFDekk7QUFDQSxNQUFNO0FBQ047QUFDQSxxSUFBcUksa0JBQWtCO0FBQ3ZKO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyx3QkFBd0I7QUFDeEg7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDBEQUFZO0FBQzdDO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsQ0FBQywwREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0JBQWtCLDBEQUFZO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxNQUFNO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgZnVuY3Rpb25OYW1lIH0gZnJvbSBcIi4vZnVuY3Rpb25OYW1lLmpzXCI7XG5pbXBvcnQgeyBnZXRGdW5jdGlvbkFkZHJlc3MgfSBmcm9tIFwiLi9jb21wb25lbnRzL3BhdGhzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVuY3Rpb25OYW1lKGZ1bmN0aW9uUmVmZXJlbmNlKSB7XG4gIGNvbnN0IGFkZHJlc3MgPSBnZXRGdW5jdGlvbkFkZHJlc3MoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICBpZiAoYWRkcmVzcy5uYW1lID09PSB2b2lkIDApIHtcbiAgICBpZiAoYWRkcmVzcy5mdW5jdGlvbkhhbmRsZSAhPT0gdm9pZCAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBFeHBlY3RlZCBmdW5jdGlvbiByZWZlcmVuY2UgbGlrZSBcImFwaS5maWxlLmZ1bmNcIiBvciBcImludGVybmFsLmZpbGUuZnVuY1wiLCBidXQgcmVjZWl2ZWQgZnVuY3Rpb24gaGFuZGxlICR7YWRkcmVzcy5mdW5jdGlvbkhhbmRsZX1gXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoYWRkcmVzcy5yZWZlcmVuY2UgIT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgZnVuY3Rpb24gcmVmZXJlbmNlIGluIHRoZSBjdXJyZW50IGNvbXBvbmVudCBsaWtlIFwiYXBpLmZpbGUuZnVuY1wiIG9yIFwiaW50ZXJuYWwuZmlsZS5mdW5jXCIsIGJ1dCByZWNlaXZlZCByZWZlcmVuY2UgJHthZGRyZXNzLnJlZmVyZW5jZX1gXG4gICAgICApO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgRXhwZWN0ZWQgZnVuY3Rpb24gcmVmZXJlbmNlIGxpa2UgXCJhcGkuZmlsZS5mdW5jXCIgb3IgXCJpbnRlcm5hbC5maWxlLmZ1bmNcIiwgYnV0IHJlY2VpdmVkICR7SlNPTi5zdHJpbmdpZnkoYWRkcmVzcyl9YFxuICAgICk7XG4gIH1cbiAgaWYgKHR5cGVvZiBmdW5jdGlvblJlZmVyZW5jZSA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGZ1bmN0aW9uUmVmZXJlbmNlO1xuICBjb25zdCBuYW1lID0gZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXTtcbiAgaWYgKCFuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2Z1bmN0aW9uUmVmZXJlbmNlfSBpcyBub3QgYSBmdW5jdGlvblJlZmVyZW5jZWApO1xuICB9XG4gIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VGdW5jdGlvblJlZmVyZW5jZShuYW1lKSB7XG4gIHJldHVybiB7IFtmdW5jdGlvbk5hbWVdOiBuYW1lIH07XG59XG5mdW5jdGlvbiBjcmVhdGVBcGkocGF0aFBhcnRzID0gW10pIHtcbiAgY29uc3QgaGFuZGxlciA9IHtcbiAgICBnZXQoXywgcHJvcCkge1xuICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IG5ld1BhcnRzID0gWy4uLnBhdGhQYXJ0cywgcHJvcF07XG4gICAgICAgIHJldHVybiBjcmVhdGVBcGkobmV3UGFydHMpO1xuICAgICAgfSBlbHNlIGlmIChwcm9wID09PSBmdW5jdGlvbk5hbWUpIHtcbiAgICAgICAgaWYgKHBhdGhQYXJ0cy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgY29uc3QgZm91bmQgPSBbXCJhcGlcIiwgLi4ucGF0aFBhcnRzXS5qb2luKFwiLlwiKTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgQVBJIHBhdGggaXMgZXhwZWN0ZWQgdG8gYmUgb2YgdGhlIGZvcm0gXFxgYXBpLm1vZHVsZU5hbWUuZnVuY3Rpb25OYW1lXFxgLiBGb3VuZDogXFxgJHtmb3VuZH1cXGBgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXRoID0gcGF0aFBhcnRzLnNsaWNlKDAsIC0xKS5qb2luKFwiL1wiKTtcbiAgICAgICAgY29uc3QgZXhwb3J0TmFtZSA9IHBhdGhQYXJ0c1twYXRoUGFydHMubGVuZ3RoIC0gMV07XG4gICAgICAgIGlmIChleHBvcnROYW1lID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBwYXRoICsgXCI6XCIgKyBleHBvcnROYW1lO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09IFN5bWJvbC50b1N0cmluZ1RhZykge1xuICAgICAgICByZXR1cm4gXCJGdW5jdGlvblJlZmVyZW5jZVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJldHVybiBuZXcgUHJveHkoe30sIGhhbmRsZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckFwaShhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0SW50ZXJuYWwoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdFB1YmxpYyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0UXVlcmllcyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0TXV0YXRpb25zKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RBY3Rpb25zKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RQYWdpbmF0ZWRRdWVyaWVzKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RTY2hlZHVsYWJsZShhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBjb25zdCBhbnlBcGkgPSBjcmVhdGVBcGkoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/api.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/components/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/components/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   componentsGeneric: () => (/* binding */ componentsGeneric),\n/* harmony export */   createFunctionHandle: () => (/* binding */ createFunctionHandle),\n/* harmony export */   currentSystemUdfInComponent: () => (/* binding */ currentSystemUdfInComponent),\n/* harmony export */   defineApp: () => (/* binding */ defineApp),\n/* harmony export */   defineComponent: () => (/* binding */ defineComponent),\n/* harmony export */   getFunctionAddress: () => (/* reexport safe */ _paths_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionAddress)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _impl_syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../impl/syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _paths_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./paths.js */ \"(rsc)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nasync function createFunctionHandle(functionReference) {\n  const address = (0,_paths_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionAddress)(functionReference);\n  return await (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/createFunctionHandle\", {\n    ...address,\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n  });\n}\nclass InstalledComponent {\n  constructor(definition, name) {\n    /**\n     * @internal\n     */\n    __publicField(this, \"_definition\");\n    /**\n     * @internal\n     */\n    __publicField(this, \"_name\");\n    this._definition = definition;\n    this._name = name;\n    (0,_paths_js__WEBPACK_IMPORTED_MODULE_3__.setReferencePath)(this, `_reference/childComponent/${name}`);\n  }\n  get exports() {\n    return createExports(this._name, []);\n  }\n}\nfunction createExports(name, pathParts) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createExports(name, newParts);\n      } else if (prop === _paths_js__WEBPACK_IMPORTED_MODULE_3__.toReferencePath) {\n        let reference = `_reference/childComponent/${name}`;\n        for (const part of pathParts) {\n          reference += `/${part}`;\n        }\n        return reference;\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nfunction use(definition, options) {\n  const importedComponentDefinition = definition;\n  if (typeof importedComponentDefinition.componentDefinitionPath !== \"string\") {\n    throw new Error(\n      \"Component definition does not have the required componentDefinitionPath property. This code only works in Convex runtime.\"\n    );\n  }\n  const name = options?.name || // added recently\n  importedComponentDefinition.defaultName || // can be removed once backend is out\n  importedComponentDefinition.componentDefinitionPath.split(\"/\").pop();\n  this._childComponents.push([name, importedComponentDefinition, {}]);\n  return new InstalledComponent(definition, name);\n}\nfunction exportAppForAnalysis() {\n  const definitionType = { type: \"app\" };\n  const childComponents = serializeChildComponents(this._childComponents);\n  return {\n    definitionType,\n    childComponents,\n    httpMounts: {},\n    exports: serializeExportTree(this._exportTree)\n  };\n}\nfunction serializeExportTree(tree) {\n  const branch = [];\n  for (const [key, child] of Object.entries(tree)) {\n    let node;\n    if (typeof child === \"string\") {\n      node = { type: \"leaf\", leaf: child };\n    } else {\n      node = serializeExportTree(child);\n    }\n    branch.push([key, node]);\n  }\n  return { type: \"branch\", branch };\n}\nfunction serializeChildComponents(childComponents) {\n  return childComponents.map(([name, definition, p]) => {\n    let args = null;\n    if (p !== null) {\n      args = [];\n      for (const [name2, value] of Object.entries(p)) {\n        if (value !== void 0) {\n          args.push([\n            name2,\n            { type: \"value\", value: JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)) }\n          ]);\n        }\n      }\n    }\n    const path = definition.componentDefinitionPath;\n    if (!path)\n      throw new Error(\n        \"no .componentPath for component definition \" + JSON.stringify(definition, null, 2)\n      );\n    return {\n      name,\n      path,\n      args\n    };\n  });\n}\nfunction exportComponentForAnalysis() {\n  const args = Object.entries(\n    this._args\n  ).map(([name, validator]) => [\n    name,\n    {\n      type: \"value\",\n      value: JSON.stringify(validator.json)\n    }\n  ]);\n  const definitionType = {\n    type: \"childComponent\",\n    name: this._name,\n    args\n  };\n  const childComponents = serializeChildComponents(this._childComponents);\n  return {\n    name: this._name,\n    definitionType,\n    childComponents,\n    httpMounts: {},\n    exports: serializeExportTree(this._exportTree)\n  };\n}\nfunction defineComponent(name) {\n  const ret = {\n    _isRoot: false,\n    _name: name,\n    _args: {},\n    _childComponents: [],\n    _exportTree: {},\n    _onInitCallbacks: {},\n    export: exportComponentForAnalysis,\n    use,\n    // pretend to conform to ComponentDefinition, which temporarily expects __args\n    ...{}\n  };\n  return ret;\n}\nfunction defineApp() {\n  const ret = {\n    _isRoot: true,\n    _childComponents: [],\n    _exportTree: {},\n    export: exportAppForAnalysis,\n    use\n  };\n  return ret;\n}\nfunction currentSystemUdfInComponent(componentId) {\n  return {\n    [_paths_js__WEBPACK_IMPORTED_MODULE_3__.toReferencePath]: `_reference/currentSystemUdfInComponent/${componentId}`\n  };\n}\nfunction createChildComponents(root, pathParts) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createChildComponents(root, newParts);\n      } else if (prop === _paths_js__WEBPACK_IMPORTED_MODULE_3__.toReferencePath) {\n        if (pathParts.length < 1) {\n          const found = [root, ...pathParts].join(\".\");\n          throw new Error(\n            `API path is expected to be of the form \\`${root}.childComponent.functionName\\`. Found: \\`${found}\\``\n          );\n        }\n        return `_reference/childComponent/` + pathParts.join(\"/\");\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nconst componentsGeneric = () => createChildComponents(\"components\", []);\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNxRDtBQUNaO0FBQ2dCO0FBS3JDO0FBQzRCO0FBQ3pDO0FBQ1Asa0JBQWtCLDZEQUFrQjtBQUNwQyxlQUFlLHFFQUFtQjtBQUNsQztBQUNBLFdBQVc7QUFDWCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDJEQUFnQixvQ0FBb0MsS0FBSztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrQkFBa0Isc0RBQWU7QUFDekMscURBQXFELEtBQUs7QUFDMUQ7QUFDQSwyQkFBMkIsS0FBSztBQUNoQztBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUU7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQ0FBcUMsOERBQVk7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQkFBbUI7QUFDbkIsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxLQUFLLHNEQUFlLDZDQUE2QyxZQUFZO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtCQUFrQixzREFBZTtBQUN6QztBQUNBO0FBQ0E7QUFDQSx3REFBd0QsS0FBSywyQ0FBMkMsTUFBTTtBQUM5RztBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDTztBQUNQIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IGNvbnZleFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tIFwiLi4vLi4vaW5kZXguanNcIjtcbmltcG9ydCB7IHBlcmZvcm1Bc3luY1N5c2NhbGwgfSBmcm9tIFwiLi4vaW1wbC9zeXNjYWxsLmpzXCI7XG5pbXBvcnQge1xuICBnZXRGdW5jdGlvbkFkZHJlc3MsXG4gIHNldFJlZmVyZW5jZVBhdGgsXG4gIHRvUmVmZXJlbmNlUGF0aFxufSBmcm9tIFwiLi9wYXRocy5qc1wiO1xuZXhwb3J0IHsgZ2V0RnVuY3Rpb25BZGRyZXNzIH0gZnJvbSBcIi4vcGF0aHMuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVGdW5jdGlvbkhhbmRsZShmdW5jdGlvblJlZmVyZW5jZSkge1xuICBjb25zdCBhZGRyZXNzID0gZ2V0RnVuY3Rpb25BZGRyZXNzKGZ1bmN0aW9uUmVmZXJlbmNlKTtcbiAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvY3JlYXRlRnVuY3Rpb25IYW5kbGVcIiwge1xuICAgIC4uLmFkZHJlc3MsXG4gICAgdmVyc2lvblxuICB9KTtcbn1cbmNsYXNzIEluc3RhbGxlZENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKGRlZmluaXRpb24sIG5hbWUpIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX2RlZmluaXRpb25cIik7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9uYW1lXCIpO1xuICAgIHRoaXMuX2RlZmluaXRpb24gPSBkZWZpbml0aW9uO1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHNldFJlZmVyZW5jZVBhdGgodGhpcywgYF9yZWZlcmVuY2UvY2hpbGRDb21wb25lbnQvJHtuYW1lfWApO1xuICB9XG4gIGdldCBleHBvcnRzKCkge1xuICAgIHJldHVybiBjcmVhdGVFeHBvcnRzKHRoaXMuX25hbWUsIFtdKTtcbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlRXhwb3J0cyhuYW1lLCBwYXRoUGFydHMpIHtcbiAgY29uc3QgaGFuZGxlciA9IHtcbiAgICBnZXQoXywgcHJvcCkge1xuICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IG5ld1BhcnRzID0gWy4uLnBhdGhQYXJ0cywgcHJvcF07XG4gICAgICAgIHJldHVybiBjcmVhdGVFeHBvcnRzKG5hbWUsIG5ld1BhcnRzKTtcbiAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gdG9SZWZlcmVuY2VQYXRoKSB7XG4gICAgICAgIGxldCByZWZlcmVuY2UgPSBgX3JlZmVyZW5jZS9jaGlsZENvbXBvbmVudC8ke25hbWV9YDtcbiAgICAgICAgZm9yIChjb25zdCBwYXJ0IG9mIHBhdGhQYXJ0cykge1xuICAgICAgICAgIHJlZmVyZW5jZSArPSBgLyR7cGFydH1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZWZlcmVuY2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdm9pZCAwO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIG5ldyBQcm94eSh7fSwgaGFuZGxlcik7XG59XG5mdW5jdGlvbiB1c2UoZGVmaW5pdGlvbiwgb3B0aW9ucykge1xuICBjb25zdCBpbXBvcnRlZENvbXBvbmVudERlZmluaXRpb24gPSBkZWZpbml0aW9uO1xuICBpZiAodHlwZW9mIGltcG9ydGVkQ29tcG9uZW50RGVmaW5pdGlvbi5jb21wb25lbnREZWZpbml0aW9uUGF0aCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiQ29tcG9uZW50IGRlZmluaXRpb24gZG9lcyBub3QgaGF2ZSB0aGUgcmVxdWlyZWQgY29tcG9uZW50RGVmaW5pdGlvblBhdGggcHJvcGVydHkuIFRoaXMgY29kZSBvbmx5IHdvcmtzIGluIENvbnZleCBydW50aW1lLlwiXG4gICAgKTtcbiAgfVxuICBjb25zdCBuYW1lID0gb3B0aW9ucz8ubmFtZSB8fCAvLyBhZGRlZCByZWNlbnRseVxuICBpbXBvcnRlZENvbXBvbmVudERlZmluaXRpb24uZGVmYXVsdE5hbWUgfHwgLy8gY2FuIGJlIHJlbW92ZWQgb25jZSBiYWNrZW5kIGlzIG91dFxuICBpbXBvcnRlZENvbXBvbmVudERlZmluaXRpb24uY29tcG9uZW50RGVmaW5pdGlvblBhdGguc3BsaXQoXCIvXCIpLnBvcCgpO1xuICB0aGlzLl9jaGlsZENvbXBvbmVudHMucHVzaChbbmFtZSwgaW1wb3J0ZWRDb21wb25lbnREZWZpbml0aW9uLCB7fV0pO1xuICByZXR1cm4gbmV3IEluc3RhbGxlZENvbXBvbmVudChkZWZpbml0aW9uLCBuYW1lKTtcbn1cbmZ1bmN0aW9uIGV4cG9ydEFwcEZvckFuYWx5c2lzKCkge1xuICBjb25zdCBkZWZpbml0aW9uVHlwZSA9IHsgdHlwZTogXCJhcHBcIiB9O1xuICBjb25zdCBjaGlsZENvbXBvbmVudHMgPSBzZXJpYWxpemVDaGlsZENvbXBvbmVudHModGhpcy5fY2hpbGRDb21wb25lbnRzKTtcbiAgcmV0dXJuIHtcbiAgICBkZWZpbml0aW9uVHlwZSxcbiAgICBjaGlsZENvbXBvbmVudHMsXG4gICAgaHR0cE1vdW50czoge30sXG4gICAgZXhwb3J0czogc2VyaWFsaXplRXhwb3J0VHJlZSh0aGlzLl9leHBvcnRUcmVlKVxuICB9O1xufVxuZnVuY3Rpb24gc2VyaWFsaXplRXhwb3J0VHJlZSh0cmVlKSB7XG4gIGNvbnN0IGJyYW5jaCA9IFtdO1xuICBmb3IgKGNvbnN0IFtrZXksIGNoaWxkXSBvZiBPYmplY3QuZW50cmllcyh0cmVlKSkge1xuICAgIGxldCBub2RlO1xuICAgIGlmICh0eXBlb2YgY2hpbGQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG5vZGUgPSB7IHR5cGU6IFwibGVhZlwiLCBsZWFmOiBjaGlsZCB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBub2RlID0gc2VyaWFsaXplRXhwb3J0VHJlZShjaGlsZCk7XG4gICAgfVxuICAgIGJyYW5jaC5wdXNoKFtrZXksIG5vZGVdKTtcbiAgfVxuICByZXR1cm4geyB0eXBlOiBcImJyYW5jaFwiLCBicmFuY2ggfTtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUNoaWxkQ29tcG9uZW50cyhjaGlsZENvbXBvbmVudHMpIHtcbiAgcmV0dXJuIGNoaWxkQ29tcG9uZW50cy5tYXAoKFtuYW1lLCBkZWZpbml0aW9uLCBwXSkgPT4ge1xuICAgIGxldCBhcmdzID0gbnVsbDtcbiAgICBpZiAocCAhPT0gbnVsbCkge1xuICAgICAgYXJncyA9IFtdO1xuICAgICAgZm9yIChjb25zdCBbbmFtZTIsIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwKSkge1xuICAgICAgICBpZiAodmFsdWUgIT09IHZvaWQgMCkge1xuICAgICAgICAgIGFyZ3MucHVzaChbXG4gICAgICAgICAgICBuYW1lMixcbiAgICAgICAgICAgIHsgdHlwZTogXCJ2YWx1ZVwiLCB2YWx1ZTogSlNPTi5zdHJpbmdpZnkoY29udmV4VG9Kc29uKHZhbHVlKSkgfVxuICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHBhdGggPSBkZWZpbml0aW9uLmNvbXBvbmVudERlZmluaXRpb25QYXRoO1xuICAgIGlmICghcGF0aClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJubyAuY29tcG9uZW50UGF0aCBmb3IgY29tcG9uZW50IGRlZmluaXRpb24gXCIgKyBKU09OLnN0cmluZ2lmeShkZWZpbml0aW9uLCBudWxsLCAyKVxuICAgICAgKTtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZSxcbiAgICAgIHBhdGgsXG4gICAgICBhcmdzXG4gICAgfTtcbiAgfSk7XG59XG5mdW5jdGlvbiBleHBvcnRDb21wb25lbnRGb3JBbmFseXNpcygpIHtcbiAgY29uc3QgYXJncyA9IE9iamVjdC5lbnRyaWVzKFxuICAgIHRoaXMuX2FyZ3NcbiAgKS5tYXAoKFtuYW1lLCB2YWxpZGF0b3JdKSA9PiBbXG4gICAgbmFtZSxcbiAgICB7XG4gICAgICB0eXBlOiBcInZhbHVlXCIsXG4gICAgICB2YWx1ZTogSlNPTi5zdHJpbmdpZnkodmFsaWRhdG9yLmpzb24pXG4gICAgfVxuICBdKTtcbiAgY29uc3QgZGVmaW5pdGlvblR5cGUgPSB7XG4gICAgdHlwZTogXCJjaGlsZENvbXBvbmVudFwiLFxuICAgIG5hbWU6IHRoaXMuX25hbWUsXG4gICAgYXJnc1xuICB9O1xuICBjb25zdCBjaGlsZENvbXBvbmVudHMgPSBzZXJpYWxpemVDaGlsZENvbXBvbmVudHModGhpcy5fY2hpbGRDb21wb25lbnRzKTtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiB0aGlzLl9uYW1lLFxuICAgIGRlZmluaXRpb25UeXBlLFxuICAgIGNoaWxkQ29tcG9uZW50cyxcbiAgICBodHRwTW91bnRzOiB7fSxcbiAgICBleHBvcnRzOiBzZXJpYWxpemVFeHBvcnRUcmVlKHRoaXMuX2V4cG9ydFRyZWUpXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lQ29tcG9uZW50KG5hbWUpIHtcbiAgY29uc3QgcmV0ID0ge1xuICAgIF9pc1Jvb3Q6IGZhbHNlLFxuICAgIF9uYW1lOiBuYW1lLFxuICAgIF9hcmdzOiB7fSxcbiAgICBfY2hpbGRDb21wb25lbnRzOiBbXSxcbiAgICBfZXhwb3J0VHJlZToge30sXG4gICAgX29uSW5pdENhbGxiYWNrczoge30sXG4gICAgZXhwb3J0OiBleHBvcnRDb21wb25lbnRGb3JBbmFseXNpcyxcbiAgICB1c2UsXG4gICAgLy8gcHJldGVuZCB0byBjb25mb3JtIHRvIENvbXBvbmVudERlZmluaXRpb24sIHdoaWNoIHRlbXBvcmFyaWx5IGV4cGVjdHMgX19hcmdzXG4gICAgLi4ue31cbiAgfTtcbiAgcmV0dXJuIHJldDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVBcHAoKSB7XG4gIGNvbnN0IHJldCA9IHtcbiAgICBfaXNSb290OiB0cnVlLFxuICAgIF9jaGlsZENvbXBvbmVudHM6IFtdLFxuICAgIF9leHBvcnRUcmVlOiB7fSxcbiAgICBleHBvcnQ6IGV4cG9ydEFwcEZvckFuYWx5c2lzLFxuICAgIHVzZVxuICB9O1xuICByZXR1cm4gcmV0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGN1cnJlbnRTeXN0ZW1VZGZJbkNvbXBvbmVudChjb21wb25lbnRJZCkge1xuICByZXR1cm4ge1xuICAgIFt0b1JlZmVyZW5jZVBhdGhdOiBgX3JlZmVyZW5jZS9jdXJyZW50U3lzdGVtVWRmSW5Db21wb25lbnQvJHtjb21wb25lbnRJZH1gXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVDaGlsZENvbXBvbmVudHMocm9vdCwgcGF0aFBhcnRzKSB7XG4gIGNvbnN0IGhhbmRsZXIgPSB7XG4gICAgZ2V0KF8sIHByb3ApIHtcbiAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCBuZXdQYXJ0cyA9IFsuLi5wYXRoUGFydHMsIHByb3BdO1xuICAgICAgICByZXR1cm4gY3JlYXRlQ2hpbGRDb21wb25lbnRzKHJvb3QsIG5ld1BhcnRzKTtcbiAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gdG9SZWZlcmVuY2VQYXRoKSB7XG4gICAgICAgIGlmIChwYXRoUGFydHMubGVuZ3RoIDwgMSkge1xuICAgICAgICAgIGNvbnN0IGZvdW5kID0gW3Jvb3QsIC4uLnBhdGhQYXJ0c10uam9pbihcIi5cIik7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgYEFQSSBwYXRoIGlzIGV4cGVjdGVkIHRvIGJlIG9mIHRoZSBmb3JtIFxcYCR7cm9vdH0uY2hpbGRDb21wb25lbnQuZnVuY3Rpb25OYW1lXFxgLiBGb3VuZDogXFxgJHtmb3VuZH1cXGBgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYF9yZWZlcmVuY2UvY2hpbGRDb21wb25lbnQvYCArIHBhdGhQYXJ0cy5qb2luKFwiL1wiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICByZXR1cm4gbmV3IFByb3h5KHt9LCBoYW5kbGVyKTtcbn1cbmV4cG9ydCBjb25zdCBjb21wb25lbnRzR2VuZXJpYyA9ICgpID0+IGNyZWF0ZUNoaWxkQ29tcG9uZW50cyhcImNvbXBvbmVudHNcIiwgW10pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/components/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/components/paths.js":
/*!*****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/components/paths.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractReferencePath: () => (/* binding */ extractReferencePath),\n/* harmony export */   getFunctionAddress: () => (/* binding */ getFunctionAddress),\n/* harmony export */   isFunctionHandle: () => (/* binding */ isFunctionHandle),\n/* harmony export */   setReferencePath: () => (/* binding */ setReferencePath),\n/* harmony export */   toReferencePath: () => (/* binding */ toReferencePath)\n/* harmony export */ });\n/* harmony import */ var _functionName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functionName.js */ \"(rsc)/./node_modules/convex/dist/esm/server/functionName.js\");\n\n\nconst toReferencePath = Symbol.for(\"toReferencePath\");\nfunction setReferencePath(obj, value) {\n  obj[toReferencePath] = value;\n}\nfunction extractReferencePath(reference) {\n  return reference[toReferencePath] ?? null;\n}\nfunction isFunctionHandle(s) {\n  return s.startsWith(\"function://\");\n}\nfunction getFunctionAddress(functionReference) {\n  let functionAddress;\n  if (typeof functionReference === \"string\") {\n    if (isFunctionHandle(functionReference)) {\n      functionAddress = { functionHandle: functionReference };\n    } else {\n      functionAddress = { name: functionReference };\n    }\n  } else if (functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName]) {\n    functionAddress = { name: functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName] };\n  } else {\n    const referencePath = extractReferencePath(functionReference);\n    if (!referencePath) {\n      throw new Error(`${functionReference} is not a functionReference`);\n    }\n    functionAddress = { reference: referencePath };\n  }\n  return functionAddress;\n}\n//# sourceMappingURL=paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL3BhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3FDO0FBQzNDO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIsTUFBTTtBQUNOLDBCQUEwQjtBQUMxQjtBQUNBLElBQUksMkJBQTJCLDBEQUFZO0FBQzNDLHdCQUF3Qix3QkFBd0IsMERBQVk7QUFDNUQsSUFBSTtBQUNKO0FBQ0E7QUFDQSx5QkFBeUIsbUJBQW1CO0FBQzVDO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL3BhdGhzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgZnVuY3Rpb25OYW1lIH0gZnJvbSBcIi4uL2Z1bmN0aW9uTmFtZS5qc1wiO1xuZXhwb3J0IGNvbnN0IHRvUmVmZXJlbmNlUGF0aCA9IFN5bWJvbC5mb3IoXCJ0b1JlZmVyZW5jZVBhdGhcIik7XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVmZXJlbmNlUGF0aChvYmosIHZhbHVlKSB7XG4gIG9ialt0b1JlZmVyZW5jZVBhdGhdID0gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFJlZmVyZW5jZVBhdGgocmVmZXJlbmNlKSB7XG4gIHJldHVybiByZWZlcmVuY2VbdG9SZWZlcmVuY2VQYXRoXSA/PyBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb25IYW5kbGUocykge1xuICByZXR1cm4gcy5zdGFydHNXaXRoKFwiZnVuY3Rpb246Ly9cIik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVuY3Rpb25BZGRyZXNzKGZ1bmN0aW9uUmVmZXJlbmNlKSB7XG4gIGxldCBmdW5jdGlvbkFkZHJlc3M7XG4gIGlmICh0eXBlb2YgZnVuY3Rpb25SZWZlcmVuY2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICBpZiAoaXNGdW5jdGlvbkhhbmRsZShmdW5jdGlvblJlZmVyZW5jZSkpIHtcbiAgICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgZnVuY3Rpb25IYW5kbGU6IGZ1bmN0aW9uUmVmZXJlbmNlIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgbmFtZTogZnVuY3Rpb25SZWZlcmVuY2UgfTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXSkge1xuICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgbmFtZTogZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXSB9O1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHJlZmVyZW5jZVBhdGggPSBleHRyYWN0UmVmZXJlbmNlUGF0aChmdW5jdGlvblJlZmVyZW5jZSk7XG4gICAgaWYgKCFyZWZlcmVuY2VQYXRoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZnVuY3Rpb25SZWZlcmVuY2V9IGlzIG5vdCBhIGZ1bmN0aW9uUmVmZXJlbmNlYCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgcmVmZXJlbmNlOiByZWZlcmVuY2VQYXRoIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uQWRkcmVzcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGhzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/components/paths.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/cron.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/cron.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Crons: () => (/* binding */ Crons),\n/* harmony export */   cronJobs: () => (/* binding */ cronJobs)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(rsc)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nconst DAYS_OF_WEEK = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\"\n];\nconst cronJobs = () => new Crons();\nfunction validateIntervalNumber(n) {\n  if (!Number.isInteger(n) || n <= 0) {\n    throw new Error(\"Interval must be an integer greater than 0\");\n  }\n}\nfunction validatedDayOfMonth(n) {\n  if (!Number.isInteger(n) || n < 1 || n > 31) {\n    throw new Error(\"Day of month must be an integer from 1 to 31\");\n  }\n  return n;\n}\nfunction validatedDayOfWeek(s) {\n  if (!DAYS_OF_WEEK.includes(s)) {\n    throw new Error('Day of week must be a string like \"monday\".');\n  }\n  return s;\n}\nfunction validatedHourOfDay(n) {\n  if (!Number.isInteger(n) || n < 0 || n > 23) {\n    throw new Error(\"Hour of day must be an integer from 0 to 23\");\n  }\n  return n;\n}\nfunction validatedMinuteOfHour(n) {\n  if (!Number.isInteger(n) || n < 0 || n > 59) {\n    throw new Error(\"Minute of hour must be an integer from 0 to 59\");\n  }\n  return n;\n}\nfunction validatedCronString(s) {\n  return s;\n}\nfunction validatedCronIdentifier(s) {\n  if (!s.match(/^[ -~]*$/)) {\n    throw new Error(\n      `Invalid cron identifier ${s}: use ASCII letters that are not control characters`\n    );\n  }\n  return s;\n}\nclass Crons {\n  constructor() {\n    __publicField(this, \"crons\");\n    __publicField(this, \"isCrons\");\n    this.isCrons = true;\n    this.crons = {};\n  }\n  /** @internal */\n  schedule(cronIdentifier, schedule, functionReference, args) {\n    const cronArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n    validatedCronIdentifier(cronIdentifier);\n    if (cronIdentifier in this.crons) {\n      throw new Error(`Cron identifier registered twice: ${cronIdentifier}`);\n    }\n    this.crons[cronIdentifier] = {\n      name: (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(functionReference),\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(cronArgs)],\n      schedule\n    };\n  }\n  /**\n   * Schedule a mutation or action to run at some interval.\n   *\n   * ```js\n   * crons.interval(\"Clear presence data\", {seconds: 30}, api.presence.clear);\n   * ```\n   *\n   * @param identifier - A unique name for this scheduled job.\n   * @param schedule - The time between runs for this scheduled job.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  interval(cronIdentifier, schedule, functionReference, ...args) {\n    const s = schedule;\n    const hasSeconds = +(\"seconds\" in s && s.seconds !== void 0);\n    const hasMinutes = +(\"minutes\" in s && s.minutes !== void 0);\n    const hasHours = +(\"hours\" in s && s.hours !== void 0);\n    const total = hasSeconds + hasMinutes + hasHours;\n    if (total !== 1) {\n      throw new Error(\"Must specify one of seconds, minutes, or hours\");\n    }\n    if (hasSeconds) {\n      validateIntervalNumber(schedule.seconds);\n    } else if (hasMinutes) {\n      validateIntervalNumber(schedule.minutes);\n    } else if (hasHours) {\n      validateIntervalNumber(schedule.hours);\n    }\n    this.schedule(\n      cronIdentifier,\n      { ...schedule, type: \"interval\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on an hourly basis.\n   *\n   * ```js\n   * crons.hourly(\n   *   \"Reset high scores\",\n   *   {\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  hourly(cronIdentifier, schedule, functionReference, ...args) {\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { minuteUTC, type: \"hourly\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a daily basis.\n   *\n   * ```js\n   * crons.daily(\n   *   \"Reset high scores\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  daily(cronIdentifier, schedule, functionReference, ...args) {\n    const hourUTC = validatedHourOfDay(schedule.hourUTC);\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { hourUTC, minuteUTC, type: \"daily\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a weekly basis.\n   *\n   * ```js\n   * crons.weekly(\n   *   \"Weekly re-engagement email\",\n   *   {\n   *     dayOfWeek: \"Tuesday\",\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.emails.send\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each week to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   */\n  weekly(cronIdentifier, schedule, functionReference, ...args) {\n    const dayOfWeek = validatedDayOfWeek(schedule.dayOfWeek);\n    const hourUTC = validatedHourOfDay(schedule.hourUTC);\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { dayOfWeek, hourUTC, minuteUTC, type: \"weekly\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a monthly basis.\n   *\n   * Note that some months have fewer days than others, so e.g. a function\n   * scheduled to run on the 30th will not run in February.\n   *\n   * ```js\n   * crons.monthly(\n   *   \"Bill customers at \",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *     day: 1,\n   *   },\n   *   api.billing.billCustomers\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each month to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  monthly(cronIdentifier, schedule, functionReference, ...args) {\n    const day = validatedDayOfMonth(schedule.day);\n    const hourUTC = validatedHourOfDay(schedule.hourUTC);\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { day, hourUTC, minuteUTC, type: \"monthly\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a recurring basis.\n   *\n   * Like the unix command `cron`, Sunday is 0, Monday is 1, etc.\n   *\n   * ```\n   *  ┌─ minute (0 - 59)\n   *  │ ┌─ hour (0 - 23)\n   *  │ │ ┌─ day of the month (1 - 31)\n   *  │ │ │ ┌─ month (1 - 12)\n   *  │ │ │ │ ┌─ day of the week (0 - 6) (Sunday to Saturday)\n   * \"* * * * *\"\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param cron - Cron string like `\"15 7 * * *\"` (Every day at 7:15 UTC)\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  cron(cronIdentifier, cron, functionReference, ...args) {\n    const c = validatedCronString(cron);\n    this.schedule(\n      cronIdentifier,\n      { cron: c, type: \"cron\" },\n      functionReference,\n      ...args\n    );\n  }\n  /** @internal */\n  export() {\n    return JSON.stringify(this.crons);\n  }\n}\n//# sourceMappingURL=cron.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/cron.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/database.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/database.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=database.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9kYXRhYmFzZS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvZGF0YWJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhYmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/database.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/filter_builder.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/filter_builder.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Expression: () => (/* binding */ Expression)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass Expression {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isExpression\");\n    // Property to distinguish expressions by the type they resolve to.\n    __publicField(this, \"_value\");\n  }\n}\n//# sourceMappingURL=filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9maWx0ZXJfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ZpbHRlcl9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gUHJvcGVydHkgZm9yIG5vbWluYWwgdHlwZSBzdXBwb3J0LlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaXNFeHByZXNzaW9uXCIpO1xuICAgIC8vIFByb3BlcnR5IHRvIGRpc3Rpbmd1aXNoIGV4cHJlc3Npb25zIGJ5IHRoZSB0eXBlIHRoZXkgcmVzb2x2ZSB0by5cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3ZhbHVlXCIpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWx0ZXJfYnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/filter_builder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/functionName.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/functionName.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   functionName: () => (/* binding */ functionName)\n/* harmony export */ });\n\nconst functionName = Symbol.for(\"functionName\");\n//# sourceMappingURL=functionName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9mdW5jdGlvbk5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ047QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvZnVuY3Rpb25OYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNvbnN0IGZ1bmN0aW9uTmFtZSA9IFN5bWJvbC5mb3IoXCJmdW5jdGlvbk5hbWVcIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mdW5jdGlvbk5hbWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/functionName.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/actions_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/actions_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionCalls: () => (/* binding */ setupActionCalls)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/paths.js */ \"(rsc)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\n\n\n\nfunction syscallArgs(requestId, functionReference, args) {\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionAddress)(functionReference);\n  return {\n    ...address,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)((0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args)),\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n    requestId\n  };\n}\nfunction setupActionCalls(requestId) {\n  return {\n    runQuery: async (query, args) => {\n      const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\n        \"1.0/actions/query\",\n        syscallArgs(requestId, query, args)\n      );\n      return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n    },\n    runMutation: async (mutation, args) => {\n      const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\n        \"1.0/actions/mutation\",\n        syscallArgs(requestId, mutation, args)\n      );\n      return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n    },\n    runAction: async (action, args) => {\n      const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\n        \"1.0/actions/action\",\n        syscallArgs(requestId, action, args)\n      );\n      return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n    }\n  };\n}\n//# sourceMappingURL=actions_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2FjdGlvbnNfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNzRDtBQUMxQjtBQUNVO0FBQ0Q7QUFDVTtBQUM1RDtBQUNBLGtCQUFrQix3RUFBa0I7QUFDcEM7QUFDQTtBQUNBLFVBQVUsOERBQVksQ0FBQywyREFBUztBQUNoQyxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsMkJBQTJCLGdFQUFtQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxhQUFhLDhEQUFZO0FBQ3pCLEtBQUs7QUFDTDtBQUNBLDJCQUEyQixnRUFBbUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4REFBWTtBQUN6QixLQUFLO0FBQ0w7QUFDQSwyQkFBMkIsZ0VBQW1CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOERBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvYWN0aW9uc19pbXBsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29udmV4VG9Kc29uLCBqc29uVG9Db252ZXggfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgcGFyc2VBcmdzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25BZGRyZXNzIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvcGF0aHMuanNcIjtcbmZ1bmN0aW9uIHN5c2NhbGxBcmdzKHJlcXVlc3RJZCwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpIHtcbiAgY29uc3QgYWRkcmVzcyA9IGdldEZ1bmN0aW9uQWRkcmVzcyhmdW5jdGlvblJlZmVyZW5jZSk7XG4gIHJldHVybiB7XG4gICAgLi4uYWRkcmVzcyxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24ocGFyc2VBcmdzKGFyZ3MpKSxcbiAgICB2ZXJzaW9uLFxuICAgIHJlcXVlc3RJZFxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQWN0aW9uQ2FsbHMocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgcnVuUXVlcnk6IGFzeW5jIChxdWVyeSwgYXJncykgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcbiAgICAgICAgXCIxLjAvYWN0aW9ucy9xdWVyeVwiLFxuICAgICAgICBzeXNjYWxsQXJncyhyZXF1ZXN0SWQsIHF1ZXJ5LCBhcmdzKVxuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0KTtcbiAgICB9LFxuICAgIHJ1bk11dGF0aW9uOiBhc3luYyAobXV0YXRpb24sIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXG4gICAgICAgIFwiMS4wL2FjdGlvbnMvbXV0YXRpb25cIixcbiAgICAgICAgc3lzY2FsbEFyZ3MocmVxdWVzdElkLCBtdXRhdGlvbiwgYXJncylcbiAgICAgICk7XG4gICAgICByZXR1cm4ganNvblRvQ29udmV4KHJlc3VsdCk7XG4gICAgfSxcbiAgICBydW5BY3Rpb246IGFzeW5jIChhY3Rpb24sIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXG4gICAgICAgIFwiMS4wL2FjdGlvbnMvYWN0aW9uXCIsXG4gICAgICAgIHN5c2NhbGxBcmdzKHJlcXVlc3RJZCwgYWN0aW9uLCBhcmdzKVxuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0KTtcbiAgICB9XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb25zX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/authentication_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupAuth: () => (/* binding */ setupAuth)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\n\nfunction setupAuth(requestId) {\n  return {\n    getUserIdentity: async () => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/getUserIdentity\", {\n        requestId\n      });\n    }\n  };\n}\n//# sourceMappingURL=authentication_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNzQztBQUM1QztBQUNQO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQW1CO0FBQ3RDO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQXV0aChyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRVc2VySWRlbnRpdHk6IGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2dldFVzZXJJZGVudGl0eVwiLCB7XG4gICAgICAgIHJlcXVlc3RJZFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aGVudGljYXRpb25faW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/database_impl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/database_impl.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupReader: () => (/* binding */ setupReader),\n/* harmony export */   setupWriter: () => (/* binding */ setupWriter)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../values/value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\n\n\n\n\nasync function get(id, isSystem) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"get\", \"id\");\n  if (typeof id !== \"string\") {\n    throw new Error(\n      `Invalid argument \\`id\\` for \\`db.get\\`, expected string but got '${typeof id}': ${id}`\n    );\n  }\n  const args = {\n    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n    isSystem,\n    version: _index_js__WEBPACK_IMPORTED_MODULE_4__.version\n  };\n  const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/get\", args);\n  return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n}\nfunction setupReader() {\n  const reader = (isSystem = false) => {\n    return {\n      get: async (id) => {\n        return await get(id, isSystem);\n      },\n      query: (tableName) => {\n        return new TableReader(tableName, isSystem).query();\n      },\n      normalizeId: (tableName, id) => {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"normalizeId\", \"tableName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 2, \"normalizeId\", \"id\");\n        const accessingSystemTable = tableName.startsWith(\"_\");\n        if (accessingSystemTable !== isSystem) {\n          throw new Error(\n            `${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${isSystem ? \"\" : \"system.\"}normalizeId().`\n          );\n        }\n        const syscallJSON = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/db/normalizeId\", {\n          table: tableName,\n          idString: id\n        });\n        const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n        return syscallResult.id;\n      },\n      // We set the system reader on the next line\n      system: null,\n      table: (tableName) => {\n        return new TableReader(tableName, isSystem);\n      }\n    };\n  };\n  const { system: _, ...rest } = reader(true);\n  const r = reader();\n  r.system = rest;\n  return r;\n}\nasync function insert(tableName, value) {\n  if (tableName.startsWith(\"_\")) {\n    throw new Error(\"System tables (prefixed with `_`) are read-only.\");\n  }\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"insert\", \"table\");\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"insert\", \"value\");\n  const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/insert\", {\n    table: tableName,\n    value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n  });\n  const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n  return syscallResult._id;\n}\nasync function patch(id, value) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"patch\", \"id\");\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"patch\", \"value\");\n  await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/shallowMerge\", {\n    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n    value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_5__.patchValueToJson)(value)\n  });\n}\nasync function replace(id, value) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"replace\", \"id\");\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"replace\", \"value\");\n  await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/replace\", {\n    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n    value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n  });\n}\nasync function delete_(id) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"delete\", \"id\");\n  await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/remove\", { id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id) });\n}\nfunction setupWriter() {\n  const reader = setupReader();\n  return {\n    get: reader.get,\n    query: reader.query,\n    normalizeId: reader.normalizeId,\n    system: reader.system,\n    insert: async (table, value) => {\n      return await insert(table, value);\n    },\n    patch: async (id, value) => {\n      return await patch(id, value);\n    },\n    replace: async (id, value) => {\n      return await replace(id, value);\n    },\n    delete: async (id) => {\n      return await delete_(id);\n    },\n    table: (tableName) => {\n      return new TableWriter(tableName, false);\n    }\n  };\n}\nclass TableReader {\n  constructor(tableName, isSystem) {\n    this.tableName = tableName;\n    this.isSystem = isSystem;\n  }\n  async get(id) {\n    return get(id, this.isSystem);\n  }\n  query() {\n    const accessingSystemTable = this.tableName.startsWith(\"_\");\n    if (accessingSystemTable !== this.isSystem) {\n      throw new Error(\n        `${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${this.isSystem ? \"\" : \"system.\"}query().`\n      );\n    }\n    return new _query_impl_js__WEBPACK_IMPORTED_MODULE_2__.QueryInitializerImpl(this.tableName);\n  }\n}\nclass TableWriter extends TableReader {\n  async insert(value) {\n    return insert(this.tableName, value);\n  }\n  async patch(id, value) {\n    return patch(id, value);\n  }\n  async replace(id, value) {\n    return replace(id, value);\n  }\n  async delete(id) {\n    return delete_(id);\n  }\n}\n//# sourceMappingURL=database_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/database_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filter_builder.js */ \"(rsc)/./node_modules/convex/dist/esm/server/filter_builder.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass ExpressionImpl extends _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.Expression {\n  constructor(inner) {\n    super();\n    __publicField(this, \"inner\");\n    this.inner = inner;\n  }\n  serialize() {\n    return this.inner;\n  }\n}\nfunction serializeExpression(expr) {\n  if (expr instanceof ExpressionImpl) {\n    return expr.serialize();\n  } else {\n    return { $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(expr) };\n  }\n}\nconst filterBuilderImpl = {\n  //  Comparisons  /////////////////////////////////////////////////////////////\n  eq(l, r) {\n    return new ExpressionImpl({\n      $eq: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  neq(l, r) {\n    return new ExpressionImpl({\n      $neq: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  lt(l, r) {\n    return new ExpressionImpl({\n      $lt: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  lte(l, r) {\n    return new ExpressionImpl({\n      $lte: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  gt(l, r) {\n    return new ExpressionImpl({\n      $gt: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  gte(l, r) {\n    return new ExpressionImpl({\n      $gte: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  //  Arithmetic  //////////////////////////////////////////////////////////////\n  add(l, r) {\n    return new ExpressionImpl({\n      $add: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  sub(l, r) {\n    return new ExpressionImpl({\n      $sub: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  mul(l, r) {\n    return new ExpressionImpl({\n      $mul: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  div(l, r) {\n    return new ExpressionImpl({\n      $div: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  mod(l, r) {\n    return new ExpressionImpl({\n      $mod: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  neg(x) {\n    return new ExpressionImpl({ $neg: serializeExpression(x) });\n  },\n  //  Logic  ///////////////////////////////////////////////////////////////////\n  and(...exprs) {\n    return new ExpressionImpl({ $and: exprs.map(serializeExpression) });\n  },\n  or(...exprs) {\n    return new ExpressionImpl({ $or: exprs.map(serializeExpression) });\n  },\n  not(x) {\n    return new ExpressionImpl({ $not: serializeExpression(x) });\n  },\n  //  Other  ///////////////////////////////////////////////////////////////////\n  field(fieldPath) {\n    return new ExpressionImpl({ $field: fieldPath });\n  }\n};\n//# sourceMappingURL=filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNnRTtBQUdsQztBQUN2Qiw2QkFBNkIsMERBQVU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSTtBQUNKLGFBQWEsVUFBVSx5RUFBdUI7QUFDOUM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLGdDQUFnQyw4QkFBOEI7QUFDOUQsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0Msc0NBQXNDO0FBQ3RFLEdBQUc7QUFDSDtBQUNBLGdDQUFnQyxxQ0FBcUM7QUFDckUsR0FBRztBQUNIO0FBQ0EsZ0NBQWdDLDhCQUE4QjtBQUM5RCxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxtQkFBbUI7QUFDbkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuaW1wb3J0IHsgY29udmV4T3JVbmRlZmluZWRUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5pbXBvcnQge1xuICBFeHByZXNzaW9uXG59IGZyb20gXCIuLi9maWx0ZXJfYnVpbGRlci5qc1wiO1xuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25JbXBsIGV4dGVuZHMgRXhwcmVzc2lvbiB7XG4gIGNvbnN0cnVjdG9yKGlubmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaW5uZXJcIik7XG4gICAgdGhpcy5pbm5lciA9IGlubmVyO1xuICB9XG4gIHNlcmlhbGl6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lcjtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUV4cHJlc3Npb24oZXhwcikge1xuICBpZiAoZXhwciBpbnN0YW5jZW9mIEV4cHJlc3Npb25JbXBsKSB7XG4gICAgcmV0dXJuIGV4cHIuc2VyaWFsaXplKCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgJGxpdGVyYWw6IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uKGV4cHIpIH07XG4gIH1cbn1cbmV4cG9ydCBjb25zdCBmaWx0ZXJCdWlsZGVySW1wbCA9IHtcbiAgLy8gIENvbXBhcmlzb25zICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGVxKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRlcTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG5lcShsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbmVxOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbHQobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGx0OiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbHRlKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRsdGU6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBndChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkZ3Q6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBndGUobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGd0ZTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIC8vICBBcml0aG1ldGljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBhZGQobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGFkZDogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIHN1YihsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkc3ViOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbXVsKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRtdWw6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBkaXYobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGRpdjogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG1vZChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbW9kOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbmVnKHgpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHsgJG5lZzogc2VyaWFsaXplRXhwcmVzc2lvbih4KSB9KTtcbiAgfSxcbiAgLy8gIExvZ2ljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGFuZCguLi5leHBycykge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkYW5kOiBleHBycy5tYXAoc2VyaWFsaXplRXhwcmVzc2lvbikgfSk7XG4gIH0sXG4gIG9yKC4uLmV4cHJzKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRvcjogZXhwcnMubWFwKHNlcmlhbGl6ZUV4cHJlc3Npb24pIH0pO1xuICB9LFxuICBub3QoeCkge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkbm90OiBzZXJpYWxpemVFeHByZXNzaW9uKHgpIH0pO1xuICB9LFxuICAvLyAgT3RoZXIgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgZmllbGQoZmllbGRQYXRoKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRmaWVsZDogZmllbGRQYXRoIH0pO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyX2J1aWxkZXJfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRangeBuilderImpl: () => (/* binding */ IndexRangeBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index_range_builder.js */ \"(rsc)/./node_modules/convex/dist/esm/server/index_range_builder.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass IndexRangeBuilderImpl extends _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__.IndexRange {\n  constructor(rangeExpressions) {\n    super();\n    __publicField(this, \"rangeExpressions\");\n    __publicField(this, \"isConsumed\");\n    this.rangeExpressions = rangeExpressions;\n    this.isConsumed = false;\n  }\n  static new() {\n    return new IndexRangeBuilderImpl([]);\n  }\n  consume() {\n    if (this.isConsumed) {\n      throw new Error(\n        \"IndexRangeBuilder has already been used! Chain your method calls like `q => q.eq(...).eq(...)`. See https://docs.convex.dev/using/indexes\"\n      );\n    }\n    this.isConsumed = true;\n  }\n  eq(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Eq\",\n        fieldPath: fieldName,\n        value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_1__.convexOrUndefinedToJson)(value)\n      })\n    );\n  }\n  gt(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Gt\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  gte(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Gte\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  lt(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Lt\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  lte(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Lte\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  export() {\n    this.consume();\n    return this.rangeExpressions;\n  }\n}\n//# sourceMappingURL=index_range_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDcUQ7QUFDVztBQUc3QjtBQUM1QixvQ0FBb0MsK0RBQVU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5RUFBdUI7QUFDdEMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFZO0FBQzNCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4REFBWTtBQUMzQixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQVk7QUFDM0IsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFZO0FBQzNCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmltcG9ydCB7XG4gIEluZGV4UmFuZ2Vcbn0gZnJvbSBcIi4uL2luZGV4X3JhbmdlX2J1aWxkZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBJbmRleFJhbmdlQnVpbGRlckltcGwgZXh0ZW5kcyBJbmRleFJhbmdlIHtcbiAgY29uc3RydWN0b3IocmFuZ2VFeHByZXNzaW9ucykge1xuICAgIHN1cGVyKCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJhbmdlRXhwcmVzc2lvbnNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzQ29uc3VtZWRcIik7XG4gICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zID0gcmFuZ2VFeHByZXNzaW9ucztcbiAgICB0aGlzLmlzQ29uc3VtZWQgPSBmYWxzZTtcbiAgfVxuICBzdGF0aWMgbmV3KCkge1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFtdKTtcbiAgfVxuICBjb25zdW1lKCkge1xuICAgIGlmICh0aGlzLmlzQ29uc3VtZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJJbmRleFJhbmdlQnVpbGRlciBoYXMgYWxyZWFkeSBiZWVuIHVzZWQhIENoYWluIHlvdXIgbWV0aG9kIGNhbGxzIGxpa2UgYHEgPT4gcS5lcSguLi4pLmVxKC4uLilgLiBTZWUgaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdXNpbmcvaW5kZXhlc1wiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmlzQ29uc3VtZWQgPSB0cnVlO1xuICB9XG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkVxXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4T3JVbmRlZmluZWRUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZ3QoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiR3RcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZ3RlKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkd0ZVwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBsdChmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIG5ldyBJbmRleFJhbmdlQnVpbGRlckltcGwoXG4gICAgICB0aGlzLnJhbmdlRXhwcmVzc2lvbnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJMdFwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBsdGUoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiTHRlXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4VG9Kc29uKHZhbHVlKVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGV4cG9ydCgpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gdGhpcy5yYW5nZUV4cHJlc3Npb25zO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleF9yYW5nZV9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/query_impl.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/query_impl.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryImpl: () => (/* binding */ QueryImpl),\n/* harmony export */   QueryInitializerImpl: () => (/* binding */ QueryInitializerImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter_builder_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\");\n/* harmony import */ var _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index_range_builder_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\");\n/* harmony import */ var _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search_filter_builder_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\nconst MAX_QUERY_OPERATORS = 256;\nclass QueryInitializerImpl {\n  constructor(tableName) {\n    __publicField(this, \"tableName\");\n    this.tableName = tableName;\n  }\n  withIndex(indexName, indexRange) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withIndex\", \"indexName\");\n    let rangeBuilder = _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__.IndexRangeBuilderImpl.new();\n    if (indexRange !== void 0) {\n      rangeBuilder = indexRange(rangeBuilder);\n    }\n    return new QueryImpl({\n      source: {\n        type: \"IndexRange\",\n        indexName: this.tableName + \".\" + indexName,\n        range: rangeBuilder.export(),\n        order: null\n      },\n      operators: []\n    });\n  }\n  withSearchIndex(indexName, searchFilter) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withSearchIndex\", \"indexName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(searchFilter, 2, \"withSearchIndex\", \"searchFilter\");\n    const searchFilterBuilder = _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__.SearchFilterBuilderImpl.new();\n    return new QueryImpl({\n      source: {\n        type: \"Search\",\n        indexName: this.tableName + \".\" + indexName,\n        filters: searchFilter(searchFilterBuilder).export()\n      },\n      operators: []\n    });\n  }\n  fullTableScan() {\n    return new QueryImpl({\n      source: {\n        type: \"FullTableScan\",\n        tableName: this.tableName,\n        order: null\n      },\n      operators: []\n    });\n  }\n  order(order) {\n    return this.fullTableScan().order(order);\n  }\n  // This is internal API and should not be exposed to developers yet.\n  async count() {\n    const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/count\", {\n      table: this.tableName\n    });\n    const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n    return syscallResult;\n  }\n  filter(predicate) {\n    return this.fullTableScan().filter(predicate);\n  }\n  limit(n) {\n    return this.fullTableScan().limit(n);\n  }\n  collect() {\n    return this.fullTableScan().collect();\n  }\n  take(n) {\n    return this.fullTableScan().take(n);\n  }\n  paginate(paginationOpts) {\n    return this.fullTableScan().paginate(paginationOpts);\n  }\n  first() {\n    return this.fullTableScan().first();\n  }\n  unique() {\n    return this.fullTableScan().unique();\n  }\n  [Symbol.asyncIterator]() {\n    return this.fullTableScan()[Symbol.asyncIterator]();\n  }\n}\nfunction throwClosedError(type) {\n  throw new Error(\n    type === \"consumed\" ? \"This query is closed and can't emit any more values.\" : \"This query has been chained with another operator and can't be reused.\"\n  );\n}\nclass QueryImpl {\n  constructor(query) {\n    __publicField(this, \"state\");\n    this.state = { type: \"preparing\", query };\n  }\n  takeQuery() {\n    if (this.state.type !== \"preparing\") {\n      throw new Error(\n        \"A query can only be chained once and can't be chained after iteration begins.\"\n      );\n    }\n    const query = this.state.query;\n    this.state = { type: \"closed\" };\n    return query;\n  }\n  startQuery() {\n    if (this.state.type === \"executing\") {\n      throw new Error(\"Iteration can only begin on a query once.\");\n    }\n    if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n      throwClosedError(this.state.type);\n    }\n    const query = this.state.query;\n    const { queryId } = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryStream\", { query, version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version });\n    this.state = { type: \"executing\", queryId };\n    return queryId;\n  }\n  closeQuery() {\n    if (this.state.type === \"executing\") {\n      const queryId = this.state.queryId;\n      (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryCleanup\", { queryId });\n    }\n    this.state = { type: \"consumed\" };\n  }\n  order(order) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(order, 1, \"order\", \"order\");\n    const query = this.takeQuery();\n    if (query.source.type === \"Search\") {\n      throw new Error(\n        \"Search queries must always be in relevance order. Can not set order manually.\"\n      );\n    }\n    if (query.source.order !== null) {\n      throw new Error(\"Queries may only specify order at most once\");\n    }\n    query.source.order = order;\n    return new QueryImpl(query);\n  }\n  filter(predicate) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(predicate, 1, \"filter\", \"predicate\");\n    const query = this.takeQuery();\n    if (query.operators.length >= MAX_QUERY_OPERATORS) {\n      throw new Error(\n        `Can't construct query with more than ${MAX_QUERY_OPERATORS} operators`\n      );\n    }\n    query.operators.push({\n      filter: (0,_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.serializeExpression)(predicate(_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.filterBuilderImpl))\n    });\n    return new QueryImpl(query);\n  }\n  limit(n) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"limit\", \"n\");\n    const query = this.takeQuery();\n    query.operators.push({ limit: n });\n    return new QueryImpl(query);\n  }\n  [Symbol.asyncIterator]() {\n    this.startQuery();\n    return this;\n  }\n  async next() {\n    if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n      throwClosedError(this.state.type);\n    }\n    const queryId = this.state.type === \"preparing\" ? this.startQuery() : this.state.queryId;\n    const { value, done } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryStreamNext\", {\n      queryId\n    });\n    if (done) {\n      this.closeQuery();\n    }\n    const convexValue = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(value);\n    return { value: convexValue, done };\n  }\n  return() {\n    this.closeQuery();\n    return Promise.resolve({ done: true, value: void 0 });\n  }\n  async paginate(paginationOpts) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(paginationOpts, 1, \"paginate\", \"options\");\n    if (typeof paginationOpts?.numItems !== \"number\" || paginationOpts.numItems < 0) {\n      throw new Error(\n        `\\`options.numItems\\` must be a positive number. Received \\`${paginationOpts?.numItems}\\`.`\n      );\n    }\n    const query = this.takeQuery();\n    const pageSize = paginationOpts.numItems;\n    const cursor = paginationOpts.cursor;\n    const endCursor = paginationOpts?.endCursor ?? null;\n    const maximumRowsRead = paginationOpts.maximumRowsRead ?? null;\n    const { page, isDone, continueCursor, splitCursor, pageStatus } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryPage\", {\n      query,\n      cursor,\n      endCursor,\n      pageSize,\n      maximumRowsRead,\n      maximumBytesRead: paginationOpts.maximumBytesRead,\n      version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version\n    });\n    return {\n      page: page.map((json) => (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(json)),\n      isDone,\n      continueCursor,\n      splitCursor,\n      pageStatus\n    };\n  }\n  async collect() {\n    const out = [];\n    for await (const item of this) {\n      out.push(item);\n    }\n    return out;\n  }\n  async take(n) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"take\", \"n\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArgIsNonNegativeInteger)(n, 1, \"take\", \"n\");\n    return this.limit(n).collect();\n  }\n  async first() {\n    const first_array = await this.take(1);\n    return first_array.length === 0 ? null : first_array[0];\n  }\n  async unique() {\n    const first_two_array = await this.take(2);\n    if (first_two_array.length === 0) {\n      return null;\n    }\n    if (first_two_array.length === 2) {\n      throw new Error(`unique() query returned more than one result: \n [${first_two_array[0]._id}, ${first_two_array[1]._id}, ...]`);\n    }\n    return first_two_array[0];\n  }\n}\n//# sourceMappingURL=query_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/query_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/registration_impl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/registration_impl.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionGeneric: () => (/* binding */ actionGeneric),\n/* harmony export */   httpActionGeneric: () => (/* binding */ httpActionGeneric),\n/* harmony export */   internalActionGeneric: () => (/* binding */ internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* binding */ internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* binding */ internalQueryGeneric),\n/* harmony export */   invokeFunction: () => (/* binding */ invokeFunction),\n/* harmony export */   mutationGeneric: () => (/* binding */ mutationGeneric),\n/* harmony export */   queryGeneric: () => (/* binding */ queryGeneric),\n/* harmony export */   validateReturnValue: () => (/* binding */ validateReturnValue)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _actions_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\");\n/* harmony import */ var _vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vector_search_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\");\n/* harmony import */ var _authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\");\n/* harmony import */ var _database_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./database_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/database_impl.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./query_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\");\n/* harmony import */ var _storage_impl_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./storage_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../values/validator.js */ \"(rsc)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/paths.js */ \"(rsc)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function invokeMutation(func, argsStr) {\n  const requestId = \"\";\n  const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr));\n  const mutationCtx = {\n    db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupWriter)(),\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageWriter)(requestId),\n    scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupMutationScheduler)(),\n    runQuery: (reference, args2) => runUdf(\"query\", reference, args2),\n    runMutation: (reference, args2) => runUdf(\"mutation\", reference, args2)\n  };\n  const result = await invokeFunction(func, mutationCtx, args);\n  validateReturnValue(result);\n  return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nfunction validateReturnValue(v2) {\n  if (v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryInitializerImpl || v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryImpl) {\n    throw new Error(\n      \"Return value is a Query. Results must be retrieved with `.collect()`, `.take(n), `.unique()`, or `.first()`.\"\n    );\n  }\n}\nasync function invokeFunction(func, ctx, args) {\n  let result;\n  try {\n    result = await Promise.resolve(func(ctx, ...args));\n  } catch (thrown) {\n    throw serializeConvexErrorData(thrown);\n  }\n  return result;\n}\nfunction dontCallDirectly(funcType, handler) {\n  return (ctx, args) => {\n    globalThis.console.warn(\n      `Convex functions should not directly call other Convex functions. Consider calling a helper function instead. e.g. \\`export const foo = ${funcType}(...); await foo(ctx);\\` is not supported. See https://docs.convex.dev/production/best-practices/#use-helper-functions-to-write-shared-code`\n    );\n    return handler(ctx, args);\n  };\n}\nfunction serializeConvexErrorData(thrown) {\n  if (typeof thrown === \"object\" && thrown !== null && Symbol.for(\"ConvexError\") in thrown) {\n    const error = thrown;\n    error.data = JSON.stringify(\n      (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(error.data === void 0 ? null : error.data)\n    );\n    error.ConvexErrorSymbol = Symbol.for(\"ConvexError\");\n    return error;\n  } else {\n    return thrown;\n  }\n}\nfunction assertNotBrowser() {\n  if (typeof window === \"undefined\" || !window.__convexAllowFunctionsInBrowser) {\n    return;\n  }\n  const isRealBrowser = Object.getOwnPropertyDescriptor(globalThis, \"window\")?.get?.toString().includes(\"[native code]\") ?? false;\n  if (isRealBrowser) {\n    throw new Error(\"Convex functions should not be imported in the browser.\");\n  }\n}\nfunction exportArgs(functionDefinition) {\n  return () => {\n    let args = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.v.any();\n    if (typeof functionDefinition === \"object\" && functionDefinition.args !== void 0) {\n      args = (0,_values_validator_js__WEBPACK_IMPORTED_MODULE_10__.asObjectValidator)(functionDefinition.args);\n    }\n    return JSON.stringify(args.json);\n  };\n}\nfunction exportReturns(functionDefinition) {\n  return () => {\n    let returns;\n    if (typeof functionDefinition === \"object\" && functionDefinition.returns !== void 0) {\n      returns = (0,_values_validator_js__WEBPACK_IMPORTED_MODULE_10__.asObjectValidator)(functionDefinition.returns);\n    }\n    return JSON.stringify(returns ? returns.json : null);\n  };\n}\nconst mutationGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"mutation\", handler);\n  assertNotBrowser();\n  func.isMutation = true;\n  func.isPublic = true;\n  func.invokeMutation = (argsStr) => invokeMutation(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nconst internalMutationGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\n    \"internalMutation\",\n    handler\n  );\n  assertNotBrowser();\n  func.isMutation = true;\n  func.isInternal = true;\n  func.invokeMutation = (argsStr) => invokeMutation(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nasync function invokeQuery(func, argsStr) {\n  const requestId = \"\";\n  const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr));\n  const queryCtx = {\n    db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupReader)(),\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageReader)(requestId),\n    runQuery: (reference, args2) => runUdf(\"query\", reference, args2)\n  };\n  const result = await invokeFunction(func, queryCtx, args);\n  validateReturnValue(result);\n  return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nconst queryGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"query\", handler);\n  assertNotBrowser();\n  func.isQuery = true;\n  func.isPublic = true;\n  func.invokeQuery = (argsStr) => invokeQuery(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nconst internalQueryGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"internalQuery\", handler);\n  assertNotBrowser();\n  func.isQuery = true;\n  func.isInternal = true;\n  func.invokeQuery = (argsStr) => invokeQuery(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nasync function invokeAction(func, requestId, argsStr) {\n  const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr));\n  const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n  const ctx = {\n    ...calls,\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n    vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n  };\n  const result = await invokeFunction(func, ctx, args);\n  return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nconst actionGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"action\", handler);\n  assertNotBrowser();\n  func.isAction = true;\n  func.isPublic = true;\n  func.invokeAction = (requestId, argsStr) => invokeAction(handler, requestId, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nconst internalActionGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"internalAction\", handler);\n  assertNotBrowser();\n  func.isAction = true;\n  func.isInternal = true;\n  func.invokeAction = (requestId, argsStr) => invokeAction(handler, requestId, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nasync function invokeHttpAction(func, request) {\n  const requestId = \"\";\n  const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n  const ctx = {\n    ...calls,\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n    scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n    vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n  };\n  return await invokeFunction(func, ctx, [request]);\n}\nconst httpActionGeneric = (func) => {\n  const q = dontCallDirectly(\"httpAction\", func);\n  assertNotBrowser();\n  q.isHttp = true;\n  q.invokeHttpAction = (request) => invokeHttpAction(func, request);\n  q._handler = func;\n  return q;\n};\nasync function runUdf(udfType, f, args) {\n  const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_8__.parseArgs)(args);\n  const syscallArgs = {\n    udfType,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(queryArgs),\n    ...(0,_components_paths_js__WEBPACK_IMPORTED_MODULE_11__.getFunctionAddress)(f)\n  };\n  const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_9__.performAsyncSyscall)(\"1.0/runUdf\", syscallArgs);\n  return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n}\n//# sourceMappingURL=registration_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/scheduler_impl.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionScheduler: () => (/* binding */ setupActionScheduler),\n/* harmony export */   setupMutationScheduler: () => (/* binding */ setupMutationScheduler)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(rsc)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/paths.js */ \"(rsc)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\n\n\n\n\nfunction setupMutationScheduler() {\n  return {\n    runAfter: async (delayMs, functionReference, args) => {\n      const syscallArgs = runAfterSyscallArgs(delayMs, functionReference, args);\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n    },\n    runAt: async (ms_since_epoch_or_date, functionReference, args) => {\n      const syscallArgs = runAtSyscallArgs(\n        ms_since_epoch_or_date,\n        functionReference,\n        args\n      );\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n    },\n    cancel: async (id) => {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateArg)(id, 1, \"cancel\", \"id\");\n      const args = { id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id) };\n      await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/cancel_job\", args);\n    }\n  };\n}\nfunction setupActionScheduler(requestId) {\n  return {\n    runAfter: async (delayMs, functionReference, args) => {\n      const syscallArgs = {\n        requestId,\n        ...runAfterSyscallArgs(delayMs, functionReference, args)\n      };\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n    },\n    runAt: async (ms_since_epoch_or_date, functionReference, args) => {\n      const syscallArgs = {\n        requestId,\n        ...runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args)\n      };\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n    },\n    cancel: async (id) => {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateArg)(id, 1, \"cancel\", \"id\");\n      const syscallArgs = { id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id) };\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/cancel_job\", syscallArgs);\n    }\n  };\n}\nfunction runAfterSyscallArgs(delayMs, functionReference, args) {\n  if (typeof delayMs !== \"number\") {\n    throw new Error(\"`delayMs` must be a number\");\n  }\n  if (!isFinite(delayMs)) {\n    throw new Error(\"`delayMs` must be a finite number\");\n  }\n  if (delayMs < 0) {\n    throw new Error(\"`delayMs` must be non-negative\");\n  }\n  const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionAddress)(functionReference);\n  const ts = (Date.now() + delayMs) / 1e3;\n  return {\n    ...address,\n    ts,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n  };\n}\nfunction runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args) {\n  let ts;\n  if (ms_since_epoch_or_date instanceof Date) {\n    ts = ms_since_epoch_or_date.valueOf() / 1e3;\n  } else if (typeof ms_since_epoch_or_date === \"number\") {\n    ts = ms_since_epoch_or_date / 1e3;\n  } else {\n    throw new Error(\"The invoke time must a Date or a timestamp\");\n  }\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionAddress)(functionReference);\n  const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n  return {\n    ...address,\n    ts,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n  };\n}\n//# sourceMappingURL=scheduler_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NjaGVkdWxlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWE7QUFDd0M7QUFDWjtBQUNVO0FBQ0Q7QUFDTjtBQUNnQjtBQUNyRDtBQUNQO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEMsS0FBSztBQUNMO0FBQ0EsTUFBTSx5REFBVztBQUNqQixxQkFBcUIsSUFBSSw4REFBWTtBQUNyQyxZQUFZLGdFQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQW1CO0FBQ3RDLEtBQUs7QUFDTDtBQUNBLE1BQU0seURBQVc7QUFDakIsNEJBQTRCLElBQUksOERBQVk7QUFDNUMsbUJBQW1CLGdFQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBUztBQUNoQyxrQkFBa0Isd0VBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw4REFBWTtBQUN0QixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxrQkFBa0Isd0VBQWtCO0FBQ3BDLHVCQUF1QiwyREFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQSxVQUFVLDhEQUFZO0FBQ3RCLFdBQVc7QUFDWDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc2NoZWR1bGVyX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgcGFyc2VBcmdzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25BZGRyZXNzIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvcGF0aHMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cE11dGF0aW9uU2NoZWR1bGVyKCkge1xuICByZXR1cm4ge1xuICAgIHJ1bkFmdGVyOiBhc3luYyAoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0gcnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncyk7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBydW5BdDogYXN5bmMgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHJ1bkF0U3lzY2FsbEFyZ3MoXG4gICAgICAgIG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsXG4gICAgICAgIGZ1bmN0aW9uUmVmZXJlbmNlLFxuICAgICAgICBhcmdzXG4gICAgICApO1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc2NoZWR1bGVcIiwgc3lzY2FsbEFyZ3MpO1xuICAgIH0sXG4gICAgY2FuY2VsOiBhc3luYyAoaWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKGlkLCAxLCBcImNhbmNlbFwiLCBcImlkXCIpO1xuICAgICAgY29uc3QgYXJncyA9IHsgaWQ6IGNvbnZleFRvSnNvbihpZCkgfTtcbiAgICAgIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvY2FuY2VsX2pvYlwiLCBhcmdzKTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBBY3Rpb25TY2hlZHVsZXIocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgcnVuQWZ0ZXI6IGFzeW5jIChkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykgPT4ge1xuICAgICAgY29uc3Qgc3lzY2FsbEFyZ3MgPSB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgLi4ucnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncylcbiAgICAgIH07XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL3NjaGVkdWxlXCIsIHN5c2NhbGxBcmdzKTtcbiAgICB9LFxuICAgIHJ1bkF0OiBhc3luYyAobXNfc2luY2VfZXBvY2hfb3JfZGF0ZSwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0ge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIC4uLnJ1bkF0U3lzY2FsbEFyZ3MobXNfc2luY2VfZXBvY2hfb3JfZGF0ZSwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvYWN0aW9ucy9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBjYW5jZWw6IGFzeW5jIChpZCkgPT4ge1xuICAgICAgdmFsaWRhdGVBcmcoaWQsIDEsIFwiY2FuY2VsXCIsIFwiaWRcIik7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHsgaWQ6IGNvbnZleFRvSnNvbihpZCkgfTtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2FjdGlvbnMvY2FuY2VsX2pvYlwiLCBzeXNjYWxsQXJncyk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gcnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykge1xuICBpZiAodHlwZW9mIGRlbGF5TXMgIT09IFwibnVtYmVyXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJgZGVsYXlNc2AgbXVzdCBiZSBhIG51bWJlclwiKTtcbiAgfVxuICBpZiAoIWlzRmluaXRlKGRlbGF5TXMpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYGRlbGF5TXNgIG11c3QgYmUgYSBmaW5pdGUgbnVtYmVyXCIpO1xuICB9XG4gIGlmIChkZWxheU1zIDwgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImBkZWxheU1zYCBtdXN0IGJlIG5vbi1uZWdhdGl2ZVwiKTtcbiAgfVxuICBjb25zdCBmdW5jdGlvbkFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gIGNvbnN0IGFkZHJlc3MgPSBnZXRGdW5jdGlvbkFkZHJlc3MoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICBjb25zdCB0cyA9IChEYXRlLm5vdygpICsgZGVsYXlNcykgLyAxZTM7XG4gIHJldHVybiB7XG4gICAgLi4uYWRkcmVzcyxcbiAgICB0cyxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24oZnVuY3Rpb25BcmdzKSxcbiAgICB2ZXJzaW9uXG4gIH07XG59XG5mdW5jdGlvbiBydW5BdFN5c2NhbGxBcmdzKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSB7XG4gIGxldCB0cztcbiAgaWYgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgdHMgPSBtc19zaW5jZV9lcG9jaF9vcl9kYXRlLnZhbHVlT2YoKSAvIDFlMztcbiAgfSBlbHNlIGlmICh0eXBlb2YgbXNfc2luY2VfZXBvY2hfb3JfZGF0ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHRzID0gbXNfc2luY2VfZXBvY2hfb3JfZGF0ZSAvIDFlMztcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgaW52b2tlIHRpbWUgbXVzdCBhIERhdGUgb3IgYSB0aW1lc3RhbXBcIik7XG4gIH1cbiAgY29uc3QgYWRkcmVzcyA9IGdldEZ1bmN0aW9uQWRkcmVzcyhmdW5jdGlvblJlZmVyZW5jZSk7XG4gIGNvbnN0IGZ1bmN0aW9uQXJncyA9IHBhcnNlQXJncyhhcmdzKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5hZGRyZXNzLFxuICAgIHRzLFxuICAgIGFyZ3M6IGNvbnZleFRvSnNvbihmdW5jdGlvbkFyZ3MpLFxuICAgIHZlcnNpb25cbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVkdWxlcl9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilterBuilderImpl: () => (/* binding */ SearchFilterBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search_filter_builder.js */ \"(rsc)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass SearchFilterBuilderImpl extends _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.SearchFilter {\n  constructor(filters) {\n    super();\n    __publicField(this, \"filters\");\n    __publicField(this, \"isConsumed\");\n    this.filters = filters;\n    this.isConsumed = false;\n  }\n  static new() {\n    return new SearchFilterBuilderImpl([]);\n  }\n  consume() {\n    if (this.isConsumed) {\n      throw new Error(\n        \"SearchFilterBuilder has already been used! Chain your method calls like `q => q.search(...).eq(...)`.\"\n      );\n    }\n    this.isConsumed = true;\n  }\n  search(fieldName, query) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"search\", \"fieldName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(query, 2, \"search\", \"query\");\n    this.consume();\n    return new SearchFilterBuilderImpl(\n      this.filters.concat({\n        type: \"Search\",\n        fieldPath: fieldName,\n        value: query\n      })\n    );\n  }\n  eq(fieldName, value) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"eq\", \"fieldName\");\n    if (arguments.length !== 2) {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(value, 2, \"search\", \"value\");\n    }\n    this.consume();\n    return new SearchFilterBuilderImpl(\n      this.filters.concat({\n        type: \"Eq\",\n        fieldPath: fieldName,\n        value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(value)\n      })\n    );\n  }\n  export() {\n    this.consume();\n    return this.filters;\n  }\n}\n//# sourceMappingURL=search_filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NlYXJjaF9maWx0ZXJfYnVpbGRlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNnRTtBQUczQjtBQUNPO0FBQ3JDLHNDQUFzQyxtRUFBWTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkseURBQVc7QUFDZixJQUFJLHlEQUFXO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLElBQUkseURBQVc7QUFDZjtBQUNBLE1BQU0seURBQVc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5RUFBdUI7QUFDdEMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc2VhcmNoX2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuaW1wb3J0IHsgY29udmV4T3JVbmRlZmluZWRUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5pbXBvcnQge1xuICBTZWFyY2hGaWx0ZXJcbn0gZnJvbSBcIi4uL3NlYXJjaF9maWx0ZXJfYnVpbGRlci5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGNsYXNzIFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsIGV4dGVuZHMgU2VhcmNoRmlsdGVyIHtcbiAgY29uc3RydWN0b3IoZmlsdGVycykge1xuICAgIHN1cGVyKCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImZpbHRlcnNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzQ29uc3VtZWRcIik7XG4gICAgdGhpcy5maWx0ZXJzID0gZmlsdGVycztcbiAgICB0aGlzLmlzQ29uc3VtZWQgPSBmYWxzZTtcbiAgfVxuICBzdGF0aWMgbmV3KCkge1xuICAgIHJldHVybiBuZXcgU2VhcmNoRmlsdGVyQnVpbGRlckltcGwoW10pO1xuICB9XG4gIGNvbnN1bWUoKSB7XG4gICAgaWYgKHRoaXMuaXNDb25zdW1lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlNlYXJjaEZpbHRlckJ1aWxkZXIgaGFzIGFscmVhZHkgYmVlbiB1c2VkISBDaGFpbiB5b3VyIG1ldGhvZCBjYWxscyBsaWtlIGBxID0+IHEuc2VhcmNoKC4uLikuZXEoLi4uKWAuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMuaXNDb25zdW1lZCA9IHRydWU7XG4gIH1cbiAgc2VhcmNoKGZpZWxkTmFtZSwgcXVlcnkpIHtcbiAgICB2YWxpZGF0ZUFyZyhmaWVsZE5hbWUsIDEsIFwic2VhcmNoXCIsIFwiZmllbGROYW1lXCIpO1xuICAgIHZhbGlkYXRlQXJnKHF1ZXJ5LCAyLCBcInNlYXJjaFwiLCBcInF1ZXJ5XCIpO1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgU2VhcmNoRmlsdGVyQnVpbGRlckltcGwoXG4gICAgICB0aGlzLmZpbHRlcnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJTZWFyY2hcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBxdWVyeVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB2YWxpZGF0ZUFyZyhmaWVsZE5hbWUsIDEsIFwiZXFcIiwgXCJmaWVsZE5hbWVcIik7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggIT09IDIpIHtcbiAgICAgIHZhbGlkYXRlQXJnKHZhbHVlLCAyLCBcInNlYXJjaFwiLCBcInZhbHVlXCIpO1xuICAgIH1cbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5maWx0ZXJzLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiRXFcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhPclVuZGVmaW5lZFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBleHBvcnQoKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIHRoaXMuZmlsdGVycztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoX2ZpbHRlcl9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/storage_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/storage_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupStorageActionWriter: () => (/* binding */ setupStorageActionWriter),\n/* harmony export */   setupStorageReader: () => (/* binding */ setupStorageReader),\n/* harmony export */   setupStorageWriter: () => (/* binding */ setupStorageWriter)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\nfunction setupStorageReader(requestId) {\n  return {\n    getUrl: async (storageId) => {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(storageId, 1, \"getUrl\", \"storageId\");\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetUrl\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    },\n    getMetadata: async (storageId) => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetMetadata\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    }\n  };\n}\nfunction setupStorageWriter(requestId) {\n  const reader = setupStorageReader(requestId);\n  return {\n    generateUploadUrl: async () => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGenerateUploadUrl\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version\n      });\n    },\n    delete: async (storageId) => {\n      await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageDelete\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    },\n    getUrl: reader.getUrl,\n    getMetadata: reader.getMetadata\n  };\n}\nfunction setupStorageActionWriter(requestId) {\n  const writer = setupStorageWriter(requestId);\n  return {\n    ...writer,\n    store: async (blob, options) => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/storeBlob\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        blob,\n        options\n      });\n    },\n    get: async (storageId) => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/getBlob\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    }\n  };\n}\n//# sourceMappingURL=storage_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N0b3JhZ2VfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUM0QjtBQUM0QjtBQUN6QjtBQUNyQztBQUNQO0FBQ0E7QUFDQSxNQUFNLHlEQUFXO0FBQ2pCLG1CQUFtQixnRUFBbUI7QUFDdEM7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsbUJBQW1CLGdFQUFtQjtBQUN0QztBQUNBLGVBQWU7QUFDZjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEM7QUFDQSxlQUFlO0FBQ2YsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLFlBQVksZ0VBQW1CO0FBQy9CO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNkRBQWdCO0FBQ25DO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsbUJBQW1CLDZEQUFnQjtBQUNuQztBQUNBLGVBQWU7QUFDZjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9zdG9yYWdlX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsLCBwZXJmb3JtSnNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwU3RvcmFnZVJlYWRlcihyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRVcmw6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKHN0b3JhZ2VJZCwgMSwgXCJnZXRVcmxcIiwgXCJzdG9yYWdlSWRcIik7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlR2V0VXJsXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBzdG9yYWdlSWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0TWV0YWRhdGE6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL3N0b3JhZ2VHZXRNZXRhZGF0YVwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTdG9yYWdlV3JpdGVyKHJlcXVlc3RJZCkge1xuICBjb25zdCByZWFkZXIgPSBzZXR1cFN0b3JhZ2VSZWFkZXIocmVxdWVzdElkKTtcbiAgcmV0dXJuIHtcbiAgICBnZW5lcmF0ZVVwbG9hZFVybDogYXN5bmMgKCkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc3RvcmFnZUdlbmVyYXRlVXBsb2FkVXJsXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRlbGV0ZTogYXN5bmMgKHN0b3JhZ2VJZCkgPT4ge1xuICAgICAgYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlRGVsZXRlXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBzdG9yYWdlSWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VXJsOiByZWFkZXIuZ2V0VXJsLFxuICAgIGdldE1ldGFkYXRhOiByZWFkZXIuZ2V0TWV0YWRhdGFcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0b3JhZ2VBY3Rpb25Xcml0ZXIocmVxdWVzdElkKSB7XG4gIGNvbnN0IHdyaXRlciA9IHNldHVwU3RvcmFnZVdyaXRlcihyZXF1ZXN0SWQpO1xuICByZXR1cm4ge1xuICAgIC4uLndyaXRlcixcbiAgICBzdG9yZTogYXN5bmMgKGJsb2IsIG9wdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtSnNTeXNjYWxsKFwic3RvcmFnZS9zdG9yZUJsb2JcIiwge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIGJsb2IsXG4gICAgICAgIG9wdGlvbnNcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBhc3luYyAoc3RvcmFnZUlkKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUpzU3lzY2FsbChcInN0b3JhZ2UvZ2V0QmxvYlwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yYWdlX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/syscall.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   performAsyncSyscall: () => (/* binding */ performAsyncSyscall),\n/* harmony export */   performJsSyscall: () => (/* binding */ performJsSyscall),\n/* harmony export */   performSyscall: () => (/* binding */ performSyscall)\n/* harmony export */ });\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/errors.js */ \"(rsc)/./node_modules/convex/dist/esm/values/errors.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\nfunction performSyscall(op, arg) {\n  if (typeof Convex === \"undefined\" || Convex.syscall === void 0) {\n    throw new Error(\n      \"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\"\n    );\n  }\n  const resultStr = Convex.syscall(op, JSON.stringify(arg));\n  return JSON.parse(resultStr);\n}\nasync function performAsyncSyscall(op, arg) {\n  if (typeof Convex === \"undefined\" || Convex.asyncSyscall === void 0) {\n    throw new Error(\n      \"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\"\n    );\n  }\n  let resultStr;\n  try {\n    resultStr = await Convex.asyncSyscall(op, JSON.stringify(arg));\n  } catch (e) {\n    if (e.data !== void 0) {\n      const rethrown = new _values_errors_js__WEBPACK_IMPORTED_MODULE_0__.ConvexError(e.message);\n      rethrown.data = (0,_values_value_js__WEBPACK_IMPORTED_MODULE_1__.jsonToConvex)(e.data);\n      throw rethrown;\n    }\n    throw new Error(e.message);\n  }\n  return JSON.parse(resultStr);\n}\nfunction performJsSyscall(op, arg) {\n  if (typeof Convex === \"undefined\" || Convex.jsSyscall === void 0) {\n    throw new Error(\n      \"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\"\n    );\n  }\n  return Convex.jsSyscall(op, arg);\n}\n//# sourceMappingURL=syscall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N5c2NhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUN3QztBQUNBO0FBQzlDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLDJCQUEyQiwwREFBVztBQUN0QyxzQkFBc0IsOERBQVk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N5c2NhbGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBDb252ZXhFcnJvciB9IGZyb20gXCIuLi8uLi92YWx1ZXMvZXJyb3JzLmpzXCI7XG5pbXBvcnQgeyBqc29uVG9Db252ZXggfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGVyZm9ybVN5c2NhbGwob3AsIGFyZykge1xuICBpZiAodHlwZW9mIENvbnZleCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBDb252ZXguc3lzY2FsbCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJUaGUgQ29udmV4IGRhdGFiYXNlIGFuZCBhdXRoIG9iamVjdHMgYXJlIGJlaW5nIHVzZWQgb3V0c2lkZSBvZiBhIENvbnZleCBiYWNrZW5kLiBEaWQgeW91IG1lYW4gdG8gdXNlIGB1c2VRdWVyeWAgb3IgYHVzZU11dGF0aW9uYCB0byBjYWxsIGEgQ29udmV4IGZ1bmN0aW9uP1wiXG4gICAgKTtcbiAgfVxuICBjb25zdCByZXN1bHRTdHIgPSBDb252ZXguc3lzY2FsbChvcCwgSlNPTi5zdHJpbmdpZnkoYXJnKSk7XG4gIHJldHVybiBKU09OLnBhcnNlKHJlc3VsdFN0cik7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGVyZm9ybUFzeW5jU3lzY2FsbChvcCwgYXJnKSB7XG4gIGlmICh0eXBlb2YgQ29udmV4ID09PSBcInVuZGVmaW5lZFwiIHx8IENvbnZleC5hc3luY1N5c2NhbGwgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiVGhlIENvbnZleCBkYXRhYmFzZSBhbmQgYXV0aCBvYmplY3RzIGFyZSBiZWluZyB1c2VkIG91dHNpZGUgb2YgYSBDb252ZXggYmFja2VuZC4gRGlkIHlvdSBtZWFuIHRvIHVzZSBgdXNlUXVlcnlgIG9yIGB1c2VNdXRhdGlvbmAgdG8gY2FsbCBhIENvbnZleCBmdW5jdGlvbj9cIlxuICAgICk7XG4gIH1cbiAgbGV0IHJlc3VsdFN0cjtcbiAgdHJ5IHtcbiAgICByZXN1bHRTdHIgPSBhd2FpdCBDb252ZXguYXN5bmNTeXNjYWxsKG9wLCBKU09OLnN0cmluZ2lmeShhcmcpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlLmRhdGEgIT09IHZvaWQgMCkge1xuICAgICAgY29uc3QgcmV0aHJvd24gPSBuZXcgQ29udmV4RXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgIHJldGhyb3duLmRhdGEgPSBqc29uVG9Db252ZXgoZS5kYXRhKTtcbiAgICAgIHRocm93IHJldGhyb3duO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoZS5tZXNzYWdlKTtcbiAgfVxuICByZXR1cm4gSlNPTi5wYXJzZShyZXN1bHRTdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBlcmZvcm1Kc1N5c2NhbGwob3AsIGFyZykge1xuICBpZiAodHlwZW9mIENvbnZleCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBDb252ZXguanNTeXNjYWxsID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRoZSBDb252ZXggZGF0YWJhc2UgYW5kIGF1dGggb2JqZWN0cyBhcmUgYmVpbmcgdXNlZCBvdXRzaWRlIG9mIGEgQ29udmV4IGJhY2tlbmQuIERpZCB5b3UgbWVhbiB0byB1c2UgYHVzZVF1ZXJ5YCBvciBgdXNlTXV0YXRpb25gIHRvIGNhbGwgYSBDb252ZXggZnVuY3Rpb24/XCJcbiAgICApO1xuICB9XG4gIHJldHVybiBDb252ZXguanNTeXNjYWxsKG9wLCBhcmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3lzY2FsbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/validate.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateArg: () => (/* binding */ validateArg),\n/* harmony export */   validateArgIsInteger: () => (/* binding */ validateArgIsInteger),\n/* harmony export */   validateArgIsNonNegativeInteger: () => (/* binding */ validateArgIsNonNegativeInteger)\n/* harmony export */ });\n\nfunction validateArg(arg, idx, method, argName) {\n  if (arg === void 0) {\n    throw new TypeError(\n      `Must provide arg ${idx} \\`${argName}\\` to \\`${method}\\``\n    );\n  }\n}\nfunction validateArgIsInteger(arg, idx, method, argName) {\n  if (!Number.isInteger(arg)) {\n    throw new TypeError(\n      `Arg ${idx} \\`${argName}\\` to \\`${method}\\` must be an integer`\n    );\n  }\n}\nfunction validateArgIsNonNegativeInteger(arg, idx, method, argName) {\n  if (!Number.isInteger(arg) || arg < 0) {\n    throw new TypeError(\n      `Arg ${idx} \\`${argName}\\` to \\`${method}\\` must be a non-negative integer`\n    );\n  }\n}\n//# sourceMappingURL=validate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZhbGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhO0FBQ047QUFDUDtBQUNBO0FBQ0EsMEJBQTBCLEtBQUssSUFBSSxRQUFRLFVBQVUsT0FBTztBQUM1RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLEtBQUssSUFBSSxRQUFRLFVBQVUsT0FBTztBQUMvQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLEtBQUssSUFBSSxRQUFRLFVBQVUsT0FBTztBQUMvQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC92YWxpZGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFyZyhhcmcsIGlkeCwgbWV0aG9kLCBhcmdOYW1lKSB7XG4gIGlmIChhcmcgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICBgTXVzdCBwcm92aWRlIGFyZyAke2lkeH0gXFxgJHthcmdOYW1lfVxcYCB0byBcXGAke21ldGhvZH1cXGBgXG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQXJnSXNJbnRlZ2VyKGFyZywgaWR4LCBtZXRob2QsIGFyZ05hbWUpIHtcbiAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgYEFyZyAke2lkeH0gXFxgJHthcmdOYW1lfVxcYCB0byBcXGAke21ldGhvZH1cXGAgbXVzdCBiZSBhbiBpbnRlZ2VyYFxuICAgICk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFyZ0lzTm9uTmVnYXRpdmVJbnRlZ2VyKGFyZywgaWR4LCBtZXRob2QsIGFyZ05hbWUpIHtcbiAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykgfHwgYXJnIDwgMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICBgQXJnICR7aWR4fSBcXGAke2FyZ05hbWV9XFxgIHRvIFxcYCR7bWV0aG9kfVxcYCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIGludGVnZXJgXG4gICAgKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js":
/*!************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/vector_search_impl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   VectorQueryImpl: () => (/* binding */ VectorQueryImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression),\n/* harmony export */   setupActionVectorSearch: () => (/* binding */ setupActionVectorSearch)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _vector_search_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vector_search.js */ \"(rsc)/./node_modules/convex/dist/esm/server/vector_search.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nfunction setupActionVectorSearch(requestId) {\n  return async (tableName, indexName, query) => {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"vectorSearch\", \"tableName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(indexName, 2, \"vectorSearch\", \"indexName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(query, 3, \"vectorSearch\", \"query\");\n    if (!query.vector || !Array.isArray(query.vector) || query.vector.length === 0) {\n      throw Error(\"`vector` must be a non-empty Array in vectorSearch\");\n    }\n    return await new VectorQueryImpl(\n      requestId,\n      tableName + \".\" + indexName,\n      query\n    ).collect();\n  };\n}\nclass VectorQueryImpl {\n  constructor(requestId, indexName, query) {\n    __publicField(this, \"requestId\");\n    __publicField(this, \"state\");\n    this.requestId = requestId;\n    const filters = query.filter ? serializeExpression(query.filter(filterBuilderImpl)) : null;\n    this.state = {\n      type: \"preparing\",\n      query: {\n        indexName,\n        limit: query.limit,\n        vector: query.vector,\n        expressions: filters\n      }\n    };\n  }\n  async collect() {\n    if (this.state.type === \"consumed\") {\n      throw new Error(\"This query is closed and can't emit any more values.\");\n    }\n    const query = this.state.query;\n    this.state = { type: \"consumed\" };\n    const { results } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/actions/vectorSearch\", {\n      requestId: this.requestId,\n      version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n      query\n    });\n    return results;\n  }\n}\nclass ExpressionImpl extends _vector_search_js__WEBPACK_IMPORTED_MODULE_2__.FilterExpression {\n  constructor(inner) {\n    super();\n    __publicField(this, \"inner\");\n    this.inner = inner;\n  }\n  serialize() {\n    return this.inner;\n  }\n}\nfunction serializeExpression(expr) {\n  if (expr instanceof ExpressionImpl) {\n    return expr.serialize();\n  } else {\n    return { $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_4__.convexOrUndefinedToJson)(expr) };\n  }\n}\nconst filterBuilderImpl = {\n  //  Comparisons  /////////////////////////////////////////////////////////////\n  eq(fieldName, value) {\n    if (typeof fieldName !== \"string\") {\n      throw new Error(\"The first argument to `q.eq` must be a field name.\");\n    }\n    return new ExpressionImpl({\n      $eq: [\n        serializeExpression(new ExpressionImpl({ $field: fieldName })),\n        serializeExpression(value)\n      ]\n    });\n  },\n  //  Logic  ///////////////////////////////////////////////////////////////////\n  or(...exprs) {\n    return new ExpressionImpl({ $or: exprs.map(serializeExpression) });\n  }\n};\n//# sourceMappingURL=vector_search_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZlY3Rvcl9zZWFyY2hfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDbUQ7QUFDVjtBQUdaO0FBQ2U7QUFDb0I7QUFDekQ7QUFDUDtBQUNBLElBQUkseURBQVc7QUFDZixJQUFJLHlEQUFXO0FBQ2YsSUFBSSx5REFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLFlBQVksVUFBVSxRQUFRLGdFQUFtQjtBQUNqRDtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDTyw2QkFBNkIsK0RBQWdCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUk7QUFDSixhQUFhLFVBQVUseUVBQXVCO0FBQzlDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELG1CQUFtQjtBQUNwRTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLHFDQUFxQztBQUNyRTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvdmVjdG9yX3NlYXJjaF9pbXBsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IHBlcmZvcm1Bc3luY1N5c2NhbGwgfSBmcm9tIFwiLi9zeXNjYWxsLmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQge1xuICBGaWx0ZXJFeHByZXNzaW9uXG59IGZyb20gXCIuLi92ZWN0b3Jfc2VhcmNoLmpzXCI7XG5pbXBvcnQgeyB2YWxpZGF0ZUFyZyB9IGZyb20gXCIuL3ZhbGlkYXRlLmpzXCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cEFjdGlvblZlY3RvclNlYXJjaChyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIGFzeW5jICh0YWJsZU5hbWUsIGluZGV4TmFtZSwgcXVlcnkpID0+IHtcbiAgICB2YWxpZGF0ZUFyZyh0YWJsZU5hbWUsIDEsIFwidmVjdG9yU2VhcmNoXCIsIFwidGFibGVOYW1lXCIpO1xuICAgIHZhbGlkYXRlQXJnKGluZGV4TmFtZSwgMiwgXCJ2ZWN0b3JTZWFyY2hcIiwgXCJpbmRleE5hbWVcIik7XG4gICAgdmFsaWRhdGVBcmcocXVlcnksIDMsIFwidmVjdG9yU2VhcmNoXCIsIFwicXVlcnlcIik7XG4gICAgaWYgKCFxdWVyeS52ZWN0b3IgfHwgIUFycmF5LmlzQXJyYXkocXVlcnkudmVjdG9yKSB8fCBxdWVyeS52ZWN0b3IubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBFcnJvcihcImB2ZWN0b3JgIG11c3QgYmUgYSBub24tZW1wdHkgQXJyYXkgaW4gdmVjdG9yU2VhcmNoXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgbmV3IFZlY3RvclF1ZXJ5SW1wbChcbiAgICAgIHJlcXVlc3RJZCxcbiAgICAgIHRhYmxlTmFtZSArIFwiLlwiICsgaW5kZXhOYW1lLFxuICAgICAgcXVlcnlcbiAgICApLmNvbGxlY3QoKTtcbiAgfTtcbn1cbmV4cG9ydCBjbGFzcyBWZWN0b3JRdWVyeUltcGwge1xuICBjb25zdHJ1Y3RvcihyZXF1ZXN0SWQsIGluZGV4TmFtZSwgcXVlcnkpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVxdWVzdElkXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGF0ZVwiKTtcbiAgICB0aGlzLnJlcXVlc3RJZCA9IHJlcXVlc3RJZDtcbiAgICBjb25zdCBmaWx0ZXJzID0gcXVlcnkuZmlsdGVyID8gc2VyaWFsaXplRXhwcmVzc2lvbihxdWVyeS5maWx0ZXIoZmlsdGVyQnVpbGRlckltcGwpKSA6IG51bGw7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHR5cGU6IFwicHJlcGFyaW5nXCIsXG4gICAgICBxdWVyeToge1xuICAgICAgICBpbmRleE5hbWUsXG4gICAgICAgIGxpbWl0OiBxdWVyeS5saW1pdCxcbiAgICAgICAgdmVjdG9yOiBxdWVyeS52ZWN0b3IsXG4gICAgICAgIGV4cHJlc3Npb25zOiBmaWx0ZXJzXG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBhc3luYyBjb2xsZWN0KCkge1xuICAgIGlmICh0aGlzLnN0YXRlLnR5cGUgPT09IFwiY29uc3VtZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBxdWVyeSBpcyBjbG9zZWQgYW5kIGNhbid0IGVtaXQgYW55IG1vcmUgdmFsdWVzLlwiKTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLnN0YXRlLnF1ZXJ5O1xuICAgIHRoaXMuc3RhdGUgPSB7IHR5cGU6IFwiY29uc3VtZWRcIiB9O1xuICAgIGNvbnN0IHsgcmVzdWx0cyB9ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL3ZlY3RvclNlYXJjaFwiLCB7XG4gICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElkLFxuICAgICAgdmVyc2lvbixcbiAgICAgIHF1ZXJ5XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cbn1cbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uSW1wbCBleHRlbmRzIEZpbHRlckV4cHJlc3Npb24ge1xuICBjb25zdHJ1Y3Rvcihpbm5lcikge1xuICAgIHN1cGVyKCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlubmVyXCIpO1xuICAgIHRoaXMuaW5uZXIgPSBpbm5lcjtcbiAgfVxuICBzZXJpYWxpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5uZXI7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVFeHByZXNzaW9uKGV4cHIpIHtcbiAgaWYgKGV4cHIgaW5zdGFuY2VvZiBFeHByZXNzaW9uSW1wbCkge1xuICAgIHJldHVybiBleHByLnNlcmlhbGl6ZSgpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7ICRsaXRlcmFsOiBjb252ZXhPclVuZGVmaW5lZFRvSnNvbihleHByKSB9O1xuICB9XG59XG5leHBvcnQgY29uc3QgZmlsdGVyQnVpbGRlckltcGwgPSB7XG4gIC8vICBDb21wYXJpc29ucyAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBlcShmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiBmaWVsZE5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCB0byBgcS5lcWAgbXVzdCBiZSBhIGZpZWxkIG5hbWUuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRlcTogW1xuICAgICAgICBzZXJpYWxpemVFeHByZXNzaW9uKG5ldyBFeHByZXNzaW9uSW1wbCh7ICRmaWVsZDogZmllbGROYW1lIH0pKSxcbiAgICAgICAgc2VyaWFsaXplRXhwcmVzc2lvbih2YWx1ZSlcbiAgICAgIF1cbiAgICB9KTtcbiAgfSxcbiAgLy8gIExvZ2ljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIG9yKC4uLmV4cHJzKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRvcjogZXhwcnMubWFwKHNlcmlhbGl6ZUV4cHJlc3Npb24pIH0pO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yX3NlYXJjaF9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.ROUTABLE_HTTP_METHODS),\n/* harmony export */   SearchFilter: () => (/* reexport safe */ _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__.SearchFilter),\n/* harmony export */   actionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.actionGeneric),\n/* harmony export */   anyApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.anyApi),\n/* harmony export */   componentsGeneric: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.componentsGeneric),\n/* harmony export */   createFunctionHandle: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.createFunctionHandle),\n/* harmony export */   cronJobs: () => (/* reexport safe */ _cron_js__WEBPACK_IMPORTED_MODULE_5__.cronJobs),\n/* harmony export */   currentSystemUdfInComponent: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.currentSystemUdfInComponent),\n/* harmony export */   defineApp: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.defineApp),\n/* harmony export */   defineComponent: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.defineComponent),\n/* harmony export */   defineSchema: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_9__.defineSchema),\n/* harmony export */   defineTable: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_9__.defineTable),\n/* harmony export */   filterApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.filterApi),\n/* harmony export */   getFunctionAddress: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.getFunctionAddress),\n/* harmony export */   getFunctionName: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.getFunctionName),\n/* harmony export */   httpActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.httpActionGeneric),\n/* harmony export */   httpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.httpRouter),\n/* harmony export */   internalActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalQueryGeneric),\n/* harmony export */   makeFunctionReference: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.makeFunctionReference),\n/* harmony export */   mutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.mutationGeneric),\n/* harmony export */   paginationOptsValidator: () => (/* reexport safe */ _pagination_js__WEBPACK_IMPORTED_MODULE_2__.paginationOptsValidator),\n/* harmony export */   queryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.queryGeneric)\n/* harmony export */ });\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database.js */ \"(rsc)/./node_modules/convex/dist/esm/server/database.js\");\n/* harmony import */ var _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./impl/registration_impl.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\");\n/* harmony import */ var _pagination_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pagination.js */ \"(rsc)/./node_modules/convex/dist/esm/server/pagination.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search_filter_builder.js */ \"(rsc)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage.js */ \"(rsc)/./node_modules/convex/dist/esm/server/storage.js\");\n/* harmony import */ var _cron_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cron.js */ \"(rsc)/./node_modules/convex/dist/esm/server/cron.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./router.js */ \"(rsc)/./node_modules/convex/dist/esm/server/router.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./api.js */ \"(rsc)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/index.js */ \"(rsc)/./node_modules/convex/dist/esm/server/components/index.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./schema.js */ \"(rsc)/./node_modules/convex/dist/esm/server/schema.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQ2lCO0FBU087QUFDTDtBQUNXO0FBQ2Q7QUFDUTtBQUN1QztBQU0xRDtBQU1hO0FBQ3FDO0FBQ1Q7QUFDSDtBQUN4RCIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRhYmFzZS5qc1wiO1xuZXhwb3J0IHtcbiAgYWN0aW9uR2VuZXJpYyxcbiAgaHR0cEFjdGlvbkdlbmVyaWMsXG4gIG11dGF0aW9uR2VuZXJpYyxcbiAgcXVlcnlHZW5lcmljLFxuICBpbnRlcm5hbEFjdGlvbkdlbmVyaWMsXG4gIGludGVybmFsTXV0YXRpb25HZW5lcmljLFxuICBpbnRlcm5hbFF1ZXJ5R2VuZXJpY1xufSBmcm9tIFwiLi9pbXBsL3JlZ2lzdHJhdGlvbl9pbXBsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYWdpbmF0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0b3JhZ2UuanNcIjtcbmV4cG9ydCB7IGNyb25Kb2JzIH0gZnJvbSBcIi4vY3Jvbi5qc1wiO1xuZXhwb3J0IHsgaHR0cFJvdXRlciwgSHR0cFJvdXRlciwgUk9VVEFCTEVfSFRUUF9NRVRIT0RTIH0gZnJvbSBcIi4vcm91dGVyLmpzXCI7XG5leHBvcnQge1xuICBhbnlBcGksXG4gIGdldEZ1bmN0aW9uTmFtZSxcbiAgbWFrZUZ1bmN0aW9uUmVmZXJlbmNlLFxuICBmaWx0ZXJBcGlcbn0gZnJvbSBcIi4vYXBpLmpzXCI7XG5leHBvcnQge1xuICBkZWZpbmVBcHAsXG4gIGRlZmluZUNvbXBvbmVudCxcbiAgY29tcG9uZW50c0dlbmVyaWMsXG4gIGNyZWF0ZUZ1bmN0aW9uSGFuZGxlXG59IGZyb20gXCIuL2NvbXBvbmVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGN1cnJlbnRTeXN0ZW1VZGZJbkNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGdldEZ1bmN0aW9uQWRkcmVzcyB9IGZyb20gXCIuL2NvbXBvbmVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGRlZmluZVRhYmxlLCBkZWZpbmVTY2hlbWEgfSBmcm9tIFwiLi9zY2hlbWEuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/index_range_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index_range_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRange: () => (/* binding */ IndexRange)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass IndexRange {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isIndexRange\");\n  }\n}\n//# sourceMappingURL=index_range_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmV4cG9ydCBjbGFzcyBJbmRleFJhbmdlIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gUHJvcGVydHkgZm9yIG5vbWluYWwgdHlwZSBzdXBwb3J0LlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaXNJbmRleFJhbmdlXCIpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleF9yYW5nZV9idWlsZGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/index_range_builder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/pagination.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/pagination.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paginationOptsValidator: () => (/* binding */ paginationOptsValidator)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(rsc)/./node_modules/convex/dist/esm/values/validator.js\");\n\n\nconst paginationOptsValidator = _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n  numItems: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number(),\n  cursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null()),\n  endCursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null())),\n  id: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n  maximumRowsRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n  maximumBytesRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number())\n});\n//# sourceMappingURL=pagination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9wYWdpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDOEI7QUFDcEMsZ0NBQWdDLG1EQUFDO0FBQ3hDLFlBQVksbURBQUM7QUFDYixVQUFVLG1EQUFDLE9BQU8sbURBQUMsV0FBVyxtREFBQztBQUMvQixhQUFhLG1EQUFDLFVBQVUsbURBQUMsT0FBTyxtREFBQyxXQUFXLG1EQUFDO0FBQzdDLE1BQU0sbURBQUMsVUFBVSxtREFBQztBQUNsQixtQkFBbUIsbURBQUMsVUFBVSxtREFBQztBQUMvQixvQkFBb0IsbURBQUMsVUFBVSxtREFBQztBQUNoQyxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3BhZ2luYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB2IH0gZnJvbSBcIi4uL3ZhbHVlcy92YWxpZGF0b3IuanNcIjtcbmV4cG9ydCBjb25zdCBwYWdpbmF0aW9uT3B0c1ZhbGlkYXRvciA9IHYub2JqZWN0KHtcbiAgbnVtSXRlbXM6IHYubnVtYmVyKCksXG4gIGN1cnNvcjogdi51bmlvbih2LnN0cmluZygpLCB2Lm51bGwoKSksXG4gIGVuZEN1cnNvcjogdi5vcHRpb25hbCh2LnVuaW9uKHYuc3RyaW5nKCksIHYubnVsbCgpKSksXG4gIGlkOiB2Lm9wdGlvbmFsKHYubnVtYmVyKCkpLFxuICBtYXhpbXVtUm93c1JlYWQ6IHYub3B0aW9uYWwodi5udW1iZXIoKSksXG4gIG1heGltdW1CeXRlc1JlYWQ6IHYub3B0aW9uYWwodi5udW1iZXIoKSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnaW5hdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/pagination.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/router.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* binding */ HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* binding */ ROUTABLE_HTTP_METHODS),\n/* harmony export */   httpRouter: () => (/* binding */ httpRouter),\n/* harmony export */   normalizeMethod: () => (/* binding */ normalizeMethod)\n/* harmony export */ });\n/* harmony import */ var _impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./impl/syscall.js */ \"(rsc)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst ROUTABLE_HTTP_METHODS = [\n  \"GET\",\n  \"POST\",\n  \"PUT\",\n  \"DELETE\",\n  \"OPTIONS\",\n  \"PATCH\"\n];\nfunction normalizeMethod(method) {\n  if (method === \"HEAD\") return \"GET\";\n  return method;\n}\nconst httpRouter = () => new HttpRouter();\nclass HttpRouter {\n  constructor() {\n    __publicField(this, \"exactRoutes\", /* @__PURE__ */ new Map());\n    __publicField(this, \"prefixRoutes\", /* @__PURE__ */ new Map());\n    __publicField(this, \"isRouter\", true);\n    /**\n     * Specify an HttpAction to be used to respond to requests\n     * for an HTTP method (e.g. \"GET\") and a path or pathPrefix.\n     *\n     * Paths must begin with a slash. Path prefixes must also end in a slash.\n     *\n     * ```js\n     * // matches `/profile` (but not `/profile/`)\n     * http.route({ path: \"/profile\", method: \"GET\", handler: getProfile})\n     *\n     * // matches `/profiles/`, `/profiles/abc`, and `/profiles/a/c/b` (but not `/profile`)\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile})\n     * ```\n     */\n    __publicField(this, \"route\", (spec) => {\n      if (!spec.handler) throw new Error(`route requires handler`);\n      if (!spec.method) throw new Error(`route requires method`);\n      const { method, handler } = spec;\n      if (!ROUTABLE_HTTP_METHODS.includes(method)) {\n        throw new Error(\n          `'${method}' is not an allowed HTTP method (like GET, POST, PUT etc.)`\n        );\n      }\n      if (\"path\" in spec) {\n        if (\"pathPrefix\" in spec) {\n          throw new Error(\n            `Invalid httpRouter route: cannot contain both 'path' and 'pathPrefix'`\n          );\n        }\n        if (!spec.path.startsWith(\"/\")) {\n          throw new Error(`path '${spec.path}' does not start with a /`);\n        }\n        const methods = this.exactRoutes.has(spec.path) ? this.exactRoutes.get(spec.path) : /* @__PURE__ */ new Map();\n        if (methods.has(method)) {\n          throw new Error(\n            `Path '${spec.path}' for method ${method} already in use`\n          );\n        }\n        methods.set(method, handler);\n        this.exactRoutes.set(spec.path, methods);\n      } else if (\"pathPrefix\" in spec) {\n        if (!spec.pathPrefix.startsWith(\"/\")) {\n          throw new Error(\n            `pathPrefix '${spec.pathPrefix}' does not start with a /`\n          );\n        }\n        if (!spec.pathPrefix.endsWith(\"/\")) {\n          throw new Error(`pathPrefix ${spec.pathPrefix} must end with a /`);\n        }\n        const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n        if (prefixes.has(spec.pathPrefix)) {\n          throw new Error(\n            `${spec.method} pathPrefix ${spec.pathPrefix} is already defined`\n          );\n        }\n        prefixes.set(spec.pathPrefix, handler);\n        this.prefixRoutes.set(method, prefixes);\n      } else {\n        throw new Error(\n          `Invalid httpRouter route entry: must contain either field 'path' or 'pathPrefix'`\n        );\n      }\n    });\n    /**\n     * Returns a list of routed HTTP actions.\n     *\n     * These are used to populate the list of routes shown in the Functions page of the Convex dashboard.\n     *\n     * @returns - an array of [path, method, endpoint] tuples.\n     */\n    __publicField(this, \"getRoutes\", () => {\n      const exactPaths = [...this.exactRoutes.keys()].sort();\n      const exact = exactPaths.flatMap(\n        (path) => [...this.exactRoutes.get(path).keys()].sort().map(\n          (method) => [path, method, this.exactRoutes.get(path).get(method)]\n        )\n      );\n      const prefixPathMethods = [...this.prefixRoutes.keys()].sort();\n      const prefixes = prefixPathMethods.flatMap(\n        (method) => [...this.prefixRoutes.get(method).keys()].sort().map(\n          (pathPrefix) => [\n            `${pathPrefix}*`,\n            method,\n            this.prefixRoutes.get(method).get(pathPrefix)\n          ]\n        )\n      );\n      return [...exact, ...prefixes];\n    });\n    /**\n     * Returns the appropriate HTTP action and its routed request path and method.\n     *\n     * The path and method returned are used for logging and metrics, and should\n     * match up with one of the routes returned by `getRoutes`.\n     *\n     * For example,\n     *\n     * ```js\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile});\n     *\n     * http.lookup(\"/profile/abc\", \"GET\") // returns [getProfile, \"GET\", \"/profile/*\"]\n     *```\n     *\n     * @returns - a tuple [{@link PublicHttpAction}, method, path] or null.\n     */\n    __publicField(this, \"lookup\", (path, method) => {\n      method = normalizeMethod(method);\n      const exactMatch = this.exactRoutes.get(path)?.get(method);\n      if (exactMatch) return [exactMatch, method, path];\n      const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n      const prefixesSorted = [...prefixes.entries()].sort(\n        ([prefixA, _a], [prefixB, _b]) => prefixB.length - prefixA.length\n      );\n      for (const [pathPrefix, endpoint] of prefixesSorted) {\n        if (path.startsWith(pathPrefix)) {\n          return [endpoint, method, `${pathPrefix}*`];\n        }\n      }\n      return null;\n    });\n    /**\n     * Given a JSON string representation of a Request object, return a Response\n     * by routing the request and running the appropriate endpoint or returning\n     * a 404 Response.\n     *\n     * @param argsStr - a JSON string representing a Request object.\n     *\n     * @returns - a Response object.\n     */\n    __publicField(this, \"runRequest\", async (argsStr, requestRoute) => {\n      const request = (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"requestFromConvexJson\", {\n        convexJson: JSON.parse(argsStr)\n      });\n      let pathname = requestRoute;\n      if (!pathname || typeof pathname !== \"string\") {\n        pathname = new URL(request.url).pathname;\n      }\n      const method = request.method;\n      const match = this.lookup(pathname, method);\n      if (!match) {\n        const response2 = new Response(`No HttpAction routed for ${pathname}`, {\n          status: 404\n        });\n        return JSON.stringify(\n          (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", { response: response2 })\n        );\n      }\n      const [endpoint, _method, _path] = match;\n      const response = await endpoint.invokeHttpAction(request);\n      return JSON.stringify(\n        (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", { response })\n      );\n    });\n  }\n}\n//# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/router.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/schema.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/schema.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaDefinition: () => (/* binding */ SchemaDefinition),\n/* harmony export */   TableDefinition: () => (/* binding */ TableDefinition),\n/* harmony export */   defineSchema: () => (/* binding */ defineSchema),\n/* harmony export */   defineTable: () => (/* binding */ defineTable)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(rsc)/./node_modules/convex/dist/esm/values/validator.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nclass TableDefinition {\n  /**\n   * @internal\n   */\n  constructor(documentType) {\n    __publicField(this, \"indexes\");\n    __publicField(this, \"searchIndexes\");\n    __publicField(this, \"vectorIndexes\");\n    // The type of documents stored in this table.\n    __publicField(this, \"validator\");\n    this.indexes = [];\n    this.searchIndexes = [];\n    this.vectorIndexes = [];\n    this.validator = documentType;\n  }\n  /**\n   * Define an index on this table.\n   *\n   * To learn about indexes, see [Defining Indexes](https://docs.convex.dev/using/indexes).\n   *\n   * @param name - The name of the index.\n   * @param fields - The fields to index, in order. Must specify at least one\n   * field.\n   * @returns A {@link TableDefinition} with this index included.\n   */\n  index(name, fields) {\n    this.indexes.push({ indexDescriptor: name, fields });\n    return this;\n  }\n  /**\n   * Define a search index on this table.\n   *\n   * To learn about search indexes, see [Search](https://docs.convex.dev/text-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The search index configuration object.\n   * @returns A {@link TableDefinition} with this search index included.\n   */\n  searchIndex(name, indexConfig) {\n    this.searchIndexes.push({\n      indexDescriptor: name,\n      searchField: indexConfig.searchField,\n      filterFields: indexConfig.filterFields || []\n    });\n    return this;\n  }\n  /**\n   * Define a vector index on this table.\n   *\n   * To learn about vector indexes, see [Vector Search](https://docs.convex.dev/vector-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The vector index configuration object.\n   * @returns A {@link TableDefinition} with this vector index included.\n   */\n  vectorIndex(name, indexConfig) {\n    this.vectorIndexes.push({\n      indexDescriptor: name,\n      vectorField: indexConfig.vectorField,\n      dimensions: indexConfig.dimensions,\n      filterFields: indexConfig.filterFields || []\n    });\n    return this;\n  }\n  /**\n   * Work around for https://github.com/microsoft/TypeScript/issues/57035\n   */\n  self() {\n    return this;\n  }\n  /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */\n  export() {\n    return {\n      indexes: this.indexes,\n      searchIndexes: this.searchIndexes,\n      vectorIndexes: this.vectorIndexes,\n      documentType: this.validator.json\n    };\n  }\n}\nfunction defineTable(documentSchema) {\n  if ((0,_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.isValidator)(documentSchema)) {\n    return new TableDefinition(documentSchema);\n  } else {\n    return new TableDefinition(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object(documentSchema));\n  }\n}\nclass SchemaDefinition {\n  /**\n   * @internal\n   */\n  constructor(tables, options) {\n    __publicField(this, \"tables\");\n    __publicField(this, \"strictTableNameTypes\");\n    __publicField(this, \"schemaValidation\");\n    this.tables = tables;\n    this.schemaValidation = options?.schemaValidation === void 0 ? true : options.schemaValidation;\n  }\n  /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */\n  export() {\n    return JSON.stringify({\n      tables: Object.entries(this.tables).map(([tableName, definition]) => {\n        const { indexes, searchIndexes, vectorIndexes, documentType } = definition.export();\n        return {\n          tableName,\n          indexes,\n          searchIndexes,\n          vectorIndexes,\n          documentType\n        };\n      }),\n      schemaValidation: this.schemaValidation\n    });\n  }\n}\nfunction defineSchema(schema, options) {\n  return new SchemaDefinition(schema, options);\n}\nconst _systemSchema = defineSchema({\n  _scheduled_functions: defineTable({\n    name: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n    args: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.array(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.any()),\n    scheduledTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n    completedTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64()),\n    state: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"pending\") }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"inProgress\") }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"success\") }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"failed\"), error: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string() }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"canceled\") })\n    )\n  }),\n  _storage: defineTable({\n    sha256: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n    size: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n    contentType: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string())\n  })\n});\n//# sourceMappingURL=schema.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/schema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/search_filter_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/search_filter_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilter: () => (/* binding */ SearchFilter)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass SearchFilter {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isSearchFilter\");\n  }\n}\n//# sourceMappingURL=search_filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ2I7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3NlYXJjaF9maWx0ZXJfYnVpbGRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5leHBvcnQgY2xhc3MgU2VhcmNoRmlsdGVyIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gUHJvcGVydHkgZm9yIG5vbWluYWwgdHlwZSBzdXBwb3J0LlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaXNTZWFyY2hGaWx0ZXJcIik7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaF9maWx0ZXJfYnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/search_filter_builder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/storage.js":
/*!********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/storage.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmFnZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/storage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/server/vector_search.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/vector_search.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterExpression: () => (/* binding */ FilterExpression)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass FilterExpression {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isExpression\");\n    // Property to distinguish expressions by the type they resolve to.\n    __publicField(this, \"_value\");\n  }\n}\n//# sourceMappingURL=vector_search.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci92ZWN0b3Jfc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvdmVjdG9yX3NlYXJjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5leHBvcnQgY2xhc3MgRmlsdGVyRXhwcmVzc2lvbiB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIC8vIFByb3BlcnR5IGZvciBub21pbmFsIHR5cGUgc3VwcG9ydC5cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX2lzRXhwcmVzc2lvblwiKTtcbiAgICAvLyBQcm9wZXJ0eSB0byBkaXN0aW5ndWlzaCBleHByZXNzaW9ucyBieSB0aGUgdHlwZSB0aGV5IHJlc29sdmUgdG8uXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl92YWx1ZVwiKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yX3NlYXJjaC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/server/vector_search.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/base64.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   fromByteArray: () => (/* binding */ fromByteArray),\n/* harmony export */   toByteArray: () => (/* binding */ toByteArray)\n/* harmony export */ });\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = Uint8Array;\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\nfunction getLens(b64) {\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  }\n  var validLen = b64.indexOf(\"=\");\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(_b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0;\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 255;\n    arr[curByte++] = tmp >> 8 & 255;\n    arr[curByte++] = tmp & 255;\n  }\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 255;\n  }\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 255;\n    arr[curByte++] = tmp & 255;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3;\n  var parts = [];\n  var maxChunkLength = 16383;\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(\n      encodeChunk(\n        uint8,\n        i,\n        i + maxChunkLength > len2 ? len2 : i + maxChunkLength\n      )\n    );\n  }\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\"\n    );\n  }\n  return parts.join(\"\");\n}\n//# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2Jhc2U2NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBsb29rdXAgPSBbXTtcbnZhciByZXZMb29rdXAgPSBbXTtcbnZhciBBcnIgPSBVaW50OEFycmF5O1xudmFyIGNvZGUgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIjtcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV07XG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaTtcbn1cbnJldkxvb2t1cFtcIi1cIi5jaGFyQ29kZUF0KDApXSA9IDYyO1xucmV2TG9va3VwW1wiX1wiLmNoYXJDb2RlQXQoMCldID0gNjM7XG5mdW5jdGlvbiBnZXRMZW5zKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aDtcbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNFwiKTtcbiAgfVxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZihcIj1cIik7XG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuO1xuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gdmFsaWRMZW4gPT09IGxlbiA/IDAgOiA0IC0gdmFsaWRMZW4gJSA0O1xuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVMZW5ndGgoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpO1xuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdO1xuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXTtcbiAgcmV0dXJuICh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCAtIHBsYWNlSG9sZGVyc0xlbjtcbn1cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoKF9iNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCAtIHBsYWNlSG9sZGVyc0xlbjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVBcnJheShiNjQpIHtcbiAgdmFyIHRtcDtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NCk7XG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF07XG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdO1xuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKTtcbiAgdmFyIGN1ckJ5dGUgPSAwO1xuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMCA/IHZhbGlkTGVuIC0gNCA6IHZhbGlkTGVuO1xuICB2YXIgaTtcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID0gcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyIHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPDwgNiB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldO1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wID4+IDE2ICYgMjU1O1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wID4+IDggJiAyNTU7XG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAyNTU7XG4gIH1cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMiB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQ7XG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAyNTU7XG4gIH1cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTAgfCByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0IHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMjtcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCA+PiA4ICYgMjU1O1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMjU1O1xuICB9XG4gIHJldHVybiBhcnI7XG59XG5mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgNjNdICsgbG9va3VwW251bSA+PiAxMiAmIDYzXSArIGxvb2t1cFtudW0gPj4gNiAmIDYzXSArIGxvb2t1cFtudW0gJiA2M107XG59XG5mdW5jdGlvbiBlbmNvZGVDaHVuayh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wO1xuICB2YXIgb3V0cHV0ID0gW107XG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSAzKSB7XG4gICAgdG1wID0gKHVpbnQ4W2ldIDw8IDE2ICYgMTY3MTE2ODApICsgKHVpbnQ4W2kgKyAxXSA8PCA4ICYgNjUyODApICsgKHVpbnQ4W2kgKyAyXSAmIDI1NSk7XG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpO1xuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbihcIlwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQnl0ZUFycmF5KHVpbnQ4KSB7XG4gIHZhciB0bXA7XG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGg7XG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMztcbiAgdmFyIHBhcnRzID0gW107XG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzO1xuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XG4gICAgcGFydHMucHVzaChcbiAgICAgIGVuY29kZUNodW5rKFxuICAgICAgICB1aW50OCxcbiAgICAgICAgaSxcbiAgICAgICAgaSArIG1heENodW5rTGVuZ3RoID4gbGVuMiA/IGxlbjIgOiBpICsgbWF4Q2h1bmtMZW5ndGhcbiAgICAgIClcbiAgICApO1xuICB9XG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV07XG4gICAgcGFydHMucHVzaChsb29rdXBbdG1wID4+IDJdICsgbG9va3VwW3RtcCA8PCA0ICYgNjNdICsgXCI9PVwiKTtcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV07XG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICsgbG9va3VwW3RtcCA+PiA0ICYgNjNdICsgbG9va3VwW3RtcCA8PCAyICYgNjNdICsgXCI9XCJcbiAgICApO1xuICB9XG4gIHJldHVybiBwYXJ0cy5qb2luKFwiXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/base64.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/compare.js":
/*!********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/compare.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareValues: () => (/* binding */ compareValues)\n/* harmony export */ });\n/* harmony import */ var _compare_utf8_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare_utf8.js */ \"(rsc)/./node_modules/convex/dist/esm/values/compare_utf8.js\");\n\n\nfunction compareValues(k1, k2) {\n  return compareAsTuples(makeComparable(k1), makeComparable(k2));\n}\nfunction compareAsTuples(a, b) {\n  if (a[0] === b[0]) {\n    return compareSameTypeValues(a[1], b[1]);\n  } else if (a[0] < b[0]) {\n    return -1;\n  }\n  return 1;\n}\nfunction compareSameTypeValues(v1, v2) {\n  if (v1 === void 0 || v1 === null) {\n    return 0;\n  }\n  if (typeof v1 === \"number\") {\n    if (typeof v2 !== \"number\") {\n      throw new Error(`Unexpected type ${v2}`);\n    }\n    return compareNumbers(v1, v2);\n  }\n  if (typeof v1 === \"string\") {\n    if (typeof v2 !== \"string\") {\n      throw new Error(`Unexpected type ${v2}`);\n    }\n    return (0,_compare_utf8_js__WEBPACK_IMPORTED_MODULE_0__.compareUTF8)(v1, v2);\n  }\n  if (typeof v1 === \"bigint\" || typeof v1 === \"boolean\" || typeof v1 === \"string\") {\n    return v1 < v2 ? -1 : v1 === v2 ? 0 : 1;\n  }\n  if (!Array.isArray(v1) || !Array.isArray(v2)) {\n    throw new Error(`Unexpected type ${v1}`);\n  }\n  for (let i = 0; i < v1.length && i < v2.length; i++) {\n    const cmp = compareAsTuples(v1[i], v2[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (v1.length < v2.length) {\n    return -1;\n  }\n  if (v1.length > v2.length) {\n    return 1;\n  }\n  return 0;\n}\nfunction compareNumbers(v1, v2) {\n  if (isNaN(v1) || isNaN(v2)) {\n    const buffer1 = new ArrayBuffer(8);\n    const buffer2 = new ArrayBuffer(8);\n    new DataView(buffer1).setFloat64(\n      0,\n      v1,\n      /* little-endian */\n      true\n    );\n    new DataView(buffer2).setFloat64(\n      0,\n      v2,\n      /* little-endian */\n      true\n    );\n    const v1Bits = BigInt(\n      new DataView(buffer1).getBigInt64(\n        0,\n        /* little-endian */\n        true\n      )\n    );\n    const v2Bits = BigInt(\n      new DataView(buffer2).getBigInt64(\n        0,\n        /* little-endian */\n        true\n      )\n    );\n    const v1Sign = (v1Bits & 0x8000000000000000n) !== 0n;\n    const v2Sign = (v2Bits & 0x8000000000000000n) !== 0n;\n    if (isNaN(v1) !== isNaN(v2)) {\n      if (isNaN(v1)) {\n        return v1Sign ? -1 : 1;\n      }\n      return v2Sign ? 1 : -1;\n    }\n    if (v1Sign !== v2Sign) {\n      return v1Sign ? -1 : 1;\n    }\n    return v1Bits < v2Bits ? -1 : v1Bits === v2Bits ? 0 : 1;\n  }\n  if (Object.is(v1, v2)) {\n    return 0;\n  }\n  if (Object.is(v1, -0)) {\n    return Object.is(v2, 0) ? -1 : -Math.sign(v2);\n  }\n  if (Object.is(v2, -0)) {\n    return Object.is(v1, 0) ? 1 : Math.sign(v1);\n  }\n  return v1 < v2 ? -1 : 1;\n}\nfunction makeComparable(v) {\n  if (v === void 0) {\n    return [0, void 0];\n  }\n  if (v === null) {\n    return [1, null];\n  }\n  if (typeof v === \"bigint\") {\n    return [2, v];\n  }\n  if (typeof v === \"number\") {\n    return [3, v];\n  }\n  if (typeof v === \"boolean\") {\n    return [4, v];\n  }\n  if (typeof v === \"string\") {\n    return [5, v];\n  }\n  if (v instanceof ArrayBuffer) {\n    return [6, Array.from(new Uint8Array(v)).map(makeComparable)];\n  }\n  if (Array.isArray(v)) {\n    return [7, v.map(makeComparable)];\n  }\n  const keys = Object.keys(v).sort();\n  const pojo = keys.map((k) => [k, v[k]]);\n  return [8, pojo.map(makeComparable)];\n}\n//# sourceMappingURL=compare.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDbUM7QUFDekM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLEdBQUc7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxHQUFHO0FBQzVDO0FBQ0EsV0FBVyw2REFBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLEdBQUc7QUFDMUM7QUFDQSxrQkFBa0IsZ0NBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29tcGFyZVVURjggfSBmcm9tIFwiLi9jb21wYXJlX3V0ZjguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlVmFsdWVzKGsxLCBrMikge1xuICByZXR1cm4gY29tcGFyZUFzVHVwbGVzKG1ha2VDb21wYXJhYmxlKGsxKSwgbWFrZUNvbXBhcmFibGUoazIpKTtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVBc1R1cGxlcyhhLCBiKSB7XG4gIGlmIChhWzBdID09PSBiWzBdKSB7XG4gICAgcmV0dXJuIGNvbXBhcmVTYW1lVHlwZVZhbHVlcyhhWzFdLCBiWzFdKTtcbiAgfSBlbHNlIGlmIChhWzBdIDwgYlswXSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gMTtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVTYW1lVHlwZVZhbHVlcyh2MSwgdjIpIHtcbiAgaWYgKHYxID09PSB2b2lkIDAgfHwgdjEgPT09IG51bGwpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBpZiAodHlwZW9mIHYxID09PSBcIm51bWJlclwiKSB7XG4gICAgaWYgKHR5cGVvZiB2MiAhPT0gXCJudW1iZXJcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHR5cGUgJHt2Mn1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVOdW1iZXJzKHYxLCB2Mik7XG4gIH1cbiAgaWYgKHR5cGVvZiB2MSA9PT0gXCJzdHJpbmdcIikge1xuICAgIGlmICh0eXBlb2YgdjIgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCB0eXBlICR7djJ9YCk7XG4gICAgfVxuICAgIHJldHVybiBjb21wYXJlVVRGOCh2MSwgdjIpO1xuICB9XG4gIGlmICh0eXBlb2YgdjEgPT09IFwiYmlnaW50XCIgfHwgdHlwZW9mIHYxID09PSBcImJvb2xlYW5cIiB8fCB0eXBlb2YgdjEgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gdjEgPCB2MiA/IC0xIDogdjEgPT09IHYyID8gMCA6IDE7XG4gIH1cbiAgaWYgKCFBcnJheS5pc0FycmF5KHYxKSB8fCAhQXJyYXkuaXNBcnJheSh2MikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdHlwZSAke3YxfWApO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdjEubGVuZ3RoICYmIGkgPCB2Mi5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNtcCA9IGNvbXBhcmVBc1R1cGxlcyh2MVtpXSwgdjJbaV0pO1xuICAgIGlmIChjbXAgIT09IDApIHtcbiAgICAgIHJldHVybiBjbXA7XG4gICAgfVxuICB9XG4gIGlmICh2MS5sZW5ndGggPCB2Mi5sZW5ndGgpIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cbiAgaWYgKHYxLmxlbmd0aCA+IHYyLmxlbmd0aCkge1xuICAgIHJldHVybiAxO1xuICB9XG4gIHJldHVybiAwO1xufVxuZnVuY3Rpb24gY29tcGFyZU51bWJlcnModjEsIHYyKSB7XG4gIGlmIChpc05hTih2MSkgfHwgaXNOYU4odjIpKSB7XG4gICAgY29uc3QgYnVmZmVyMSA9IG5ldyBBcnJheUJ1ZmZlcig4KTtcbiAgICBjb25zdCBidWZmZXIyID0gbmV3IEFycmF5QnVmZmVyKDgpO1xuICAgIG5ldyBEYXRhVmlldyhidWZmZXIxKS5zZXRGbG9hdDY0KFxuICAgICAgMCxcbiAgICAgIHYxLFxuICAgICAgLyogbGl0dGxlLWVuZGlhbiAqL1xuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgbmV3IERhdGFWaWV3KGJ1ZmZlcjIpLnNldEZsb2F0NjQoXG4gICAgICAwLFxuICAgICAgdjIsXG4gICAgICAvKiBsaXR0bGUtZW5kaWFuICovXG4gICAgICB0cnVlXG4gICAgKTtcbiAgICBjb25zdCB2MUJpdHMgPSBCaWdJbnQoXG4gICAgICBuZXcgRGF0YVZpZXcoYnVmZmVyMSkuZ2V0QmlnSW50NjQoXG4gICAgICAgIDAsXG4gICAgICAgIC8qIGxpdHRsZS1lbmRpYW4gKi9cbiAgICAgICAgdHJ1ZVxuICAgICAgKVxuICAgICk7XG4gICAgY29uc3QgdjJCaXRzID0gQmlnSW50KFxuICAgICAgbmV3IERhdGFWaWV3KGJ1ZmZlcjIpLmdldEJpZ0ludDY0KFxuICAgICAgICAwLFxuICAgICAgICAvKiBsaXR0bGUtZW5kaWFuICovXG4gICAgICAgIHRydWVcbiAgICAgIClcbiAgICApO1xuICAgIGNvbnN0IHYxU2lnbiA9ICh2MUJpdHMgJiAweDgwMDAwMDAwMDAwMDAwMDBuKSAhPT0gMG47XG4gICAgY29uc3QgdjJTaWduID0gKHYyQml0cyAmIDB4ODAwMDAwMDAwMDAwMDAwMG4pICE9PSAwbjtcbiAgICBpZiAoaXNOYU4odjEpICE9PSBpc05hTih2MikpIHtcbiAgICAgIGlmIChpc05hTih2MSkpIHtcbiAgICAgICAgcmV0dXJuIHYxU2lnbiA/IC0xIDogMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2MlNpZ24gPyAxIDogLTE7XG4gICAgfVxuICAgIGlmICh2MVNpZ24gIT09IHYyU2lnbikge1xuICAgICAgcmV0dXJuIHYxU2lnbiA/IC0xIDogMTtcbiAgICB9XG4gICAgcmV0dXJuIHYxQml0cyA8IHYyQml0cyA/IC0xIDogdjFCaXRzID09PSB2MkJpdHMgPyAwIDogMTtcbiAgfVxuICBpZiAoT2JqZWN0LmlzKHYxLCB2MikpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBpZiAoT2JqZWN0LmlzKHYxLCAtMCkpIHtcbiAgICByZXR1cm4gT2JqZWN0LmlzKHYyLCAwKSA/IC0xIDogLU1hdGguc2lnbih2Mik7XG4gIH1cbiAgaWYgKE9iamVjdC5pcyh2MiwgLTApKSB7XG4gICAgcmV0dXJuIE9iamVjdC5pcyh2MSwgMCkgPyAxIDogTWF0aC5zaWduKHYxKTtcbiAgfVxuICByZXR1cm4gdjEgPCB2MiA/IC0xIDogMTtcbn1cbmZ1bmN0aW9uIG1ha2VDb21wYXJhYmxlKHYpIHtcbiAgaWYgKHYgPT09IHZvaWQgMCkge1xuICAgIHJldHVybiBbMCwgdm9pZCAwXTtcbiAgfVxuICBpZiAodiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBbMSwgbnVsbF07XG4gIH1cbiAgaWYgKHR5cGVvZiB2ID09PSBcImJpZ2ludFwiKSB7XG4gICAgcmV0dXJuIFsyLCB2XTtcbiAgfVxuICBpZiAodHlwZW9mIHYgPT09IFwibnVtYmVyXCIpIHtcbiAgICByZXR1cm4gWzMsIHZdO1xuICB9XG4gIGlmICh0eXBlb2YgdiA9PT0gXCJib29sZWFuXCIpIHtcbiAgICByZXR1cm4gWzQsIHZdO1xuICB9XG4gIGlmICh0eXBlb2YgdiA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBbNSwgdl07XG4gIH1cbiAgaWYgKHYgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBbNiwgQXJyYXkuZnJvbShuZXcgVWludDhBcnJheSh2KSkubWFwKG1ha2VDb21wYXJhYmxlKV07XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodikpIHtcbiAgICByZXR1cm4gWzcsIHYubWFwKG1ha2VDb21wYXJhYmxlKV07XG4gIH1cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHYpLnNvcnQoKTtcbiAgY29uc3QgcG9qbyA9IGtleXMubWFwKChrKSA9PiBbaywgdltrXV0pO1xuICByZXR1cm4gWzgsIHBvam8ubWFwKG1ha2VDb21wYXJhYmxlKV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wYXJlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/compare.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/compare_utf8.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/compare_utf8.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareUTF8: () => (/* binding */ compareUTF8),\n/* harmony export */   greaterThan: () => (/* binding */ greaterThan),\n/* harmony export */   greaterThanEq: () => (/* binding */ greaterThanEq),\n/* harmony export */   lessThan: () => (/* binding */ lessThan),\n/* harmony export */   lessThanEq: () => (/* binding */ lessThanEq),\n/* harmony export */   utf16LengthForCodePoint: () => (/* binding */ utf16LengthForCodePoint)\n/* harmony export */ });\n\nfunction compareUTF8(a, b) {\n  const aLength = a.length;\n  const bLength = b.length;\n  const length = Math.min(aLength, bLength);\n  for (let i = 0; i < length; ) {\n    const aCodePoint = a.codePointAt(i);\n    const bCodePoint = b.codePointAt(i);\n    if (aCodePoint !== bCodePoint) {\n      if (aCodePoint < 128 && bCodePoint < 128) {\n        return aCodePoint - bCodePoint;\n      }\n      const aLength2 = utf8Bytes(aCodePoint, aBytes);\n      const bLength2 = utf8Bytes(bCodePoint, bBytes);\n      return compareArrays(aBytes, aLength2, bBytes, bLength2);\n    }\n    i += utf16LengthForCodePoint(aCodePoint);\n  }\n  return aLength - bLength;\n}\nfunction compareArrays(a, aLength, b, bLength) {\n  const length = Math.min(aLength, bLength);\n  for (let i = 0; i < length; i++) {\n    const aValue = a[i];\n    const bValue = b[i];\n    if (aValue !== bValue) {\n      return aValue - bValue;\n    }\n  }\n  return aLength - bLength;\n}\nfunction utf16LengthForCodePoint(aCodePoint) {\n  return aCodePoint > 65535 ? 2 : 1;\n}\nconst arr = () => Array.from({ length: 4 }, () => 0);\nconst aBytes = arr();\nconst bBytes = arr();\nfunction utf8Bytes(codePoint, bytes) {\n  if (codePoint < 128) {\n    bytes[0] = codePoint;\n    return 1;\n  }\n  let count;\n  let offset;\n  if (codePoint <= 2047) {\n    count = 1;\n    offset = 192;\n  } else if (codePoint <= 65535) {\n    count = 2;\n    offset = 224;\n  } else if (codePoint <= 1114111) {\n    count = 3;\n    offset = 240;\n  } else {\n    throw new Error(\"Invalid code point\");\n  }\n  bytes[0] = (codePoint >> 6 * count) + offset;\n  let i = 1;\n  for (; count > 0; count--) {\n    const temp = codePoint >> 6 * (count - 1);\n    bytes[i++] = 128 | temp & 63;\n  }\n  return i;\n}\nfunction greaterThan(a, b) {\n  return compareUTF8(a, b) > 0;\n}\nfunction greaterThanEq(a, b) {\n  return compareUTF8(a, b) >= 0;\n}\nfunction lessThan(a, b) {\n  return compareUTF8(a, b) < 0;\n}\nfunction lessThanEq(a, b) {\n  return compareUTF8(a, b) <= 0;\n}\n//# sourceMappingURL=compare_utf8.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlX3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDTjtBQUNQO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLCtCQUErQixXQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlX3V0ZjguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVVURjgoYSwgYikge1xuICBjb25zdCBhTGVuZ3RoID0gYS5sZW5ndGg7XG4gIGNvbnN0IGJMZW5ndGggPSBiLmxlbmd0aDtcbiAgY29uc3QgbGVuZ3RoID0gTWF0aC5taW4oYUxlbmd0aCwgYkxlbmd0aCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyApIHtcbiAgICBjb25zdCBhQ29kZVBvaW50ID0gYS5jb2RlUG9pbnRBdChpKTtcbiAgICBjb25zdCBiQ29kZVBvaW50ID0gYi5jb2RlUG9pbnRBdChpKTtcbiAgICBpZiAoYUNvZGVQb2ludCAhPT0gYkNvZGVQb2ludCkge1xuICAgICAgaWYgKGFDb2RlUG9pbnQgPCAxMjggJiYgYkNvZGVQb2ludCA8IDEyOCkge1xuICAgICAgICByZXR1cm4gYUNvZGVQb2ludCAtIGJDb2RlUG9pbnQ7XG4gICAgICB9XG4gICAgICBjb25zdCBhTGVuZ3RoMiA9IHV0ZjhCeXRlcyhhQ29kZVBvaW50LCBhQnl0ZXMpO1xuICAgICAgY29uc3QgYkxlbmd0aDIgPSB1dGY4Qnl0ZXMoYkNvZGVQb2ludCwgYkJ5dGVzKTtcbiAgICAgIHJldHVybiBjb21wYXJlQXJyYXlzKGFCeXRlcywgYUxlbmd0aDIsIGJCeXRlcywgYkxlbmd0aDIpO1xuICAgIH1cbiAgICBpICs9IHV0ZjE2TGVuZ3RoRm9yQ29kZVBvaW50KGFDb2RlUG9pbnQpO1xuICB9XG4gIHJldHVybiBhTGVuZ3RoIC0gYkxlbmd0aDtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVBcnJheXMoYSwgYUxlbmd0aCwgYiwgYkxlbmd0aCkge1xuICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihhTGVuZ3RoLCBiTGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGFWYWx1ZSA9IGFbaV07XG4gICAgY29uc3QgYlZhbHVlID0gYltpXTtcbiAgICBpZiAoYVZhbHVlICE9PSBiVmFsdWUpIHtcbiAgICAgIHJldHVybiBhVmFsdWUgLSBiVmFsdWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBhTGVuZ3RoIC0gYkxlbmd0aDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1dGYxNkxlbmd0aEZvckNvZGVQb2ludChhQ29kZVBvaW50KSB7XG4gIHJldHVybiBhQ29kZVBvaW50ID4gNjU1MzUgPyAyIDogMTtcbn1cbmNvbnN0IGFyciA9ICgpID0+IEFycmF5LmZyb20oeyBsZW5ndGg6IDQgfSwgKCkgPT4gMCk7XG5jb25zdCBhQnl0ZXMgPSBhcnIoKTtcbmNvbnN0IGJCeXRlcyA9IGFycigpO1xuZnVuY3Rpb24gdXRmOEJ5dGVzKGNvZGVQb2ludCwgYnl0ZXMpIHtcbiAgaWYgKGNvZGVQb2ludCA8IDEyOCkge1xuICAgIGJ5dGVzWzBdID0gY29kZVBvaW50O1xuICAgIHJldHVybiAxO1xuICB9XG4gIGxldCBjb3VudDtcbiAgbGV0IG9mZnNldDtcbiAgaWYgKGNvZGVQb2ludCA8PSAyMDQ3KSB7XG4gICAgY291bnQgPSAxO1xuICAgIG9mZnNldCA9IDE5MjtcbiAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPD0gNjU1MzUpIHtcbiAgICBjb3VudCA9IDI7XG4gICAgb2Zmc2V0ID0gMjI0O1xuICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8PSAxMTE0MTExKSB7XG4gICAgY291bnQgPSAzO1xuICAgIG9mZnNldCA9IDI0MDtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvZGUgcG9pbnRcIik7XG4gIH1cbiAgYnl0ZXNbMF0gPSAoY29kZVBvaW50ID4+IDYgKiBjb3VudCkgKyBvZmZzZXQ7XG4gIGxldCBpID0gMTtcbiAgZm9yICg7IGNvdW50ID4gMDsgY291bnQtLSkge1xuICAgIGNvbnN0IHRlbXAgPSBjb2RlUG9pbnQgPj4gNiAqIChjb3VudCAtIDEpO1xuICAgIGJ5dGVzW2krK10gPSAxMjggfCB0ZW1wICYgNjM7XG4gIH1cbiAgcmV0dXJuIGk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ3JlYXRlclRoYW4oYSwgYikge1xuICByZXR1cm4gY29tcGFyZVVURjgoYSwgYikgPiAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdyZWF0ZXJUaGFuRXEoYSwgYikge1xuICByZXR1cm4gY29tcGFyZVVURjgoYSwgYikgPj0gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsZXNzVGhhbihhLCBiKSB7XG4gIHJldHVybiBjb21wYXJlVVRGOChhLCBiKSA8IDA7XG59XG5leHBvcnQgZnVuY3Rpb24gbGVzc1RoYW5FcShhLCBiKSB7XG4gIHJldHVybiBjb21wYXJlVVRGOChhLCBiKSA8PSAwO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcGFyZV91dGY4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/compare_utf8.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexError: () => (/* binding */ ConvexError)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar _a, _b;\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\nclass ConvexError extends (_b = Error, _a = IDENTIFYING_FIELD, _b) {\n  constructor(data) {\n    super(typeof data === \"string\" ? data : (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.stringifyValueForError)(data));\n    __publicField(this, \"name\", \"ConvexError\");\n    __publicField(this, \"data\");\n    __publicField(this, _a, true);\n    this.data = data;\n  }\n}\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBO0FBQ29EO0FBQ3BEO0FBQ087QUFDUDtBQUNBLDRDQUE0QyxpRUFBc0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG52YXIgX2EsIF9iO1xuaW1wb3J0IHsgc3RyaW5naWZ5VmFsdWVGb3JFcnJvciB9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5jb25zdCBJREVOVElGWUlOR19GSUVMRCA9IFN5bWJvbC5mb3IoXCJDb252ZXhFcnJvclwiKTtcbmV4cG9ydCBjbGFzcyBDb252ZXhFcnJvciBleHRlbmRzIChfYiA9IEVycm9yLCBfYSA9IElERU5USUZZSU5HX0ZJRUxELCBfYikge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgc3VwZXIodHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgPyBkYXRhIDogc3RyaW5naWZ5VmFsdWVGb3JFcnJvcihkYXRhKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm5hbWVcIiwgXCJDb252ZXhFcnJvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZGF0YVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIF9hLCB0cnVlKTtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   ConvexError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError),\n/* harmony export */   asObjectValidator: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.asObjectValidator),\n/* harmony export */   compareValues: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_4__.compareValues),\n/* harmony export */   convexToJson: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson),\n/* harmony export */   jsonToConvex: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex),\n/* harmony export */   v: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator.js */ \"(rsc)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(rsc)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/convex/dist/esm/values/errors.js\");\n/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compare.js */ \"(rsc)/./node_modules/convex/dist/esm/values/compare.js\");\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBYTtBQUMyQztBQUNGO0FBQ2hCO0FBQ3BCO0FBQ1U7QUFDaUI7QUFDN0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IHsgY29udmV4VG9Kc29uLCBqc29uVG9Db252ZXggfSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuZXhwb3J0IHsgdiwgYXNPYmplY3RWYWxpZGF0b3IgfSBmcm9tIFwiLi92YWxpZGF0b3IuanNcIjtcbmltcG9ydCAqIGFzIEJhc2U2NCBmcm9tIFwiLi9iYXNlNjQuanNcIjtcbmV4cG9ydCB7IEJhc2U2NCB9O1xuZXhwb3J0ICogZnJvbSBcIi4vZXJyb3JzLmpzXCI7XG5leHBvcnQgeyBjb21wYXJlVmFsdWVzIH0gZnJvbSBcIi4vY29tcGFyZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/validator.js":
/*!**********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validator.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asObjectValidator: () => (/* binding */ asObjectValidator),\n/* harmony export */   isValidator: () => (/* binding */ isValidator),\n/* harmony export */   v: () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var _validators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validators.js */ \"(rsc)/./node_modules/convex/dist/esm/values/validators.js\");\n\n\nfunction isValidator(v2) {\n  return !!v2.isConvexValidator;\n}\nfunction asObjectValidator(obj) {\n  if (isValidator(obj)) {\n    return obj;\n  } else {\n    return v.object(obj);\n  }\n}\nconst v = {\n  /**\n   * Validates that the value corresponds to an ID of a document in given table.\n   * @param tableName The name of the table.\n   */\n  id: (tableName) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VId({\n      isOptional: \"required\",\n      tableName\n    });\n  },\n  /**\n   * Validates that the value is of type Null.\n   */\n  null: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VNull({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Float64 (Number in JS).\n   *\n   * Alias for `v.float64()`\n   */\n  number: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VFloat64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Float64 (Number in JS).\n   */\n  float64: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VFloat64({ isOptional: \"required\" });\n  },\n  /**\n   * @deprecated Use `v.int64()` instead\n   */\n  bigint: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VInt64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Int64 (BigInt in JS).\n   */\n  int64: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VInt64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of type Boolean.\n   */\n  boolean: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VBoolean({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of type String.\n   */\n  string: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VString({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Bytes (constructed in JS via `ArrayBuffer`).\n   */\n  bytes: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VBytes({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is equal to the given literal value.\n   * @param literal The literal value to compare against.\n   */\n  literal: (literal) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VLiteral({ isOptional: \"required\", value: literal });\n  },\n  /**\n   * Validates that the value is an Array of the given element type.\n   * @param element The validator for the elements of the array.\n   */\n  array: (element) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VArray({ isOptional: \"required\", element });\n  },\n  /**\n   * Validates that the value is an Object with the given properties.\n   * @param fields An object specifying the validator for each property.\n   */\n  object: (fields) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VObject({ isOptional: \"required\", fields });\n  },\n  /**\n   * Validates that the value is a Record with keys and values that match the given types.\n   * @param keys The validator for the keys of the record. This cannot contain string literals.\n   * @param values The validator for the values of the record.\n   */\n  record: (keys, values) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VRecord({\n      isOptional: \"required\",\n      key: keys,\n      value: values\n    });\n  },\n  /**\n   * Validates that the value matches one of the given validators.\n   * @param members The validators to match against.\n   */\n  union: (...members) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VUnion({\n      isOptional: \"required\",\n      members\n    });\n  },\n  /**\n   * Does not validate the value.\n   */\n  any: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VAny({ isOptional: \"required\" });\n  },\n  /**\n   * Allows not specifying a value for a property in an Object.\n   * @param value The property value validator to make optional.\n   *\n   * ```typescript\n   * const objectWithOptionalFields = v.object({\n   *   requiredField: v.string(),\n   *   optionalField: v.optional(v.string()),\n   * });\n   * ```\n   */\n  optional: (value) => {\n    return value.asOptional();\n  }\n};\n//# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhO0FBZVk7QUFDbEI7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0NBQUc7QUFDbEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFLLEdBQUcsd0JBQXdCO0FBQy9DLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9EQUFRLEdBQUcsd0JBQXdCO0FBQ2xELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVEsR0FBRyx3QkFBd0I7QUFDbEQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrREFBTSxHQUFHLHdCQUF3QjtBQUNoRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsd0JBQXdCO0FBQ2hELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVEsR0FBRyx3QkFBd0I7QUFDbEQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtREFBTyxHQUFHLHdCQUF3QjtBQUNqRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsd0JBQXdCO0FBQ2hELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvREFBUSxHQUFHLHdDQUF3QztBQUNsRSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU0sR0FBRyxpQ0FBaUM7QUFDekQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1EQUFPLEdBQUcsZ0NBQWdDO0FBQ3pELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1EQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU07QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFJLEdBQUcsd0JBQXdCO0FBQzlDLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQge1xuICBWQW55LFxuICBWQXJyYXksXG4gIFZCb29sZWFuLFxuICBWQnl0ZXMsXG4gIFZGbG9hdDY0LFxuICBWSWQsXG4gIFZJbnQ2NCxcbiAgVkxpdGVyYWwsXG4gIFZOdWxsLFxuICBWT2JqZWN0LFxuICBWUmVjb3JkLFxuICBWU3RyaW5nLFxuICBWVW5pb25cbn0gZnJvbSBcIi4vdmFsaWRhdG9ycy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRhdG9yKHYyKSB7XG4gIHJldHVybiAhIXYyLmlzQ29udmV4VmFsaWRhdG9yO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzT2JqZWN0VmFsaWRhdG9yKG9iaikge1xuICBpZiAoaXNWYWxpZGF0b3Iob2JqKSkge1xuICAgIHJldHVybiBvYmo7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHYub2JqZWN0KG9iaik7XG4gIH1cbn1cbmV4cG9ydCBjb25zdCB2ID0ge1xuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGNvcnJlc3BvbmRzIHRvIGFuIElEIG9mIGEgZG9jdW1lbnQgaW4gZ2l2ZW4gdGFibGUuXG4gICAqIEBwYXJhbSB0YWJsZU5hbWUgVGhlIG5hbWUgb2YgdGhlIHRhYmxlLlxuICAgKi9cbiAgaWQ6ICh0YWJsZU5hbWUpID0+IHtcbiAgICByZXR1cm4gbmV3IFZJZCh7XG4gICAgICBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsXG4gICAgICB0YWJsZU5hbWVcbiAgICB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiB0eXBlIE51bGwuXG4gICAqL1xuICBudWxsOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWTnVsbCh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiBDb252ZXggdHlwZSBGbG9hdDY0IChOdW1iZXIgaW4gSlMpLlxuICAgKlxuICAgKiBBbGlhcyBmb3IgYHYuZmxvYXQ2NCgpYFxuICAgKi9cbiAgbnVtYmVyOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWRmxvYXQ2NCh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiBDb252ZXggdHlwZSBGbG9hdDY0IChOdW1iZXIgaW4gSlMpLlxuICAgKi9cbiAgZmxvYXQ2NDogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkZsb2F0NjQoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHYuaW50NjQoKWAgaW5zdGVhZFxuICAgKi9cbiAgYmlnaW50OiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWSW50NjQoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgb2YgQ29udmV4IHR5cGUgSW50NjQgKEJpZ0ludCBpbiBKUykuXG4gICAqL1xuICBpbnQ2NDogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkludDY0KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIHR5cGUgQm9vbGVhbi5cbiAgICovXG4gIGJvb2xlYW46ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZCb29sZWFuKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIHR5cGUgU3RyaW5nLlxuICAgKi9cbiAgc3RyaW5nOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWU3RyaW5nKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIENvbnZleCB0eXBlIEJ5dGVzIChjb25zdHJ1Y3RlZCBpbiBKUyB2aWEgYEFycmF5QnVmZmVyYCkuXG4gICAqL1xuICBieXRlczogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkJ5dGVzKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIGVxdWFsIHRvIHRoZSBnaXZlbiBsaXRlcmFsIHZhbHVlLlxuICAgKiBAcGFyYW0gbGl0ZXJhbCBUaGUgbGl0ZXJhbCB2YWx1ZSB0byBjb21wYXJlIGFnYWluc3QuXG4gICAqL1xuICBsaXRlcmFsOiAobGl0ZXJhbCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkxpdGVyYWwoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsIHZhbHVlOiBsaXRlcmFsIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIGFuIEFycmF5IG9mIHRoZSBnaXZlbiBlbGVtZW50IHR5cGUuXG4gICAqIEBwYXJhbSBlbGVtZW50IFRoZSB2YWxpZGF0b3IgZm9yIHRoZSBlbGVtZW50cyBvZiB0aGUgYXJyYXkuXG4gICAqL1xuICBhcnJheTogKGVsZW1lbnQpID0+IHtcbiAgICByZXR1cm4gbmV3IFZBcnJheSh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiwgZWxlbWVudCB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBhbiBPYmplY3Qgd2l0aCB0aGUgZ2l2ZW4gcHJvcGVydGllcy5cbiAgICogQHBhcmFtIGZpZWxkcyBBbiBvYmplY3Qgc3BlY2lmeWluZyB0aGUgdmFsaWRhdG9yIGZvciBlYWNoIHByb3BlcnR5LlxuICAgKi9cbiAgb2JqZWN0OiAoZmllbGRzKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWT2JqZWN0KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiLCBmaWVsZHMgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgYSBSZWNvcmQgd2l0aCBrZXlzIGFuZCB2YWx1ZXMgdGhhdCBtYXRjaCB0aGUgZ2l2ZW4gdHlwZXMuXG4gICAqIEBwYXJhbSBrZXlzIFRoZSB2YWxpZGF0b3IgZm9yIHRoZSBrZXlzIG9mIHRoZSByZWNvcmQuIFRoaXMgY2Fubm90IGNvbnRhaW4gc3RyaW5nIGxpdGVyYWxzLlxuICAgKiBAcGFyYW0gdmFsdWVzIFRoZSB2YWxpZGF0b3IgZm9yIHRoZSB2YWx1ZXMgb2YgdGhlIHJlY29yZC5cbiAgICovXG4gIHJlY29yZDogKGtleXMsIHZhbHVlcykgPT4ge1xuICAgIHJldHVybiBuZXcgVlJlY29yZCh7XG4gICAgICBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsXG4gICAgICBrZXk6IGtleXMsXG4gICAgICB2YWx1ZTogdmFsdWVzXG4gICAgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgbWF0Y2hlcyBvbmUgb2YgdGhlIGdpdmVuIHZhbGlkYXRvcnMuXG4gICAqIEBwYXJhbSBtZW1iZXJzIFRoZSB2YWxpZGF0b3JzIHRvIG1hdGNoIGFnYWluc3QuXG4gICAqL1xuICB1bmlvbjogKC4uLm1lbWJlcnMpID0+IHtcbiAgICByZXR1cm4gbmV3IFZVbmlvbih7XG4gICAgICBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsXG4gICAgICBtZW1iZXJzXG4gICAgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBEb2VzIG5vdCB2YWxpZGF0ZSB0aGUgdmFsdWUuXG4gICAqL1xuICBhbnk6ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZBbnkoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBBbGxvd3Mgbm90IHNwZWNpZnlpbmcgYSB2YWx1ZSBmb3IgYSBwcm9wZXJ0eSBpbiBhbiBPYmplY3QuXG4gICAqIEBwYXJhbSB2YWx1ZSBUaGUgcHJvcGVydHkgdmFsdWUgdmFsaWRhdG9yIHRvIG1ha2Ugb3B0aW9uYWwuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3Qgb2JqZWN0V2l0aE9wdGlvbmFsRmllbGRzID0gdi5vYmplY3Qoe1xuICAgKiAgIHJlcXVpcmVkRmllbGQ6IHYuc3RyaW5nKCksXG4gICAqICAgb3B0aW9uYWxGaWVsZDogdi5vcHRpb25hbCh2LnN0cmluZygpKSxcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgb3B0aW9uYWw6ICh2YWx1ZSkgPT4ge1xuICAgIHJldHVybiB2YWx1ZS5hc09wdGlvbmFsKCk7XG4gIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/validator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/validators.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validators.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VAny: () => (/* binding */ VAny),\n/* harmony export */   VArray: () => (/* binding */ VArray),\n/* harmony export */   VBoolean: () => (/* binding */ VBoolean),\n/* harmony export */   VBytes: () => (/* binding */ VBytes),\n/* harmony export */   VFloat64: () => (/* binding */ VFloat64),\n/* harmony export */   VId: () => (/* binding */ VId),\n/* harmony export */   VInt64: () => (/* binding */ VInt64),\n/* harmony export */   VLiteral: () => (/* binding */ VLiteral),\n/* harmony export */   VNull: () => (/* binding */ VNull),\n/* harmony export */   VObject: () => (/* binding */ VObject),\n/* harmony export */   VRecord: () => (/* binding */ VRecord),\n/* harmony export */   VString: () => (/* binding */ VString),\n/* harmony export */   VUnion: () => (/* binding */ VUnion)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(rsc)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nclass BaseValidator {\n  constructor({ isOptional }) {\n    /**\n     * Only for TypeScript, the TS type of the JS values validated\n     * by this validator.\n     */\n    __publicField(this, \"type\");\n    /**\n     * Only for TypeScript, if this an Object validator, then\n     * this is the TS type of its property names.\n     */\n    __publicField(this, \"fieldPaths\");\n    /**\n     * Whether this is an optional Object property value validator.\n     */\n    __publicField(this, \"isOptional\");\n    /**\n     * Always `\"true\"`.\n     */\n    __publicField(this, \"isConvexValidator\");\n    this.isOptional = isOptional;\n    this.isConvexValidator = true;\n  }\n  /** @deprecated - use isOptional instead */\n  get optional() {\n    return this.isOptional === \"optional\" ? true : false;\n  }\n}\nclass VId extends BaseValidator {\n  /**\n   * Usually you'd use `v.id(tableName)` instead.\n   */\n  constructor({\n    isOptional,\n    tableName\n  }) {\n    super({ isOptional });\n    /**\n     * The name of the table that the validated IDs must belong to.\n     */\n    __publicField(this, \"tableName\");\n    /**\n     * The kind of validator, `\"id\"`.\n     */\n    __publicField(this, \"kind\", \"id\");\n    this.tableName = tableName;\n  }\n  /** @internal */\n  get json() {\n    return { type: \"id\", tableName: this.tableName };\n  }\n  /** @internal */\n  asOptional() {\n    return new VId({\n      isOptional: \"optional\",\n      tableName: this.tableName\n    });\n  }\n}\nclass VFloat64 extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"float64\"`.\n     */\n    __publicField(this, \"kind\", \"float64\");\n  }\n  /** @internal */\n  get json() {\n    return { type: \"number\" };\n  }\n  /** @internal */\n  asOptional() {\n    return new VFloat64({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VInt64 extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"int64\"`.\n     */\n    __publicField(this, \"kind\", \"int64\");\n  }\n  /** @internal */\n  get json() {\n    return { type: \"bigint\" };\n  }\n  /** @internal */\n  asOptional() {\n    return new VInt64({ isOptional: \"optional\" });\n  }\n}\nclass VBoolean extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"boolean\"`.\n     */\n    __publicField(this, \"kind\", \"boolean\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VBoolean({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VBytes extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"bytes\"`.\n     */\n    __publicField(this, \"kind\", \"bytes\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VBytes({ isOptional: \"optional\" });\n  }\n}\nclass VString extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"string\"`.\n     */\n    __publicField(this, \"kind\", \"string\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VString({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VNull extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"null\"`.\n     */\n    __publicField(this, \"kind\", \"null\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VNull({ isOptional: \"optional\" });\n  }\n}\nclass VAny extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"any\"`.\n     */\n    __publicField(this, \"kind\", \"any\");\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VAny({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VObject extends BaseValidator {\n  /**\n   * Usually you'd use `v.object({ ... })` instead.\n   */\n  constructor({\n    isOptional,\n    fields\n  }) {\n    super({ isOptional });\n    /**\n     * An object with the validator for each property.\n     */\n    __publicField(this, \"fields\");\n    /**\n     * The kind of validator, `\"object\"`.\n     */\n    __publicField(this, \"kind\", \"object\");\n    this.fields = fields;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: globalThis.Object.fromEntries(\n        globalThis.Object.entries(this.fields).map(([k, v]) => [\n          k,\n          {\n            fieldType: v.json,\n            optional: v.isOptional === \"optional\" ? true : false\n          }\n        ])\n      )\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VObject({\n      isOptional: \"optional\",\n      fields: this.fields\n    });\n  }\n}\nclass VLiteral extends BaseValidator {\n  /**\n   * Usually you'd use `v.literal(value)` instead.\n   */\n  constructor({ isOptional, value }) {\n    super({ isOptional });\n    /**\n     * The value that the validated values must be equal to.\n     */\n    __publicField(this, \"value\");\n    /**\n     * The kind of validator, `\"literal\"`.\n     */\n    __publicField(this, \"kind\", \"literal\");\n    this.value = value;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(this.value)\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VLiteral({\n      isOptional: \"optional\",\n      value: this.value\n    });\n  }\n}\nclass VArray extends BaseValidator {\n  /**\n   * Usually you'd use `v.array(element)` instead.\n   */\n  constructor({\n    isOptional,\n    element\n  }) {\n    super({ isOptional });\n    /**\n     * The validator for the elements of the array.\n     */\n    __publicField(this, \"element\");\n    /**\n     * The kind of validator, `\"array\"`.\n     */\n    __publicField(this, \"kind\", \"array\");\n    this.element = element;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: this.element.json\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VArray({\n      isOptional: \"optional\",\n      element: this.element\n    });\n  }\n}\nclass VRecord extends BaseValidator {\n  /**\n   * Usually you'd use `v.record(key, value)` instead.\n   */\n  constructor({\n    isOptional,\n    key,\n    value\n  }) {\n    super({ isOptional });\n    /**\n     * The validator for the keys of the record.\n     */\n    __publicField(this, \"key\");\n    /**\n     * The validator for the values of the record.\n     */\n    __publicField(this, \"value\");\n    /**\n     * The kind of validator, `\"record\"`.\n     */\n    __publicField(this, \"kind\", \"record\");\n    if (key.isOptional === \"optional\") {\n      throw new Error(\"Record validator cannot have optional keys\");\n    }\n    if (value.isOptional === \"optional\") {\n      throw new Error(\"Record validator cannot have optional values\");\n    }\n    this.key = key;\n    this.value = value;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      // This cast is needed because TypeScript thinks the key type is too wide\n      keys: this.key.json,\n      values: {\n        fieldType: this.value.json,\n        optional: false\n      }\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VRecord({\n      isOptional: \"optional\",\n      key: this.key,\n      value: this.value\n    });\n  }\n}\nclass VUnion extends BaseValidator {\n  /**\n   * Usually you'd use `v.union(...members)` instead.\n   */\n  constructor({ isOptional, members }) {\n    super({ isOptional });\n    /**\n     * The array of validators, one of which must match the value.\n     */\n    __publicField(this, \"members\");\n    /**\n     * The kind of validator, `\"union\"`.\n     */\n    __publicField(this, \"kind\", \"union\");\n    this.members = members;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: this.members.map((v) => v.json)\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VUnion({\n      isOptional: \"optional\",\n      members: this.members\n    });\n  }\n}\n//# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/validators.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/convex/dist/esm/values/value.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/value.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToBigInt: () => (/* binding */ base64ToBigInt),\n/* harmony export */   bigIntToBase64: () => (/* binding */ bigIntToBase64),\n/* harmony export */   convexOrUndefinedToJson: () => (/* binding */ convexOrUndefinedToJson),\n/* harmony export */   convexToJson: () => (/* binding */ convexToJson),\n/* harmony export */   jsonToConvex: () => (/* binding */ jsonToConvex),\n/* harmony export */   modernBase64ToBigInt: () => (/* binding */ modernBase64ToBigInt),\n/* harmony export */   modernBigIntToBase64: () => (/* binding */ modernBigIntToBase64),\n/* harmony export */   patchValueToJson: () => (/* binding */ patchValueToJson),\n/* harmony export */   slowBase64ToBigInt: () => (/* binding */ slowBase64ToBigInt),\n/* harmony export */   slowBigIntToBase64: () => (/* binding */ slowBigIntToBase64),\n/* harmony export */   stringifyValueForError: () => (/* binding */ stringifyValueForError)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(rsc)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(rsc)/./node_modules/convex/dist/esm/common/index.js\");\n\n\n\nconst LITTLE_ENDIAN = true;\nconst MIN_INT64 = BigInt(\"-9223372036854775808\");\nconst MAX_INT64 = BigInt(\"9223372036854775807\");\nconst ZERO = BigInt(\"0\");\nconst EIGHT = BigInt(\"8\");\nconst TWOFIFTYSIX = BigInt(\"256\");\nfunction isSpecial(n) {\n  return Number.isNaN(n) || !Number.isFinite(n) || Object.is(n, -0);\n}\nfunction slowBigIntToBase64(value) {\n  if (value < ZERO) {\n    value -= MIN_INT64 + MIN_INT64;\n  }\n  let hex = value.toString(16);\n  if (hex.length % 2 === 1) hex = \"0\" + hex;\n  const bytes = new Uint8Array(new ArrayBuffer(8));\n  let i = 0;\n  for (const hexByte of hex.match(/.{2}/g).reverse()) {\n    bytes.set([parseInt(hexByte, 16)], i++);\n    value >>= EIGHT;\n  }\n  return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(bytes);\n}\nfunction slowBase64ToBigInt(encoded) {\n  const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`\n    );\n  }\n  let value = ZERO;\n  let power = ZERO;\n  for (const byte of integerBytes) {\n    value += BigInt(byte) * TWOFIFTYSIX ** power;\n    power++;\n  }\n  if (value > MAX_INT64) {\n    value += MIN_INT64 + MIN_INT64;\n  }\n  return value;\n}\nfunction modernBigIntToBase64(value) {\n  if (value < MIN_INT64 || MAX_INT64 < value) {\n    throw new Error(\n      `BigInt ${value} does not fit into a 64-bit signed integer.`\n    );\n  }\n  const buffer = new ArrayBuffer(8);\n  new DataView(buffer).setBigInt64(0, value, true);\n  return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer));\n}\nfunction modernBase64ToBigInt(encoded) {\n  const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`\n    );\n  }\n  const intBytesView = new DataView(integerBytes.buffer);\n  return intBytesView.getBigInt64(0, true);\n}\nconst bigIntToBase64 = DataView.prototype.setBigInt64 ? modernBigIntToBase64 : slowBigIntToBase64;\nconst base64ToBigInt = DataView.prototype.getBigInt64 ? modernBase64ToBigInt : slowBase64ToBigInt;\nconst MAX_IDENTIFIER_LEN = 1024;\nfunction validateObjectField(k) {\n  if (k.length > MAX_IDENTIFIER_LEN) {\n    throw new Error(\n      `Field name ${k} exceeds maximum field name length ${MAX_IDENTIFIER_LEN}.`\n    );\n  }\n  if (k.startsWith(\"$\")) {\n    throw new Error(`Field name ${k} starts with a '$', which is reserved.`);\n  }\n  for (let i = 0; i < k.length; i += 1) {\n    const charCode = k.charCodeAt(i);\n    if (charCode < 32 || charCode >= 127) {\n      throw new Error(\n        `Field name ${k} has invalid character '${k[i]}': Field names can only contain non-control ASCII characters`\n      );\n    }\n  }\n}\nfunction jsonToConvex(value) {\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map((value2) => jsonToConvex(value2));\n  }\n  if (typeof value !== \"object\") {\n    throw new Error(`Unexpected type of ${value}`);\n  }\n  const entries = Object.entries(value);\n  if (entries.length === 1) {\n    const key = entries[0][0];\n    if (key === \"$bytes\") {\n      if (typeof value.$bytes !== \"string\") {\n        throw new Error(`Malformed $bytes field on ${value}`);\n      }\n      return _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$bytes).buffer;\n    }\n    if (key === \"$integer\") {\n      if (typeof value.$integer !== \"string\") {\n        throw new Error(`Malformed $integer field on ${value}`);\n      }\n      return base64ToBigInt(value.$integer);\n    }\n    if (key === \"$float\") {\n      if (typeof value.$float !== \"string\") {\n        throw new Error(`Malformed $float field on ${value}`);\n      }\n      const floatBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$float);\n      if (floatBytes.byteLength !== 8) {\n        throw new Error(\n          `Received ${floatBytes.byteLength} bytes, expected 8 for $float`\n        );\n      }\n      const floatBytesView = new DataView(floatBytes.buffer);\n      const float = floatBytesView.getFloat64(0, LITTLE_ENDIAN);\n      if (!isSpecial(float)) {\n        throw new Error(`Float ${float} should be encoded as a number`);\n      }\n      return float;\n    }\n    if (key === \"$set\") {\n      throw new Error(\n        `Received a Set which is no longer supported as a Convex type.`\n      );\n    }\n    if (key === \"$map\") {\n      throw new Error(\n        `Received a Map which is no longer supported as a Convex type.`\n      );\n    }\n  }\n  const out = {};\n  for (const [k, v] of Object.entries(value)) {\n    validateObjectField(k);\n    out[k] = jsonToConvex(v);\n  }\n  return out;\n}\nfunction stringifyValueForError(value) {\n  return JSON.stringify(value, (_key, value2) => {\n    if (value2 === void 0) {\n      return \"undefined\";\n    }\n    if (typeof value2 === \"bigint\") {\n      return `${value2.toString()}n`;\n    }\n    return value2;\n  });\n}\nfunction convexToJsonInternal(value, originalValue, context, includeTopLevelUndefined) {\n  if (value === void 0) {\n    const contextText = context && ` (present at path ${context} in original object ${stringifyValueForError(\n      originalValue\n    )})`;\n    throw new Error(\n      `undefined is not a valid Convex value${contextText}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`\n    );\n  }\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"bigint\") {\n    if (value < MIN_INT64 || MAX_INT64 < value) {\n      throw new Error(\n        `BigInt ${value} does not fit into a 64-bit signed integer.`\n      );\n    }\n    return { $integer: bigIntToBase64(value) };\n  }\n  if (typeof value === \"number\") {\n    if (isSpecial(value)) {\n      const buffer = new ArrayBuffer(8);\n      new DataView(buffer).setFloat64(0, value, LITTLE_ENDIAN);\n      return { $float: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer)) };\n    } else {\n      return value;\n    }\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (value instanceof ArrayBuffer) {\n    return { $bytes: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(value)) };\n  }\n  if (Array.isArray(value)) {\n    return value.map(\n      (value2, i) => convexToJsonInternal(value2, originalValue, context + `[${i}]`, false)\n    );\n  }\n  if (value instanceof Set) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Set\", [...value], originalValue)\n    );\n  }\n  if (value instanceof Map) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Map\", [...value], originalValue)\n    );\n  }\n  if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isSimpleObject)(value)) {\n    const theType = value?.constructor?.name;\n    const typeName = theType ? `${theType} ` : \"\";\n    throw new Error(\n      errorMessageForUnsupportedType(context, typeName, value, originalValue)\n    );\n  }\n  const out = {};\n  const entries = Object.entries(value);\n  entries.sort(([k1, _v1], [k2, _v2]) => k1 === k2 ? 0 : k1 < k2 ? -1 : 1);\n  for (const [k, v] of entries) {\n    if (v !== void 0) {\n      validateObjectField(k);\n      out[k] = convexToJsonInternal(v, originalValue, context + `.${k}`, false);\n    } else if (includeTopLevelUndefined) {\n      validateObjectField(k);\n      out[k] = convexOrUndefinedToJsonInternal(\n        v,\n        originalValue,\n        context + `.${k}`\n      );\n    }\n  }\n  return out;\n}\nfunction errorMessageForUnsupportedType(context, typeName, value, originalValue) {\n  if (context) {\n    return `${typeName}${stringifyValueForError(\n      value\n    )} is not a supported Convex type (present at path ${context} in original object ${stringifyValueForError(\n      originalValue\n    )}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`;\n  } else {\n    return `${typeName}${stringifyValueForError(\n      value\n    )} is not a supported Convex type.`;\n  }\n}\nfunction convexOrUndefinedToJsonInternal(value, originalValue, context) {\n  if (value === void 0) {\n    return { $undefined: null };\n  } else {\n    if (originalValue === void 0) {\n      throw new Error(\n        `Programming error. Current value is ${stringifyValueForError(\n          value\n        )} but original value is undefined`\n      );\n    }\n    return convexToJsonInternal(value, originalValue, context, false);\n  }\n}\nfunction convexToJson(value) {\n  return convexToJsonInternal(value, value, \"\", false);\n}\nfunction convexOrUndefinedToJson(value) {\n  return convexOrUndefinedToJsonInternal(value, value, \"\");\n}\nfunction patchValueToJson(value) {\n  return convexToJsonInternal(value, value, \"\", true);\n}\n//# sourceMappingURL=value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/convex/dist/esm/values/value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/http_client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/http_client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexHttpClient: () => (/* binding */ ConvexHttpClient),\n/* harmony export */   STATUS_CODE_BAD_REQUEST: () => (/* binding */ STATUS_CODE_BAD_REQUEST),\n/* harmony export */   STATUS_CODE_OK: () => (/* binding */ STATUS_CODE_OK),\n/* harmony export */   STATUS_CODE_UDF_FAILED: () => (/* binding */ STATUS_CODE_UDF_FAILED),\n/* harmony export */   setFetch: () => (/* binding */ setFetch)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nconst STATUS_CODE_OK = 200;\nconst STATUS_CODE_BAD_REQUEST = 400;\nconst STATUS_CODE_UDF_FAILED = 560;\nlet specifiedFetch = void 0;\nfunction setFetch(f) {\n  specifiedFetch = f;\n}\nclass ConvexHttpClient {\n  /**\n   * Create a new {@link ConvexHttpClient}.\n   *\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - An object of options.\n   * - `skipConvexDeploymentUrlCheck` - Skip validating that the Convex deployment URL looks like\n   * `https://happy-animal-123.convex.cloud` or localhost. This can be useful if running a self-hosted\n   * Convex backend that uses a different URL.\n   * - `logger` - A logger. If not provided, logs to the console.\n   * You can construct your own logger to customize logging to log elsewhere\n   * or not log at all.\n   */\n  constructor(address, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"adminAuth\");\n    __publicField(this, \"encodedTsPromise\");\n    __publicField(this, \"debug\");\n    __publicField(this, \"fetchOptions\");\n    __publicField(this, \"logger\");\n    if (typeof options === \"boolean\") {\n      throw new Error(\n        \"skipConvexDeploymentUrlCheck as the second argument is no longer supported. Please pass an options object, `{ skipConvexDeploymentUrlCheck: true }`.\"\n      );\n    }\n    const opts = options ?? {};\n    if (opts.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.validateDeploymentUrl)(address);\n    }\n    this.logger = options?.logger === false ? (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.instantiateNoopLogger)({ verbose: false }) : options?.logger !== true && options?.logger ? options.logger : (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.instantiateDefaultLogger)({ verbose: false });\n    this.address = address;\n    this.debug = true;\n  }\n  /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   * @deprecated Use url, which returns the url without /api at the end.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */\n  backendUrl() {\n    return `${this.address}/api`;\n  }\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */\n  setAuth(value) {\n    this.clearAuth();\n    this.auth = value;\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, actingAsIdentity) {\n    this.clearAuth();\n    if (actingAsIdentity !== void 0) {\n      const bytes = new TextEncoder().encode(JSON.stringify(actingAsIdentity));\n      const actingAsIdentityEncoded = btoa(String.fromCodePoint(...bytes));\n      this.adminAuth = `${token}:${actingAsIdentityEncoded}`;\n    } else {\n      this.adminAuth = token;\n    }\n  }\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.auth = void 0;\n    this.adminAuth = void 0;\n  }\n  /**\n   * Sets whether the result log lines should be printed on the console or not.\n   *\n   * @internal\n   */\n  setDebug(debug) {\n    this.debug = debug;\n  }\n  /**\n   * Used to customize the fetch behavior in some runtimes.\n   *\n   * @internal\n   */\n  setFetchOptions(fetchOptions) {\n    this.fetchOptions = fetchOptions;\n  }\n  /**\n   * This API is experimental: it may change or disappear.\n   *\n   * Execute a Convex query function at the same timestamp as every other\n   * consistent query execution run by this HTTP client.\n   *\n   * This doesn't make sense for long-lived ConvexHttpClients as Convex\n   * backends can read a limited amount into the past: beyond 30 seconds\n   * in the past may not be available.\n   *\n   * Create a new client to use a consistent time.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   *\n   * @deprecated This API is experimental: it may change or disappear.\n   */\n  async consistentQuery(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const timestampPromise = this.getTimestamp();\n    return await this.queryInner(query, queryArgs, { timestampPromise });\n  }\n  async getTimestamp() {\n    if (this.encodedTsPromise) {\n      return this.encodedTsPromise;\n    }\n    return this.encodedTsPromise = this.getTimestampInner();\n  }\n  async getTimestampInner() {\n    const localFetch = specifiedFetch || fetch;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    const response = await localFetch(`${this.address}/api/query_ts`, {\n      ...this.fetchOptions,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok) {\n      throw new Error(await response.text());\n    }\n    const { ts } = await response.json();\n    return ts;\n  }\n  /**\n   * Execute a Convex query function.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */\n  async query(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    return await this.queryInner(query, queryArgs, {});\n  }\n  async queryInner(query, queryArgs, options) {\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    const args = [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(queryArgs)];\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const timestamp = options.timestampPromise ? await options.timestampPromise : void 0;\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args,\n      ...timestamp ? { ts: timestamp } : {}\n    });\n    const endpoint = timestamp ? `${this.address}/api/query_at_ts` : `${this.address}/api/query`;\n    const response = await localFetch(endpoint, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"query\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex mutation function.\n   *\n   * @param name - The name of the mutation.\n   * @param args - The arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation(mutation, ...args) {\n    const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(mutation);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(mutationArgs)]\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/mutation`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"mutation\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex action function.\n   *\n   * @param name - The name of the action.\n   * @param args - The arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action(action, ...args) {\n    const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(action);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(actionArgs)]\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/action`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"action\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex function of an unknown type.\n   *\n   * @param name - The name of the function.\n   * @param args - The arguments object for the function. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the function's result.\n   *\n   * @internal\n   */\n  async function(anyFunction, componentPath, ...args) {\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = typeof anyFunction === \"string\" ? anyFunction : (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(anyFunction);\n    const body = JSON.stringify({\n      componentPath,\n      path: name,\n      format: \"convex_encoded_json\",\n      args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(functionArgs)\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/function`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"any\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n}\nfunction forwardErrorData(errorData, error) {\n  error.data = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(errorData);\n  return error;\n}\n//# sourceMappingURL=http_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/index-node.js":
/*!************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/index-node.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* reexport safe */ _sync_client_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient),\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_node_js__WEBPACK_IMPORTED_MODULE_1__.ConvexClient),\n/* harmony export */   ConvexHttpClient: () => (/* reexport safe */ _http_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHttpClient)\n/* harmony export */ });\n/* harmony import */ var _sync_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sync/client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\");\n/* harmony import */ var _simple_client_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simple_client-node.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/simple_client-node.js\");\n/* harmony import */ var _http_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXgtbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUN1QztBQUNHO0FBQ0g7QUFDcEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9pbmRleC1ub2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IHsgQmFzZUNvbnZleENsaWVudCB9IGZyb20gXCIuL3N5bmMvY2xpZW50LmpzXCI7XG5leHBvcnQgeyBDb252ZXhDbGllbnQgfSBmcm9tIFwiLi9zaW1wbGVfY2xpZW50LW5vZGUuanNcIjtcbmV4cG9ydCB7IENvbnZleEh0dHBDbGllbnQgfSBmcm9tIFwiLi9odHRwX2NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/index-node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* reexport safe */ _sync_client_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient),\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexClient),\n/* harmony export */   ConvexHttpClient: () => (/* reexport safe */ _http_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHttpClient)\n/* harmony export */ });\n/* harmony import */ var _sync_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sync/client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\");\n/* harmony import */ var _simple_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simple_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\");\n/* harmony import */ var _http_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDdUM7QUFDRjtBQUNFO0FBQ3BEIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgeyBCYXNlQ29udmV4Q2xpZW50IH0gZnJvbSBcIi4vc3luYy9jbGllbnQuanNcIjtcbmV4cG9ydCB7IENvbnZleENsaWVudCB9IGZyb20gXCIuL3NpbXBsZV9jbGllbnQuanNcIjtcbmV4cG9ydCB7IENvbnZleEh0dHBDbGllbnQgfSBmcm9tIFwiLi9odHRwX2NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/logging.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/logging.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   createHybridErrorStacktrace: () => (/* binding */ createHybridErrorStacktrace),\n/* harmony export */   forwardData: () => (/* binding */ forwardData),\n/* harmony export */   instantiateDefaultLogger: () => (/* binding */ instantiateDefaultLogger),\n/* harmony export */   instantiateNoopLogger: () => (/* binding */ instantiateNoopLogger),\n/* harmony export */   logFatalError: () => (/* binding */ logFatalError),\n/* harmony export */   logForFunction: () => (/* binding */ logForFunction)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\nfunction prefix_for_source(source) {\n  switch (source) {\n    case \"query\":\n      return \"Q\";\n    case \"mutation\":\n      return \"M\";\n    case \"action\":\n      return \"A\";\n    case \"any\":\n      return \"?\";\n  }\n}\nclass Logger {\n  constructor(options) {\n    __publicField(this, \"_onLogLineFuncs\");\n    __publicField(this, \"_verbose\");\n    this._onLogLineFuncs = {};\n    this._verbose = options.verbose;\n  }\n  addLogLineListener(func) {\n    let id = Math.random().toString(36).substring(2, 15);\n    for (let i = 0; i < 10; i++) {\n      if (this._onLogLineFuncs[id] === void 0) {\n        break;\n      }\n      id = Math.random().toString(36).substring(2, 15);\n    }\n    this._onLogLineFuncs[id] = func;\n    return () => {\n      delete this._onLogLineFuncs[id];\n    };\n  }\n  logVerbose(...args) {\n    if (this._verbose) {\n      for (const func of Object.values(this._onLogLineFuncs)) {\n        func(\"debug\", `${(/* @__PURE__ */ new Date()).toISOString()}`, ...args);\n      }\n    }\n  }\n  log(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"info\", ...args);\n    }\n  }\n  warn(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"warn\", ...args);\n    }\n  }\n  error(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"error\", ...args);\n    }\n  }\n}\nfunction instantiateDefaultLogger(options) {\n  const logger = new Logger(options);\n  logger.addLogLineListener((level, ...args) => {\n    switch (level) {\n      case \"debug\":\n        console.debug(...args);\n        break;\n      case \"info\":\n        console.log(...args);\n        break;\n      case \"warn\":\n        console.warn(...args);\n        break;\n      case \"error\":\n        console.error(...args);\n        break;\n      default: {\n        const _typecheck = level;\n        console.log(...args);\n      }\n    }\n  });\n  return logger;\n}\nfunction instantiateNoopLogger(options) {\n  return new Logger(options);\n}\nfunction logForFunction(logger, type, source, udfPath, message) {\n  const prefix = prefix_for_source(source);\n  if (typeof message === \"object\") {\n    message = `ConvexError ${JSON.stringify(message.errorData, null, 2)}`;\n  }\n  if (type === \"info\") {\n    const match = message.match(/^\\[.*?\\] /);\n    if (match === null) {\n      logger.error(\n        `[CONVEX ${prefix}(${udfPath})] Could not parse console.log`\n      );\n      return;\n    }\n    const level = message.slice(1, match[0].length - 2);\n    const args = message.slice(match[0].length);\n    logger.log(`%c[CONVEX ${prefix}(${udfPath})] [${level}]`, INFO_COLOR, args);\n  } else {\n    logger.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n  }\n}\nfunction logFatalError(logger, message) {\n  const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n  logger.error(errorMessage);\n  return new Error(errorMessage);\n}\nfunction createHybridErrorStacktrace(source, udfPath, result) {\n  const prefix = prefix_for_source(source);\n  return `[CONVEX ${prefix}(${udfPath})] ${result.errorMessage}\n  Called by client`;\n}\nfunction forwardData(result, error) {\n  error.data = result.errorData;\n  return error;\n}\n//# sourceMappingURL=logging.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJDQUEyQztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsNkJBQTZCLDJDQUEyQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU8sR0FBRyxRQUFRO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTyxHQUFHLFFBQVEsTUFBTSxNQUFNO0FBQzFELElBQUk7QUFDSiw0QkFBNEIsT0FBTyxHQUFHLFFBQVEsS0FBSyxRQUFRO0FBQzNEO0FBQ0E7QUFDTztBQUNQLCtDQUErQyxRQUFRO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsT0FBTyxHQUFHLFFBQVEsS0FBSztBQUMzQztBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvZ2dpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY29uc3QgSU5GT19DT0xPUiA9IFwiY29sb3I6cmdiKDAsIDE0NSwgMjU1KVwiO1xuZnVuY3Rpb24gcHJlZml4X2Zvcl9zb3VyY2Uoc291cmNlKSB7XG4gIHN3aXRjaCAoc291cmNlKSB7XG4gICAgY2FzZSBcInF1ZXJ5XCI6XG4gICAgICByZXR1cm4gXCJRXCI7XG4gICAgY2FzZSBcIm11dGF0aW9uXCI6XG4gICAgICByZXR1cm4gXCJNXCI7XG4gICAgY2FzZSBcImFjdGlvblwiOlxuICAgICAgcmV0dXJuIFwiQVwiO1xuICAgIGNhc2UgXCJhbnlcIjpcbiAgICAgIHJldHVybiBcIj9cIjtcbiAgfVxufVxuZXhwb3J0IGNsYXNzIExvZ2dlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX29uTG9nTGluZUZ1bmNzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfdmVyYm9zZVwiKTtcbiAgICB0aGlzLl9vbkxvZ0xpbmVGdW5jcyA9IHt9O1xuICAgIHRoaXMuX3ZlcmJvc2UgPSBvcHRpb25zLnZlcmJvc2U7XG4gIH1cbiAgYWRkTG9nTGluZUxpc3RlbmVyKGZ1bmMpIHtcbiAgICBsZXQgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX29uTG9nTGluZUZ1bmNzW2lkXSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpO1xuICAgIH1cbiAgICB0aGlzLl9vbkxvZ0xpbmVGdW5jc1tpZF0gPSBmdW5jO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkZWxldGUgdGhpcy5fb25Mb2dMaW5lRnVuY3NbaWRdO1xuICAgIH07XG4gIH1cbiAgbG9nVmVyYm9zZSguLi5hcmdzKSB7XG4gICAgaWYgKHRoaXMuX3ZlcmJvc2UpIHtcbiAgICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgICBmdW5jKFwiZGVidWdcIiwgYCR7KC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKS50b0lTT1N0cmluZygpfWAsIC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBsb2coLi4uYXJncykge1xuICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgZnVuYyhcImluZm9cIiwgLi4uYXJncyk7XG4gICAgfVxuICB9XG4gIHdhcm4oLi4uYXJncykge1xuICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgZnVuYyhcIndhcm5cIiwgLi4uYXJncyk7XG4gICAgfVxuICB9XG4gIGVycm9yKC4uLmFyZ3MpIHtcbiAgICBmb3IgKGNvbnN0IGZ1bmMgb2YgT2JqZWN0LnZhbHVlcyh0aGlzLl9vbkxvZ0xpbmVGdW5jcykpIHtcbiAgICAgIGZ1bmMoXCJlcnJvclwiLCAuLi5hcmdzKTtcbiAgICB9XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZURlZmF1bHRMb2dnZXIob3B0aW9ucykge1xuICBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKG9wdGlvbnMpO1xuICBsb2dnZXIuYWRkTG9nTGluZUxpc3RlbmVyKChsZXZlbCwgLi4uYXJncykgPT4ge1xuICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgIGNhc2UgXCJkZWJ1Z1wiOlxuICAgICAgICBjb25zb2xlLmRlYnVnKC4uLmFyZ3MpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJpbmZvXCI6XG4gICAgICAgIGNvbnNvbGUubG9nKC4uLmFyZ3MpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ3YXJuXCI6XG4gICAgICAgIGNvbnNvbGUud2FybiguLi5hcmdzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiZXJyb3JcIjpcbiAgICAgICAgY29uc29sZS5lcnJvciguLi5hcmdzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGNvbnN0IF90eXBlY2hlY2sgPSBsZXZlbDtcbiAgICAgICAgY29uc29sZS5sb2coLi4uYXJncyk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGxvZ2dlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZU5vb3BMb2dnZXIob3B0aW9ucykge1xuICByZXR1cm4gbmV3IExvZ2dlcihvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGb3JGdW5jdGlvbihsb2dnZXIsIHR5cGUsIHNvdXJjZSwgdWRmUGF0aCwgbWVzc2FnZSkge1xuICBjb25zdCBwcmVmaXggPSBwcmVmaXhfZm9yX3NvdXJjZShzb3VyY2UpO1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09IFwib2JqZWN0XCIpIHtcbiAgICBtZXNzYWdlID0gYENvbnZleEVycm9yICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZS5lcnJvckRhdGEsIG51bGwsIDIpfWA7XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwiaW5mb1wiKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBtZXNzYWdlLm1hdGNoKC9eXFxbLio/XFxdIC8pO1xuICAgIGlmIChtYXRjaCA9PT0gbnVsbCkge1xuICAgICAgbG9nZ2VyLmVycm9yKFxuICAgICAgICBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIENvdWxkIG5vdCBwYXJzZSBjb25zb2xlLmxvZ2BcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGxldmVsID0gbWVzc2FnZS5zbGljZSgxLCBtYXRjaFswXS5sZW5ndGggLSAyKTtcbiAgICBjb25zdCBhcmdzID0gbWVzc2FnZS5zbGljZShtYXRjaFswXS5sZW5ndGgpO1xuICAgIGxvZ2dlci5sb2coYCVjW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIFske2xldmVsfV1gLCBJTkZPX0NPTE9SLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICBsb2dnZXIuZXJyb3IoYFtDT05WRVggJHtwcmVmaXh9KCR7dWRmUGF0aH0pXSAke21lc3NhZ2V9YCk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGYXRhbEVycm9yKGxvZ2dlciwgbWVzc2FnZSkge1xuICBjb25zdCBlcnJvck1lc3NhZ2UgPSBgW0NPTlZFWCBGQVRBTCBFUlJPUl0gJHttZXNzYWdlfWA7XG4gIGxvZ2dlci5lcnJvcihlcnJvck1lc3NhZ2UpO1xuICByZXR1cm4gbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSHlicmlkRXJyb3JTdGFja3RyYWNlKHNvdXJjZSwgdWRmUGF0aCwgcmVzdWx0KSB7XG4gIGNvbnN0IHByZWZpeCA9IHByZWZpeF9mb3Jfc291cmNlKHNvdXJjZSk7XG4gIHJldHVybiBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldICR7cmVzdWx0LmVycm9yTWVzc2FnZX1cbiAgQ2FsbGVkIGJ5IGNsaWVudGA7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZERhdGEocmVzdWx0LCBlcnJvcikge1xuICBlcnJvci5kYXRhID0gcmVzdWx0LmVycm9yRGF0YTtcbiAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/long.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/long.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Long: () => (/* binding */ Long)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass Long {\n  constructor(low, high) {\n    __publicField(this, \"low\");\n    __publicField(this, \"high\");\n    __publicField(this, \"__isUnsignedLong__\");\n    this.low = low | 0;\n    this.high = high | 0;\n    this.__isUnsignedLong__ = true;\n  }\n  static isLong(obj) {\n    return (obj && obj.__isUnsignedLong__) === true;\n  }\n  // prettier-ignore\n  static fromBytesLE(bytes) {\n    return new Long(\n      bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24,\n      bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24\n    );\n  }\n  // prettier-ignore\n  toBytesLE() {\n    const hi = this.high;\n    const lo = this.low;\n    return [\n      lo & 255,\n      lo >>> 8 & 255,\n      lo >>> 16 & 255,\n      lo >>> 24,\n      hi & 255,\n      hi >>> 8 & 255,\n      hi >>> 16 & 255,\n      hi >>> 24\n    ];\n  }\n  static fromNumber(value) {\n    if (isNaN(value)) return UZERO;\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    return new Long(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0);\n  }\n  toString() {\n    return (BigInt(this.high) * BigInt(TWO_PWR_32_DBL) + BigInt(this.low)).toString();\n  }\n  equals(other) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  }\n  notEquals(other) {\n    return !this.equals(other);\n  }\n  comp(other) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.equals(other)) return 0;\n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  }\n  lessThanOrEqual(other) {\n    return this.comp(\n      /* validates */\n      other\n    ) <= 0;\n  }\n  static fromValue(val) {\n    if (typeof val === \"number\") return Long.fromNumber(val);\n    return new Long(val.low, val.high);\n  }\n}\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(4294967295 | 0, 4294967295 | 0);\n//# sourceMappingURL=long.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9uZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuZXhwb3J0IGNsYXNzIExvbmcge1xuICBjb25zdHJ1Y3Rvcihsb3csIGhpZ2gpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG93XCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJoaWdoXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfX2lzVW5zaWduZWRMb25nX19cIik7XG4gICAgdGhpcy5sb3cgPSBsb3cgfCAwO1xuICAgIHRoaXMuaGlnaCA9IGhpZ2ggfCAwO1xuICAgIHRoaXMuX19pc1Vuc2lnbmVkTG9uZ19fID0gdHJ1ZTtcbiAgfVxuICBzdGF0aWMgaXNMb25nKG9iaikge1xuICAgIHJldHVybiAob2JqICYmIG9iai5fX2lzVW5zaWduZWRMb25nX18pID09PSB0cnVlO1xuICB9XG4gIC8vIHByZXR0aWVyLWlnbm9yZVxuICBzdGF0aWMgZnJvbUJ5dGVzTEUoYnl0ZXMpIHtcbiAgICByZXR1cm4gbmV3IExvbmcoXG4gICAgICBieXRlc1swXSB8IGJ5dGVzWzFdIDw8IDggfCBieXRlc1syXSA8PCAxNiB8IGJ5dGVzWzNdIDw8IDI0LFxuICAgICAgYnl0ZXNbNF0gfCBieXRlc1s1XSA8PCA4IHwgYnl0ZXNbNl0gPDwgMTYgfCBieXRlc1s3XSA8PCAyNFxuICAgICk7XG4gIH1cbiAgLy8gcHJldHRpZXItaWdub3JlXG4gIHRvQnl0ZXNMRSgpIHtcbiAgICBjb25zdCBoaSA9IHRoaXMuaGlnaDtcbiAgICBjb25zdCBsbyA9IHRoaXMubG93O1xuICAgIHJldHVybiBbXG4gICAgICBsbyAmIDI1NSxcbiAgICAgIGxvID4+PiA4ICYgMjU1LFxuICAgICAgbG8gPj4+IDE2ICYgMjU1LFxuICAgICAgbG8gPj4+IDI0LFxuICAgICAgaGkgJiAyNTUsXG4gICAgICBoaSA+Pj4gOCAmIDI1NSxcbiAgICAgIGhpID4+PiAxNiAmIDI1NSxcbiAgICAgIGhpID4+PiAyNFxuICAgIF07XG4gIH1cbiAgc3RhdGljIGZyb21OdW1iZXIodmFsdWUpIHtcbiAgICBpZiAoaXNOYU4odmFsdWUpKSByZXR1cm4gVVpFUk87XG4gICAgaWYgKHZhbHVlIDwgMCkgcmV0dXJuIFVaRVJPO1xuICAgIGlmICh2YWx1ZSA+PSBUV09fUFdSXzY0X0RCTCkgcmV0dXJuIE1BWF9VTlNJR05FRF9WQUxVRTtcbiAgICByZXR1cm4gbmV3IExvbmcodmFsdWUgJSBUV09fUFdSXzMyX0RCTCB8IDAsIHZhbHVlIC8gVFdPX1BXUl8zMl9EQkwgfCAwKTtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gKEJpZ0ludCh0aGlzLmhpZ2gpICogQmlnSW50KFRXT19QV1JfMzJfREJMKSArIEJpZ0ludCh0aGlzLmxvdykpLnRvU3RyaW5nKCk7XG4gIH1cbiAgZXF1YWxzKG90aGVyKSB7XG4gICAgaWYgKCFMb25nLmlzTG9uZyhvdGhlcikpIG90aGVyID0gTG9uZy5mcm9tVmFsdWUob3RoZXIpO1xuICAgIGlmICh0aGlzLmhpZ2ggPj4+IDMxID09PSAxICYmIG90aGVyLmhpZ2ggPj4+IDMxID09PSAxKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMuaGlnaCA9PT0gb3RoZXIuaGlnaCAmJiB0aGlzLmxvdyA9PT0gb3RoZXIubG93O1xuICB9XG4gIG5vdEVxdWFscyhvdGhlcikge1xuICAgIHJldHVybiAhdGhpcy5lcXVhbHMob3RoZXIpO1xuICB9XG4gIGNvbXAob3RoZXIpIHtcbiAgICBpZiAoIUxvbmcuaXNMb25nKG90aGVyKSkgb3RoZXIgPSBMb25nLmZyb21WYWx1ZShvdGhlcik7XG4gICAgaWYgKHRoaXMuZXF1YWxzKG90aGVyKSkgcmV0dXJuIDA7XG4gICAgcmV0dXJuIG90aGVyLmhpZ2ggPj4+IDAgPiB0aGlzLmhpZ2ggPj4+IDAgfHwgb3RoZXIuaGlnaCA9PT0gdGhpcy5oaWdoICYmIG90aGVyLmxvdyA+Pj4gMCA+IHRoaXMubG93ID4+PiAwID8gLTEgOiAxO1xuICB9XG4gIGxlc3NUaGFuT3JFcXVhbChvdGhlcikge1xuICAgIHJldHVybiB0aGlzLmNvbXAoXG4gICAgICAvKiB2YWxpZGF0ZXMgKi9cbiAgICAgIG90aGVyXG4gICAgKSA8PSAwO1xuICB9XG4gIHN0YXRpYyBmcm9tVmFsdWUodmFsKSB7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwibnVtYmVyXCIpIHJldHVybiBMb25nLmZyb21OdW1iZXIodmFsKTtcbiAgICByZXR1cm4gbmV3IExvbmcodmFsLmxvdywgdmFsLmhpZ2gpO1xuICB9XG59XG5jb25zdCBVWkVSTyA9IG5ldyBMb25nKDAsIDApO1xuY29uc3QgVFdPX1BXUl8xNl9EQkwgPSAxIDw8IDE2O1xuY29uc3QgVFdPX1BXUl8zMl9EQkwgPSBUV09fUFdSXzE2X0RCTCAqIFRXT19QV1JfMTZfREJMO1xuY29uc3QgVFdPX1BXUl82NF9EQkwgPSBUV09fUFdSXzMyX0RCTCAqIFRXT19QV1JfMzJfREJMO1xuY29uc3QgTUFYX1VOU0lHTkVEX1ZBTFVFID0gbmV3IExvbmcoNDI5NDk2NzI5NSB8IDAsIDQyOTQ5NjcyOTUgfCAwKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/long.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/simple_client-node.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/simple_client-node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexClient)\n/* harmony export */ });\n/* harmony import */ var module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! module */ \"module\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var _simple_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./simple_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\");\nconst require=(0,module__WEBPACK_IMPORTED_MODULE_0__.createRequire)((0,path__WEBPACK_IMPORTED_MODULE_1__.resolve)('.'));\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/stream.js\nvar require_stream = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/stream.js\"(exports, module) {\n    \"use strict\";\n    var { Duplex } = __require(\"stream\");\n    function emitClose(stream) {\n      stream.emit(\"close\");\n    }\n    function duplexOnEnd() {\n      if (!this.destroyed && this._writableState.finished) {\n        this.destroy();\n      }\n    }\n    function duplexOnError(err) {\n      this.removeListener(\"error\", duplexOnError);\n      this.destroy();\n      if (this.listenerCount(\"error\") === 0) {\n        this.emit(\"error\", err);\n      }\n    }\n    function createWebSocketStream2(ws, options) {\n      let terminateOnDestroy = true;\n      const duplex = new Duplex({\n        ...options,\n        autoDestroy: false,\n        emitClose: false,\n        objectMode: false,\n        writableObjectMode: false\n      });\n      ws.on(\"message\", function message(msg, isBinary) {\n        const data = !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n        if (!duplex.push(data)) ws.pause();\n      });\n      ws.once(\"error\", function error(err) {\n        if (duplex.destroyed) return;\n        terminateOnDestroy = false;\n        duplex.destroy(err);\n      });\n      ws.once(\"close\", function close() {\n        if (duplex.destroyed) return;\n        duplex.push(null);\n      });\n      duplex._destroy = function(err, callback) {\n        if (ws.readyState === ws.CLOSED) {\n          callback(err);\n          process.nextTick(emitClose, duplex);\n          return;\n        }\n        let called = false;\n        ws.once(\"error\", function error(err2) {\n          called = true;\n          callback(err2);\n        });\n        ws.once(\"close\", function close() {\n          if (!called) callback(err);\n          process.nextTick(emitClose, duplex);\n        });\n        if (terminateOnDestroy) ws.terminate();\n      };\n      duplex._final = function(callback) {\n        if (ws.readyState === ws.CONNECTING) {\n          ws.once(\"open\", function open() {\n            duplex._final(callback);\n          });\n          return;\n        }\n        if (ws._socket === null) return;\n        if (ws._socket._writableState.finished) {\n          callback();\n          if (duplex._readableState.endEmitted) duplex.destroy();\n        } else {\n          ws._socket.once(\"finish\", function finish() {\n            callback();\n          });\n          ws.close();\n        }\n      };\n      duplex._read = function() {\n        if (ws.isPaused) ws.resume();\n      };\n      duplex._write = function(chunk, encoding, callback) {\n        if (ws.readyState === ws.CONNECTING) {\n          ws.once(\"open\", function open() {\n            duplex._write(chunk, encoding, callback);\n          });\n          return;\n        }\n        ws.send(chunk, callback);\n      };\n      duplex.on(\"end\", duplexOnEnd);\n      duplex.on(\"error\", duplexOnError);\n      return duplex;\n    }\n    module.exports = createWebSocketStream2;\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js\nvar require_constants = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js\"(exports, module) {\n    \"use strict\";\n    var BINARY_TYPES = [\"nodebuffer\", \"arraybuffer\", \"fragments\"];\n    var hasBlob = typeof Blob !== \"undefined\";\n    if (hasBlob) BINARY_TYPES.push(\"blob\");\n    module.exports = {\n      BINARY_TYPES,\n      EMPTY_BUFFER: Buffer.alloc(0),\n      GUID: \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\",\n      hasBlob,\n      kForOnEventAttribute: Symbol(\"kIsForOnEventAttribute\"),\n      kListener: Symbol(\"kListener\"),\n      kStatusCode: Symbol(\"status-code\"),\n      kWebSocket: Symbol(\"websocket\"),\n      NOOP: () => {\n      }\n    };\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js\nvar require_node_gyp_build = __commonJS({\n  \"../common/temp/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js\"(exports, module) {\n    var fs = __require(\"fs\");\n    var path = __require(\"path\");\n    var os = __require(\"os\");\n    var runtimeRequire =  true ? require : 0;\n    var vars = process.config && process.config.variables || {};\n    var prebuildsOnly = !!process.env.PREBUILDS_ONLY;\n    var abi = process.versions.modules;\n    var runtime = isElectron() ? \"electron\" : isNwjs() ? \"node-webkit\" : \"node\";\n    var arch = process.env.npm_config_arch || os.arch();\n    var platform = process.env.npm_config_platform || os.platform();\n    var libc = process.env.LIBC || (isAlpine(platform) ? \"musl\" : \"glibc\");\n    var armv = process.env.ARM_VERSION || (arch === \"arm64\" ? \"8\" : vars.arm_version) || \"\";\n    var uv = (process.versions.uv || \"\").split(\".\")[0];\n    module.exports = load;\n    function load(dir) {\n      return runtimeRequire(load.resolve(dir));\n    }\n    load.resolve = load.path = function(dir) {\n      dir = path.resolve(dir || \".\");\n      try {\n        var name = runtimeRequire(path.join(dir, \"package.json\")).name.toUpperCase().replace(/-/g, \"_\");\n        if (process.env[name + \"_PREBUILD\"]) dir = process.env[name + \"_PREBUILD\"];\n      } catch (err) {\n      }\n      if (!prebuildsOnly) {\n        var release = getFirst(path.join(dir, \"build/Release\"), matchBuild);\n        if (release) return release;\n        var debug = getFirst(path.join(dir, \"build/Debug\"), matchBuild);\n        if (debug) return debug;\n      }\n      var prebuild = resolve(dir);\n      if (prebuild) return prebuild;\n      var nearby = resolve(path.dirname(process.execPath));\n      if (nearby) return nearby;\n      var target = [\n        \"platform=\" + platform,\n        \"arch=\" + arch,\n        \"runtime=\" + runtime,\n        \"abi=\" + abi,\n        \"uv=\" + uv,\n        armv ? \"armv=\" + armv : \"\",\n        \"libc=\" + libc,\n        \"node=\" + process.versions.node,\n        process.versions.electron ? \"electron=\" + process.versions.electron : \"\",\n         true ? \"webpack=true\" : 0\n        // eslint-disable-line\n      ].filter(Boolean).join(\" \");\n      throw new Error(\"No native build was found for \" + target + \"\\n    loaded from: \" + dir + \"\\n\");\n      function resolve(dir2) {\n        var tuples = readdirSync(path.join(dir2, \"prebuilds\")).map(parseTuple);\n        var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0];\n        if (!tuple) return;\n        var prebuilds = path.join(dir2, \"prebuilds\", tuple.name);\n        var parsed = readdirSync(prebuilds).map(parseTags);\n        var candidates = parsed.filter(matchTags(runtime, abi));\n        var winner = candidates.sort(compareTags(runtime))[0];\n        if (winner) return path.join(prebuilds, winner.file);\n      }\n    };\n    function readdirSync(dir) {\n      try {\n        return fs.readdirSync(dir);\n      } catch (err) {\n        return [];\n      }\n    }\n    function getFirst(dir, filter) {\n      var files = readdirSync(dir).filter(filter);\n      return files[0] && path.join(dir, files[0]);\n    }\n    function matchBuild(name) {\n      return /\\.node$/.test(name);\n    }\n    function parseTuple(name) {\n      var arr = name.split(\"-\");\n      if (arr.length !== 2) return;\n      var platform2 = arr[0];\n      var architectures = arr[1].split(\"+\");\n      if (!platform2) return;\n      if (!architectures.length) return;\n      if (!architectures.every(Boolean)) return;\n      return { name, platform: platform2, architectures };\n    }\n    function matchTuple(platform2, arch2) {\n      return function(tuple) {\n        if (tuple == null) return false;\n        if (tuple.platform !== platform2) return false;\n        return tuple.architectures.includes(arch2);\n      };\n    }\n    function compareTuples(a, b) {\n      return a.architectures.length - b.architectures.length;\n    }\n    function parseTags(file) {\n      var arr = file.split(\".\");\n      var extension = arr.pop();\n      var tags = { file, specificity: 0 };\n      if (extension !== \"node\") return;\n      for (var i = 0; i < arr.length; i++) {\n        var tag = arr[i];\n        if (tag === \"node\" || tag === \"electron\" || tag === \"node-webkit\") {\n          tags.runtime = tag;\n        } else if (tag === \"napi\") {\n          tags.napi = true;\n        } else if (tag.slice(0, 3) === \"abi\") {\n          tags.abi = tag.slice(3);\n        } else if (tag.slice(0, 2) === \"uv\") {\n          tags.uv = tag.slice(2);\n        } else if (tag.slice(0, 4) === \"armv\") {\n          tags.armv = tag.slice(4);\n        } else if (tag === \"glibc\" || tag === \"musl\") {\n          tags.libc = tag;\n        } else {\n          continue;\n        }\n        tags.specificity++;\n      }\n      return tags;\n    }\n    function matchTags(runtime2, abi2) {\n      return function(tags) {\n        if (tags == null) return false;\n        if (tags.runtime && tags.runtime !== runtime2 && !runtimeAgnostic(tags)) return false;\n        if (tags.abi && tags.abi !== abi2 && !tags.napi) return false;\n        if (tags.uv && tags.uv !== uv) return false;\n        if (tags.armv && tags.armv !== armv) return false;\n        if (tags.libc && tags.libc !== libc) return false;\n        return true;\n      };\n    }\n    function runtimeAgnostic(tags) {\n      return tags.runtime === \"node\" && tags.napi;\n    }\n    function compareTags(runtime2) {\n      return function(a, b) {\n        if (a.runtime !== b.runtime) {\n          return a.runtime === runtime2 ? -1 : 1;\n        } else if (a.abi !== b.abi) {\n          return a.abi ? -1 : 1;\n        } else if (a.specificity !== b.specificity) {\n          return a.specificity > b.specificity ? -1 : 1;\n        } else {\n          return 0;\n        }\n      };\n    }\n    function isNwjs() {\n      return !!(process.versions && process.versions.nw);\n    }\n    function isElectron() {\n      if (process.versions && process.versions.electron) return true;\n      if (process.env.ELECTRON_RUN_AS_NODE) return true;\n      return typeof window !== \"undefined\" && window.process && window.process.type === \"renderer\";\n    }\n    function isAlpine(platform2) {\n      return platform2 === \"linux\" && fs.existsSync(\"/etc/alpine-release\");\n    }\n    load.parseTags = parseTags;\n    load.matchTags = matchTags;\n    load.compareTags = compareTags;\n    load.parseTuple = parseTuple;\n    load.matchTuple = matchTuple;\n    load.compareTuples = compareTuples;\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js\nvar require_node_gyp_build2 = __commonJS({\n  \"../common/temp/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js\"(exports, module) {\n    var runtimeRequire =  true ? require : 0;\n    if (typeof runtimeRequire.addon === \"function\") {\n      module.exports = runtimeRequire.addon.bind(runtimeRequire);\n    } else {\n      module.exports = require_node_gyp_build();\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/fallback.js\nvar require_fallback = __commonJS({\n  \"../common/temp/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/fallback.js\"(exports, module) {\n    \"use strict\";\n    var mask = (source, mask2, output, offset, length) => {\n      for (var i = 0; i < length; i++) {\n        output[offset + i] = source[i] ^ mask2[i & 3];\n      }\n    };\n    var unmask = (buffer, mask2) => {\n      const length = buffer.length;\n      for (var i = 0; i < length; i++) {\n        buffer[i] ^= mask2[i & 3];\n      }\n    };\n    module.exports = { mask, unmask };\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/index.js\nvar require_bufferutil = __commonJS({\n  \"../common/temp/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/index.js\"(exports, module) {\n    \"use strict\";\n    try {\n      module.exports = require_node_gyp_build2()(__dirname);\n    } catch (e) {\n      module.exports = require_fallback();\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js\nvar require_buffer_util = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js\"(exports, module) {\n    \"use strict\";\n    var { EMPTY_BUFFER } = require_constants();\n    var FastBuffer = Buffer[Symbol.species];\n    function concat(list, totalLength) {\n      if (list.length === 0) return EMPTY_BUFFER;\n      if (list.length === 1) return list[0];\n      const target = Buffer.allocUnsafe(totalLength);\n      let offset = 0;\n      for (let i = 0; i < list.length; i++) {\n        const buf = list[i];\n        target.set(buf, offset);\n        offset += buf.length;\n      }\n      if (offset < totalLength) {\n        return new FastBuffer(target.buffer, target.byteOffset, offset);\n      }\n      return target;\n    }\n    function _mask(source, mask, output, offset, length) {\n      for (let i = 0; i < length; i++) {\n        output[offset + i] = source[i] ^ mask[i & 3];\n      }\n    }\n    function _unmask(buffer, mask) {\n      for (let i = 0; i < buffer.length; i++) {\n        buffer[i] ^= mask[i & 3];\n      }\n    }\n    function toArrayBuffer(buf) {\n      if (buf.length === buf.buffer.byteLength) {\n        return buf.buffer;\n      }\n      return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n    }\n    function toBuffer(data) {\n      toBuffer.readOnly = true;\n      if (Buffer.isBuffer(data)) return data;\n      let buf;\n      if (data instanceof ArrayBuffer) {\n        buf = new FastBuffer(data);\n      } else if (ArrayBuffer.isView(data)) {\n        buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n      } else {\n        buf = Buffer.from(data);\n        toBuffer.readOnly = false;\n      }\n      return buf;\n    }\n    module.exports = {\n      concat,\n      mask: _mask,\n      toArrayBuffer,\n      toBuffer,\n      unmask: _unmask\n    };\n    if (!process.env.WS_NO_BUFFER_UTIL) {\n      try {\n        const bufferUtil = require_bufferutil();\n        module.exports.mask = function(source, mask, output, offset, length) {\n          if (length < 48) _mask(source, mask, output, offset, length);\n          else bufferUtil.mask(source, mask, output, offset, length);\n        };\n        module.exports.unmask = function(buffer, mask) {\n          if (buffer.length < 32) _unmask(buffer, mask);\n          else bufferUtil.unmask(buffer, mask);\n        };\n      } catch (e) {\n      }\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/limiter.js\nvar require_limiter = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/limiter.js\"(exports, module) {\n    \"use strict\";\n    var kDone = Symbol(\"kDone\");\n    var kRun = Symbol(\"kRun\");\n    var Limiter = class {\n      /**\n       * Creates a new `Limiter`.\n       *\n       * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n       *     to run concurrently\n       */\n      constructor(concurrency) {\n        this[kDone] = () => {\n          this.pending--;\n          this[kRun]();\n        };\n        this.concurrency = concurrency || Infinity;\n        this.jobs = [];\n        this.pending = 0;\n      }\n      /**\n       * Adds a job to the queue.\n       *\n       * @param {Function} job The job to run\n       * @public\n       */\n      add(job) {\n        this.jobs.push(job);\n        this[kRun]();\n      }\n      /**\n       * Removes a job from the queue and runs it if possible.\n       *\n       * @private\n       */\n      [kRun]() {\n        if (this.pending === this.concurrency) return;\n        if (this.jobs.length) {\n          const job = this.jobs.shift();\n          this.pending++;\n          job(this[kDone]);\n        }\n      }\n    };\n    module.exports = Limiter;\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js\nvar require_permessage_deflate = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js\"(exports, module) {\n    \"use strict\";\n    var zlib = __require(\"zlib\");\n    var bufferUtil = require_buffer_util();\n    var Limiter = require_limiter();\n    var { kStatusCode } = require_constants();\n    var FastBuffer = Buffer[Symbol.species];\n    var TRAILER = Buffer.from([0, 0, 255, 255]);\n    var kPerMessageDeflate = Symbol(\"permessage-deflate\");\n    var kTotalLength = Symbol(\"total-length\");\n    var kCallback = Symbol(\"callback\");\n    var kBuffers = Symbol(\"buffers\");\n    var kError = Symbol(\"error\");\n    var zlibLimiter;\n    var PerMessageDeflate = class {\n      /**\n       * Creates a PerMessageDeflate instance.\n       *\n       * @param {Object} [options] Configuration options\n       * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n       *     for, or request, a custom client window size\n       * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n       *     acknowledge disabling of client context takeover\n       * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n       *     calls to zlib\n       * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n       *     use of a custom server window size\n       * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n       *     disabling of server context takeover\n       * @param {Number} [options.threshold=1024] Size (in bytes) below which\n       *     messages should not be compressed if context takeover is disabled\n       * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n       *     deflate\n       * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n       *     inflate\n       * @param {Boolean} [isServer=false] Create the instance in either server or\n       *     client mode\n       * @param {Number} [maxPayload=0] The maximum allowed message length\n       */\n      constructor(options, isServer, maxPayload) {\n        this._maxPayload = maxPayload | 0;\n        this._options = options || {};\n        this._threshold = this._options.threshold !== void 0 ? this._options.threshold : 1024;\n        this._isServer = !!isServer;\n        this._deflate = null;\n        this._inflate = null;\n        this.params = null;\n        if (!zlibLimiter) {\n          const concurrency = this._options.concurrencyLimit !== void 0 ? this._options.concurrencyLimit : 10;\n          zlibLimiter = new Limiter(concurrency);\n        }\n      }\n      /**\n       * @type {String}\n       */\n      static get extensionName() {\n        return \"permessage-deflate\";\n      }\n      /**\n       * Create an extension negotiation offer.\n       *\n       * @return {Object} Extension parameters\n       * @public\n       */\n      offer() {\n        const params = {};\n        if (this._options.serverNoContextTakeover) {\n          params.server_no_context_takeover = true;\n        }\n        if (this._options.clientNoContextTakeover) {\n          params.client_no_context_takeover = true;\n        }\n        if (this._options.serverMaxWindowBits) {\n          params.server_max_window_bits = this._options.serverMaxWindowBits;\n        }\n        if (this._options.clientMaxWindowBits) {\n          params.client_max_window_bits = this._options.clientMaxWindowBits;\n        } else if (this._options.clientMaxWindowBits == null) {\n          params.client_max_window_bits = true;\n        }\n        return params;\n      }\n      /**\n       * Accept an extension negotiation offer/response.\n       *\n       * @param {Array} configurations The extension negotiation offers/reponse\n       * @return {Object} Accepted configuration\n       * @public\n       */\n      accept(configurations) {\n        configurations = this.normalizeParams(configurations);\n        this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);\n        return this.params;\n      }\n      /**\n       * Releases all resources used by the extension.\n       *\n       * @public\n       */\n      cleanup() {\n        if (this._inflate) {\n          this._inflate.close();\n          this._inflate = null;\n        }\n        if (this._deflate) {\n          const callback = this._deflate[kCallback];\n          this._deflate.close();\n          this._deflate = null;\n          if (callback) {\n            callback(\n              new Error(\n                \"The deflate stream was closed while data was being processed\"\n              )\n            );\n          }\n        }\n      }\n      /**\n       *  Accept an extension negotiation offer.\n       *\n       * @param {Array} offers The extension negotiation offers\n       * @return {Object} Accepted configuration\n       * @private\n       */\n      acceptAsServer(offers) {\n        const opts = this._options;\n        const accepted = offers.find((params) => {\n          if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === \"number\" && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === \"number\" && !params.client_max_window_bits) {\n            return false;\n          }\n          return true;\n        });\n        if (!accepted) {\n          throw new Error(\"None of the extension offers can be accepted\");\n        }\n        if (opts.serverNoContextTakeover) {\n          accepted.server_no_context_takeover = true;\n        }\n        if (opts.clientNoContextTakeover) {\n          accepted.client_no_context_takeover = true;\n        }\n        if (typeof opts.serverMaxWindowBits === \"number\") {\n          accepted.server_max_window_bits = opts.serverMaxWindowBits;\n        }\n        if (typeof opts.clientMaxWindowBits === \"number\") {\n          accepted.client_max_window_bits = opts.clientMaxWindowBits;\n        } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {\n          delete accepted.client_max_window_bits;\n        }\n        return accepted;\n      }\n      /**\n       * Accept the extension negotiation response.\n       *\n       * @param {Array} response The extension negotiation response\n       * @return {Object} Accepted configuration\n       * @private\n       */\n      acceptAsClient(response) {\n        const params = response[0];\n        if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n          throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n        }\n        if (!params.client_max_window_bits) {\n          if (typeof this._options.clientMaxWindowBits === \"number\") {\n            params.client_max_window_bits = this._options.clientMaxWindowBits;\n          }\n        } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === \"number\" && params.client_max_window_bits > this._options.clientMaxWindowBits) {\n          throw new Error(\n            'Unexpected or invalid parameter \"client_max_window_bits\"'\n          );\n        }\n        return params;\n      }\n      /**\n       * Normalize parameters.\n       *\n       * @param {Array} configurations The extension negotiation offers/reponse\n       * @return {Array} The offers/response with normalized parameters\n       * @private\n       */\n      normalizeParams(configurations) {\n        configurations.forEach((params) => {\n          Object.keys(params).forEach((key) => {\n            let value = params[key];\n            if (value.length > 1) {\n              throw new Error(`Parameter \"${key}\" must have only a single value`);\n            }\n            value = value[0];\n            if (key === \"client_max_window_bits\") {\n              if (value !== true) {\n                const num = +value;\n                if (!Number.isInteger(num) || num < 8 || num > 15) {\n                  throw new TypeError(\n                    `Invalid value for parameter \"${key}\": ${value}`\n                  );\n                }\n                value = num;\n              } else if (!this._isServer) {\n                throw new TypeError(\n                  `Invalid value for parameter \"${key}\": ${value}`\n                );\n              }\n            } else if (key === \"server_max_window_bits\") {\n              const num = +value;\n              if (!Number.isInteger(num) || num < 8 || num > 15) {\n                throw new TypeError(\n                  `Invalid value for parameter \"${key}\": ${value}`\n                );\n              }\n              value = num;\n            } else if (key === \"client_no_context_takeover\" || key === \"server_no_context_takeover\") {\n              if (value !== true) {\n                throw new TypeError(\n                  `Invalid value for parameter \"${key}\": ${value}`\n                );\n              }\n            } else {\n              throw new Error(`Unknown parameter \"${key}\"`);\n            }\n            params[key] = value;\n          });\n        });\n        return configurations;\n      }\n      /**\n       * Decompress data. Concurrency limited.\n       *\n       * @param {Buffer} data Compressed data\n       * @param {Boolean} fin Specifies whether or not this is the last fragment\n       * @param {Function} callback Callback\n       * @public\n       */\n      decompress(data, fin, callback) {\n        zlibLimiter.add((done) => {\n          this._decompress(data, fin, (err, result) => {\n            done();\n            callback(err, result);\n          });\n        });\n      }\n      /**\n       * Compress data. Concurrency limited.\n       *\n       * @param {(Buffer|String)} data Data to compress\n       * @param {Boolean} fin Specifies whether or not this is the last fragment\n       * @param {Function} callback Callback\n       * @public\n       */\n      compress(data, fin, callback) {\n        zlibLimiter.add((done) => {\n          this._compress(data, fin, (err, result) => {\n            done();\n            callback(err, result);\n          });\n        });\n      }\n      /**\n       * Decompress data.\n       *\n       * @param {Buffer} data Compressed data\n       * @param {Boolean} fin Specifies whether or not this is the last fragment\n       * @param {Function} callback Callback\n       * @private\n       */\n      _decompress(data, fin, callback) {\n        const endpoint = this._isServer ? \"client\" : \"server\";\n        if (!this._inflate) {\n          const key = `${endpoint}_max_window_bits`;\n          const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n          this._inflate = zlib.createInflateRaw({\n            ...this._options.zlibInflateOptions,\n            windowBits\n          });\n          this._inflate[kPerMessageDeflate] = this;\n          this._inflate[kTotalLength] = 0;\n          this._inflate[kBuffers] = [];\n          this._inflate.on(\"error\", inflateOnError);\n          this._inflate.on(\"data\", inflateOnData);\n        }\n        this._inflate[kCallback] = callback;\n        this._inflate.write(data);\n        if (fin) this._inflate.write(TRAILER);\n        this._inflate.flush(() => {\n          const err = this._inflate[kError];\n          if (err) {\n            this._inflate.close();\n            this._inflate = null;\n            callback(err);\n            return;\n          }\n          const data2 = bufferUtil.concat(\n            this._inflate[kBuffers],\n            this._inflate[kTotalLength]\n          );\n          if (this._inflate._readableState.endEmitted) {\n            this._inflate.close();\n            this._inflate = null;\n          } else {\n            this._inflate[kTotalLength] = 0;\n            this._inflate[kBuffers] = [];\n            if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n              this._inflate.reset();\n            }\n          }\n          callback(null, data2);\n        });\n      }\n      /**\n       * Compress data.\n       *\n       * @param {(Buffer|String)} data Data to compress\n       * @param {Boolean} fin Specifies whether or not this is the last fragment\n       * @param {Function} callback Callback\n       * @private\n       */\n      _compress(data, fin, callback) {\n        const endpoint = this._isServer ? \"server\" : \"client\";\n        if (!this._deflate) {\n          const key = `${endpoint}_max_window_bits`;\n          const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n          this._deflate = zlib.createDeflateRaw({\n            ...this._options.zlibDeflateOptions,\n            windowBits\n          });\n          this._deflate[kTotalLength] = 0;\n          this._deflate[kBuffers] = [];\n          this._deflate.on(\"data\", deflateOnData);\n        }\n        this._deflate[kCallback] = callback;\n        this._deflate.write(data);\n        this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n          if (!this._deflate) {\n            return;\n          }\n          let data2 = bufferUtil.concat(\n            this._deflate[kBuffers],\n            this._deflate[kTotalLength]\n          );\n          if (fin) {\n            data2 = new FastBuffer(data2.buffer, data2.byteOffset, data2.length - 4);\n          }\n          this._deflate[kCallback] = null;\n          this._deflate[kTotalLength] = 0;\n          this._deflate[kBuffers] = [];\n          if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n            this._deflate.reset();\n          }\n          callback(null, data2);\n        });\n      }\n    };\n    module.exports = PerMessageDeflate;\n    function deflateOnData(chunk) {\n      this[kBuffers].push(chunk);\n      this[kTotalLength] += chunk.length;\n    }\n    function inflateOnData(chunk) {\n      this[kTotalLength] += chunk.length;\n      if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {\n        this[kBuffers].push(chunk);\n        return;\n      }\n      this[kError] = new RangeError(\"Max payload size exceeded\");\n      this[kError].code = \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\";\n      this[kError][kStatusCode] = 1009;\n      this.removeListener(\"data\", inflateOnData);\n      this.reset();\n    }\n    function inflateOnError(err) {\n      this[kPerMessageDeflate]._inflate = null;\n      err[kStatusCode] = 1007;\n      this[kCallback](err);\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/fallback.js\nvar require_fallback2 = __commonJS({\n  \"../common/temp/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/fallback.js\"(exports, module) {\n    \"use strict\";\n    function isValidUTF8(buf) {\n      const len = buf.length;\n      let i = 0;\n      while (i < len) {\n        if ((buf[i] & 128) === 0) {\n          i++;\n        } else if ((buf[i] & 224) === 192) {\n          if (i + 1 === len || (buf[i + 1] & 192) !== 128 || (buf[i] & 254) === 192) {\n            return false;\n          }\n          i += 2;\n        } else if ((buf[i] & 240) === 224) {\n          if (i + 2 >= len || (buf[i + 1] & 192) !== 128 || (buf[i + 2] & 192) !== 128 || buf[i] === 224 && (buf[i + 1] & 224) === 128 || // overlong\n          buf[i] === 237 && (buf[i + 1] & 224) === 160) {\n            return false;\n          }\n          i += 3;\n        } else if ((buf[i] & 248) === 240) {\n          if (i + 3 >= len || (buf[i + 1] & 192) !== 128 || (buf[i + 2] & 192) !== 128 || (buf[i + 3] & 192) !== 128 || buf[i] === 240 && (buf[i + 1] & 240) === 128 || // overlong\n          buf[i] === 244 && buf[i + 1] > 143 || buf[i] > 244) {\n            return false;\n          }\n          i += 4;\n        } else {\n          return false;\n        }\n      }\n      return true;\n    }\n    module.exports = isValidUTF8;\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/index.js\nvar require_utf_8_validate = __commonJS({\n  \"../common/temp/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/index.js\"(exports, module) {\n    \"use strict\";\n    try {\n      module.exports = require_node_gyp_build2()(__dirname);\n    } catch (e) {\n      module.exports = require_fallback2();\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js\nvar require_validation = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js\"(exports, module) {\n    \"use strict\";\n    var { isUtf8 } = __require(\"buffer\");\n    var { hasBlob } = require_constants();\n    var tokenChars = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      // 0 - 15\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      // 16 - 31\n      0,\n      1,\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      1,\n      0,\n      // 32 - 47\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      // 48 - 63\n      0,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      // 64 - 79\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      0,\n      0,\n      1,\n      1,\n      // 80 - 95\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      // 96 - 111\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0\n      // 112 - 127\n    ];\n    function isValidStatusCode(code) {\n      return code >= 1e3 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3e3 && code <= 4999;\n    }\n    function _isValidUTF8(buf) {\n      const len = buf.length;\n      let i = 0;\n      while (i < len) {\n        if ((buf[i] & 128) === 0) {\n          i++;\n        } else if ((buf[i] & 224) === 192) {\n          if (i + 1 === len || (buf[i + 1] & 192) !== 128 || (buf[i] & 254) === 192) {\n            return false;\n          }\n          i += 2;\n        } else if ((buf[i] & 240) === 224) {\n          if (i + 2 >= len || (buf[i + 1] & 192) !== 128 || (buf[i + 2] & 192) !== 128 || buf[i] === 224 && (buf[i + 1] & 224) === 128 || // Overlong\n          buf[i] === 237 && (buf[i + 1] & 224) === 160) {\n            return false;\n          }\n          i += 3;\n        } else if ((buf[i] & 248) === 240) {\n          if (i + 3 >= len || (buf[i + 1] & 192) !== 128 || (buf[i + 2] & 192) !== 128 || (buf[i + 3] & 192) !== 128 || buf[i] === 240 && (buf[i + 1] & 240) === 128 || // Overlong\n          buf[i] === 244 && buf[i + 1] > 143 || buf[i] > 244) {\n            return false;\n          }\n          i += 4;\n        } else {\n          return false;\n        }\n      }\n      return true;\n    }\n    function isBlob(value) {\n      return hasBlob && typeof value === \"object\" && typeof value.arrayBuffer === \"function\" && typeof value.type === \"string\" && typeof value.stream === \"function\" && (value[Symbol.toStringTag] === \"Blob\" || value[Symbol.toStringTag] === \"File\");\n    }\n    module.exports = {\n      isBlob,\n      isValidStatusCode,\n      isValidUTF8: _isValidUTF8,\n      tokenChars\n    };\n    if (isUtf8) {\n      module.exports.isValidUTF8 = function(buf) {\n        return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n      };\n    } else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n      try {\n        const isValidUTF8 = require_utf_8_validate();\n        module.exports.isValidUTF8 = function(buf) {\n          return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n        };\n      } catch (e) {\n      }\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/receiver.js\nvar require_receiver = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/receiver.js\"(exports, module) {\n    \"use strict\";\n    var { Writable } = __require(\"stream\");\n    var PerMessageDeflate = require_permessage_deflate();\n    var {\n      BINARY_TYPES,\n      EMPTY_BUFFER,\n      kStatusCode,\n      kWebSocket\n    } = require_constants();\n    var { concat, toArrayBuffer, unmask } = require_buffer_util();\n    var { isValidStatusCode, isValidUTF8 } = require_validation();\n    var FastBuffer = Buffer[Symbol.species];\n    var GET_INFO = 0;\n    var GET_PAYLOAD_LENGTH_16 = 1;\n    var GET_PAYLOAD_LENGTH_64 = 2;\n    var GET_MASK = 3;\n    var GET_DATA = 4;\n    var INFLATING = 5;\n    var DEFER_EVENT = 6;\n    var Receiver2 = class extends Writable {\n      /**\n       * Creates a Receiver instance.\n       *\n       * @param {Object} [options] Options object\n       * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n       *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n       *     multiple times in the same tick\n       * @param {String} [options.binaryType=nodebuffer] The type for binary data\n       * @param {Object} [options.extensions] An object containing the negotiated\n       *     extensions\n       * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n       *     client or server mode\n       * @param {Number} [options.maxPayload=0] The maximum allowed message length\n       * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n       *     not to skip UTF-8 validation for text and close messages\n       */\n      constructor(options = {}) {\n        super();\n        this._allowSynchronousEvents = options.allowSynchronousEvents !== void 0 ? options.allowSynchronousEvents : true;\n        this._binaryType = options.binaryType || BINARY_TYPES[0];\n        this._extensions = options.extensions || {};\n        this._isServer = !!options.isServer;\n        this._maxPayload = options.maxPayload | 0;\n        this._skipUTF8Validation = !!options.skipUTF8Validation;\n        this[kWebSocket] = void 0;\n        this._bufferedBytes = 0;\n        this._buffers = [];\n        this._compressed = false;\n        this._payloadLength = 0;\n        this._mask = void 0;\n        this._fragmented = 0;\n        this._masked = false;\n        this._fin = false;\n        this._opcode = 0;\n        this._totalPayloadLength = 0;\n        this._messageLength = 0;\n        this._fragments = [];\n        this._errored = false;\n        this._loop = false;\n        this._state = GET_INFO;\n      }\n      /**\n       * Implements `Writable.prototype._write()`.\n       *\n       * @param {Buffer} chunk The chunk of data to write\n       * @param {String} encoding The character encoding of `chunk`\n       * @param {Function} cb Callback\n       * @private\n       */\n      _write(chunk, encoding, cb) {\n        if (this._opcode === 8 && this._state == GET_INFO) return cb();\n        this._bufferedBytes += chunk.length;\n        this._buffers.push(chunk);\n        this.startLoop(cb);\n      }\n      /**\n       * Consumes `n` bytes from the buffered data.\n       *\n       * @param {Number} n The number of bytes to consume\n       * @return {Buffer} The consumed bytes\n       * @private\n       */\n      consume(n) {\n        this._bufferedBytes -= n;\n        if (n === this._buffers[0].length) return this._buffers.shift();\n        if (n < this._buffers[0].length) {\n          const buf = this._buffers[0];\n          this._buffers[0] = new FastBuffer(\n            buf.buffer,\n            buf.byteOffset + n,\n            buf.length - n\n          );\n          return new FastBuffer(buf.buffer, buf.byteOffset, n);\n        }\n        const dst = Buffer.allocUnsafe(n);\n        do {\n          const buf = this._buffers[0];\n          const offset = dst.length - n;\n          if (n >= buf.length) {\n            dst.set(this._buffers.shift(), offset);\n          } else {\n            dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n            this._buffers[0] = new FastBuffer(\n              buf.buffer,\n              buf.byteOffset + n,\n              buf.length - n\n            );\n          }\n          n -= buf.length;\n        } while (n > 0);\n        return dst;\n      }\n      /**\n       * Starts the parsing loop.\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      startLoop(cb) {\n        this._loop = true;\n        do {\n          switch (this._state) {\n            case GET_INFO:\n              this.getInfo(cb);\n              break;\n            case GET_PAYLOAD_LENGTH_16:\n              this.getPayloadLength16(cb);\n              break;\n            case GET_PAYLOAD_LENGTH_64:\n              this.getPayloadLength64(cb);\n              break;\n            case GET_MASK:\n              this.getMask();\n              break;\n            case GET_DATA:\n              this.getData(cb);\n              break;\n            case INFLATING:\n            case DEFER_EVENT:\n              this._loop = false;\n              return;\n          }\n        } while (this._loop);\n        if (!this._errored) cb();\n      }\n      /**\n       * Reads the first two bytes of a frame.\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      getInfo(cb) {\n        if (this._bufferedBytes < 2) {\n          this._loop = false;\n          return;\n        }\n        const buf = this.consume(2);\n        if ((buf[0] & 48) !== 0) {\n          const error = this.createError(\n            RangeError,\n            \"RSV2 and RSV3 must be clear\",\n            true,\n            1002,\n            \"WS_ERR_UNEXPECTED_RSV_2_3\"\n          );\n          cb(error);\n          return;\n        }\n        const compressed = (buf[0] & 64) === 64;\n        if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n          const error = this.createError(\n            RangeError,\n            \"RSV1 must be clear\",\n            true,\n            1002,\n            \"WS_ERR_UNEXPECTED_RSV_1\"\n          );\n          cb(error);\n          return;\n        }\n        this._fin = (buf[0] & 128) === 128;\n        this._opcode = buf[0] & 15;\n        this._payloadLength = buf[1] & 127;\n        if (this._opcode === 0) {\n          if (compressed) {\n            const error = this.createError(\n              RangeError,\n              \"RSV1 must be clear\",\n              true,\n              1002,\n              \"WS_ERR_UNEXPECTED_RSV_1\"\n            );\n            cb(error);\n            return;\n          }\n          if (!this._fragmented) {\n            const error = this.createError(\n              RangeError,\n              \"invalid opcode 0\",\n              true,\n              1002,\n              \"WS_ERR_INVALID_OPCODE\"\n            );\n            cb(error);\n            return;\n          }\n          this._opcode = this._fragmented;\n        } else if (this._opcode === 1 || this._opcode === 2) {\n          if (this._fragmented) {\n            const error = this.createError(\n              RangeError,\n              `invalid opcode ${this._opcode}`,\n              true,\n              1002,\n              \"WS_ERR_INVALID_OPCODE\"\n            );\n            cb(error);\n            return;\n          }\n          this._compressed = compressed;\n        } else if (this._opcode > 7 && this._opcode < 11) {\n          if (!this._fin) {\n            const error = this.createError(\n              RangeError,\n              \"FIN must be set\",\n              true,\n              1002,\n              \"WS_ERR_EXPECTED_FIN\"\n            );\n            cb(error);\n            return;\n          }\n          if (compressed) {\n            const error = this.createError(\n              RangeError,\n              \"RSV1 must be clear\",\n              true,\n              1002,\n              \"WS_ERR_UNEXPECTED_RSV_1\"\n            );\n            cb(error);\n            return;\n          }\n          if (this._payloadLength > 125 || this._opcode === 8 && this._payloadLength === 1) {\n            const error = this.createError(\n              RangeError,\n              `invalid payload length ${this._payloadLength}`,\n              true,\n              1002,\n              \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\"\n            );\n            cb(error);\n            return;\n          }\n        } else {\n          const error = this.createError(\n            RangeError,\n            `invalid opcode ${this._opcode}`,\n            true,\n            1002,\n            \"WS_ERR_INVALID_OPCODE\"\n          );\n          cb(error);\n          return;\n        }\n        if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n        this._masked = (buf[1] & 128) === 128;\n        if (this._isServer) {\n          if (!this._masked) {\n            const error = this.createError(\n              RangeError,\n              \"MASK must be set\",\n              true,\n              1002,\n              \"WS_ERR_EXPECTED_MASK\"\n            );\n            cb(error);\n            return;\n          }\n        } else if (this._masked) {\n          const error = this.createError(\n            RangeError,\n            \"MASK must be clear\",\n            true,\n            1002,\n            \"WS_ERR_UNEXPECTED_MASK\"\n          );\n          cb(error);\n          return;\n        }\n        if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n        else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n        else this.haveLength(cb);\n      }\n      /**\n       * Gets extended payload length (7+16).\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      getPayloadLength16(cb) {\n        if (this._bufferedBytes < 2) {\n          this._loop = false;\n          return;\n        }\n        this._payloadLength = this.consume(2).readUInt16BE(0);\n        this.haveLength(cb);\n      }\n      /**\n       * Gets extended payload length (7+64).\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      getPayloadLength64(cb) {\n        if (this._bufferedBytes < 8) {\n          this._loop = false;\n          return;\n        }\n        const buf = this.consume(8);\n        const num = buf.readUInt32BE(0);\n        if (num > Math.pow(2, 53 - 32) - 1) {\n          const error = this.createError(\n            RangeError,\n            \"Unsupported WebSocket frame: payload length > 2^53 - 1\",\n            false,\n            1009,\n            \"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH\"\n          );\n          cb(error);\n          return;\n        }\n        this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n        this.haveLength(cb);\n      }\n      /**\n       * Payload length has been read.\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      haveLength(cb) {\n        if (this._payloadLength && this._opcode < 8) {\n          this._totalPayloadLength += this._payloadLength;\n          if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n            const error = this.createError(\n              RangeError,\n              \"Max payload size exceeded\",\n              false,\n              1009,\n              \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\"\n            );\n            cb(error);\n            return;\n          }\n        }\n        if (this._masked) this._state = GET_MASK;\n        else this._state = GET_DATA;\n      }\n      /**\n       * Reads mask bytes.\n       *\n       * @private\n       */\n      getMask() {\n        if (this._bufferedBytes < 4) {\n          this._loop = false;\n          return;\n        }\n        this._mask = this.consume(4);\n        this._state = GET_DATA;\n      }\n      /**\n       * Reads data bytes.\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      getData(cb) {\n        let data = EMPTY_BUFFER;\n        if (this._payloadLength) {\n          if (this._bufferedBytes < this._payloadLength) {\n            this._loop = false;\n            return;\n          }\n          data = this.consume(this._payloadLength);\n          if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) {\n            unmask(data, this._mask);\n          }\n        }\n        if (this._opcode > 7) {\n          this.controlMessage(data, cb);\n          return;\n        }\n        if (this._compressed) {\n          this._state = INFLATING;\n          this.decompress(data, cb);\n          return;\n        }\n        if (data.length) {\n          this._messageLength = this._totalPayloadLength;\n          this._fragments.push(data);\n        }\n        this.dataMessage(cb);\n      }\n      /**\n       * Decompresses data.\n       *\n       * @param {Buffer} data Compressed data\n       * @param {Function} cb Callback\n       * @private\n       */\n      decompress(data, cb) {\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n          if (err) return cb(err);\n          if (buf.length) {\n            this._messageLength += buf.length;\n            if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n              const error = this.createError(\n                RangeError,\n                \"Max payload size exceeded\",\n                false,\n                1009,\n                \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\"\n              );\n              cb(error);\n              return;\n            }\n            this._fragments.push(buf);\n          }\n          this.dataMessage(cb);\n          if (this._state === GET_INFO) this.startLoop(cb);\n        });\n      }\n      /**\n       * Handles a data message.\n       *\n       * @param {Function} cb Callback\n       * @private\n       */\n      dataMessage(cb) {\n        if (!this._fin) {\n          this._state = GET_INFO;\n          return;\n        }\n        const messageLength = this._messageLength;\n        const fragments = this._fragments;\n        this._totalPayloadLength = 0;\n        this._messageLength = 0;\n        this._fragmented = 0;\n        this._fragments = [];\n        if (this._opcode === 2) {\n          let data;\n          if (this._binaryType === \"nodebuffer\") {\n            data = concat(fragments, messageLength);\n          } else if (this._binaryType === \"arraybuffer\") {\n            data = toArrayBuffer(concat(fragments, messageLength));\n          } else if (this._binaryType === \"blob\") {\n            data = new Blob(fragments);\n          } else {\n            data = fragments;\n          }\n          if (this._allowSynchronousEvents) {\n            this.emit(\"message\", data, true);\n            this._state = GET_INFO;\n          } else {\n            this._state = DEFER_EVENT;\n            setImmediate(() => {\n              this.emit(\"message\", data, true);\n              this._state = GET_INFO;\n              this.startLoop(cb);\n            });\n          }\n        } else {\n          const buf = concat(fragments, messageLength);\n          if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n            const error = this.createError(\n              Error,\n              \"invalid UTF-8 sequence\",\n              true,\n              1007,\n              \"WS_ERR_INVALID_UTF8\"\n            );\n            cb(error);\n            return;\n          }\n          if (this._state === INFLATING || this._allowSynchronousEvents) {\n            this.emit(\"message\", buf, false);\n            this._state = GET_INFO;\n          } else {\n            this._state = DEFER_EVENT;\n            setImmediate(() => {\n              this.emit(\"message\", buf, false);\n              this._state = GET_INFO;\n              this.startLoop(cb);\n            });\n          }\n        }\n      }\n      /**\n       * Handles a control message.\n       *\n       * @param {Buffer} data Data to handle\n       * @return {(Error|RangeError|undefined)} A possible error\n       * @private\n       */\n      controlMessage(data, cb) {\n        if (this._opcode === 8) {\n          if (data.length === 0) {\n            this._loop = false;\n            this.emit(\"conclude\", 1005, EMPTY_BUFFER);\n            this.end();\n          } else {\n            const code = data.readUInt16BE(0);\n            if (!isValidStatusCode(code)) {\n              const error = this.createError(\n                RangeError,\n                `invalid status code ${code}`,\n                true,\n                1002,\n                \"WS_ERR_INVALID_CLOSE_CODE\"\n              );\n              cb(error);\n              return;\n            }\n            const buf = new FastBuffer(\n              data.buffer,\n              data.byteOffset + 2,\n              data.length - 2\n            );\n            if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n              const error = this.createError(\n                Error,\n                \"invalid UTF-8 sequence\",\n                true,\n                1007,\n                \"WS_ERR_INVALID_UTF8\"\n              );\n              cb(error);\n              return;\n            }\n            this._loop = false;\n            this.emit(\"conclude\", code, buf);\n            this.end();\n          }\n          this._state = GET_INFO;\n          return;\n        }\n        if (this._allowSynchronousEvents) {\n          this.emit(this._opcode === 9 ? \"ping\" : \"pong\", data);\n          this._state = GET_INFO;\n        } else {\n          this._state = DEFER_EVENT;\n          setImmediate(() => {\n            this.emit(this._opcode === 9 ? \"ping\" : \"pong\", data);\n            this._state = GET_INFO;\n            this.startLoop(cb);\n          });\n        }\n      }\n      /**\n       * Builds an error object.\n       *\n       * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n       * @param {String} message The error message\n       * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n       *     `message`\n       * @param {Number} statusCode The status code\n       * @param {String} errorCode The exposed error code\n       * @return {(Error|RangeError)} The error\n       * @private\n       */\n      createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n        this._loop = false;\n        this._errored = true;\n        const err = new ErrorCtor(\n          prefix ? `Invalid WebSocket frame: ${message}` : message\n        );\n        Error.captureStackTrace(err, this.createError);\n        err.code = errorCode;\n        err[kStatusCode] = statusCode;\n        return err;\n      }\n    };\n    module.exports = Receiver2;\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/sender.js\nvar require_sender = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/sender.js\"(exports, module) {\n    \"use strict\";\n    var { Duplex } = __require(\"stream\");\n    var { randomFillSync } = __require(\"crypto\");\n    var PerMessageDeflate = require_permessage_deflate();\n    var { EMPTY_BUFFER, kWebSocket, NOOP } = require_constants();\n    var { isBlob, isValidStatusCode } = require_validation();\n    var { mask: applyMask, toBuffer } = require_buffer_util();\n    var kByteLength = Symbol(\"kByteLength\");\n    var maskBuffer = Buffer.alloc(4);\n    var RANDOM_POOL_SIZE = 8 * 1024;\n    var randomPool;\n    var randomPoolPointer = RANDOM_POOL_SIZE;\n    var DEFAULT = 0;\n    var DEFLATING = 1;\n    var GET_BLOB_DATA = 2;\n    var Sender2 = class _Sender {\n      /**\n       * Creates a Sender instance.\n       *\n       * @param {Duplex} socket The connection socket\n       * @param {Object} [extensions] An object containing the negotiated extensions\n       * @param {Function} [generateMask] The function used to generate the masking\n       *     key\n       */\n      constructor(socket, extensions, generateMask) {\n        this._extensions = extensions || {};\n        if (generateMask) {\n          this._generateMask = generateMask;\n          this._maskBuffer = Buffer.alloc(4);\n        }\n        this._socket = socket;\n        this._firstFragment = true;\n        this._compress = false;\n        this._bufferedBytes = 0;\n        this._queue = [];\n        this._state = DEFAULT;\n        this.onerror = NOOP;\n        this[kWebSocket] = void 0;\n      }\n      /**\n       * Frames a piece of data according to the HyBi WebSocket protocol.\n       *\n       * @param {(Buffer|String)} data The data to frame\n       * @param {Object} options Options object\n       * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n       *     FIN bit\n       * @param {Function} [options.generateMask] The function used to generate the\n       *     masking key\n       * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n       *     `data`\n       * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n       *     key\n       * @param {Number} options.opcode The opcode\n       * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n       *     modified\n       * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n       *     RSV1 bit\n       * @return {(Buffer|String)[]} The framed data\n       * @public\n       */\n      static frame(data, options) {\n        let mask;\n        let merge = false;\n        let offset = 2;\n        let skipMasking = false;\n        if (options.mask) {\n          mask = options.maskBuffer || maskBuffer;\n          if (options.generateMask) {\n            options.generateMask(mask);\n          } else {\n            if (randomPoolPointer === RANDOM_POOL_SIZE) {\n              if (randomPool === void 0) {\n                randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n              }\n              randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n              randomPoolPointer = 0;\n            }\n            mask[0] = randomPool[randomPoolPointer++];\n            mask[1] = randomPool[randomPoolPointer++];\n            mask[2] = randomPool[randomPoolPointer++];\n            mask[3] = randomPool[randomPoolPointer++];\n          }\n          skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n          offset = 6;\n        }\n        let dataLength;\n        if (typeof data === \"string\") {\n          if ((!options.mask || skipMasking) && options[kByteLength] !== void 0) {\n            dataLength = options[kByteLength];\n          } else {\n            data = Buffer.from(data);\n            dataLength = data.length;\n          }\n        } else {\n          dataLength = data.length;\n          merge = options.mask && options.readOnly && !skipMasking;\n        }\n        let payloadLength = dataLength;\n        if (dataLength >= 65536) {\n          offset += 8;\n          payloadLength = 127;\n        } else if (dataLength > 125) {\n          offset += 2;\n          payloadLength = 126;\n        }\n        const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n        target[0] = options.fin ? options.opcode | 128 : options.opcode;\n        if (options.rsv1) target[0] |= 64;\n        target[1] = payloadLength;\n        if (payloadLength === 126) {\n          target.writeUInt16BE(dataLength, 2);\n        } else if (payloadLength === 127) {\n          target[2] = target[3] = 0;\n          target.writeUIntBE(dataLength, 4, 6);\n        }\n        if (!options.mask) return [target, data];\n        target[1] |= 128;\n        target[offset - 4] = mask[0];\n        target[offset - 3] = mask[1];\n        target[offset - 2] = mask[2];\n        target[offset - 1] = mask[3];\n        if (skipMasking) return [target, data];\n        if (merge) {\n          applyMask(data, mask, target, offset, dataLength);\n          return [target];\n        }\n        applyMask(data, mask, data, 0, dataLength);\n        return [target, data];\n      }\n      /**\n       * Sends a close message to the other peer.\n       *\n       * @param {Number} [code] The status code component of the body\n       * @param {(String|Buffer)} [data] The message component of the body\n       * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n       * @param {Function} [cb] Callback\n       * @public\n       */\n      close(code, data, mask, cb) {\n        let buf;\n        if (code === void 0) {\n          buf = EMPTY_BUFFER;\n        } else if (typeof code !== \"number\" || !isValidStatusCode(code)) {\n          throw new TypeError(\"First argument must be a valid error code number\");\n        } else if (data === void 0 || !data.length) {\n          buf = Buffer.allocUnsafe(2);\n          buf.writeUInt16BE(code, 0);\n        } else {\n          const length = Buffer.byteLength(data);\n          if (length > 123) {\n            throw new RangeError(\"The message must not be greater than 123 bytes\");\n          }\n          buf = Buffer.allocUnsafe(2 + length);\n          buf.writeUInt16BE(code, 0);\n          if (typeof data === \"string\") {\n            buf.write(data, 2);\n          } else {\n            buf.set(data, 2);\n          }\n        }\n        const options = {\n          [kByteLength]: buf.length,\n          fin: true,\n          generateMask: this._generateMask,\n          mask,\n          maskBuffer: this._maskBuffer,\n          opcode: 8,\n          readOnly: false,\n          rsv1: false\n        };\n        if (this._state !== DEFAULT) {\n          this.enqueue([this.dispatch, buf, false, options, cb]);\n        } else {\n          this.sendFrame(_Sender.frame(buf, options), cb);\n        }\n      }\n      /**\n       * Sends a ping message to the other peer.\n       *\n       * @param {*} data The message to send\n       * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n       * @param {Function} [cb] Callback\n       * @public\n       */\n      ping(data, mask, cb) {\n        let byteLength;\n        let readOnly;\n        if (typeof data === \"string\") {\n          byteLength = Buffer.byteLength(data);\n          readOnly = false;\n        } else if (isBlob(data)) {\n          byteLength = data.size;\n          readOnly = false;\n        } else {\n          data = toBuffer(data);\n          byteLength = data.length;\n          readOnly = toBuffer.readOnly;\n        }\n        if (byteLength > 125) {\n          throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        const options = {\n          [kByteLength]: byteLength,\n          fin: true,\n          generateMask: this._generateMask,\n          mask,\n          maskBuffer: this._maskBuffer,\n          opcode: 9,\n          readOnly,\n          rsv1: false\n        };\n        if (isBlob(data)) {\n          if (this._state !== DEFAULT) {\n            this.enqueue([this.getBlobData, data, false, options, cb]);\n          } else {\n            this.getBlobData(data, false, options, cb);\n          }\n        } else if (this._state !== DEFAULT) {\n          this.enqueue([this.dispatch, data, false, options, cb]);\n        } else {\n          this.sendFrame(_Sender.frame(data, options), cb);\n        }\n      }\n      /**\n       * Sends a pong message to the other peer.\n       *\n       * @param {*} data The message to send\n       * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n       * @param {Function} [cb] Callback\n       * @public\n       */\n      pong(data, mask, cb) {\n        let byteLength;\n        let readOnly;\n        if (typeof data === \"string\") {\n          byteLength = Buffer.byteLength(data);\n          readOnly = false;\n        } else if (isBlob(data)) {\n          byteLength = data.size;\n          readOnly = false;\n        } else {\n          data = toBuffer(data);\n          byteLength = data.length;\n          readOnly = toBuffer.readOnly;\n        }\n        if (byteLength > 125) {\n          throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        const options = {\n          [kByteLength]: byteLength,\n          fin: true,\n          generateMask: this._generateMask,\n          mask,\n          maskBuffer: this._maskBuffer,\n          opcode: 10,\n          readOnly,\n          rsv1: false\n        };\n        if (isBlob(data)) {\n          if (this._state !== DEFAULT) {\n            this.enqueue([this.getBlobData, data, false, options, cb]);\n          } else {\n            this.getBlobData(data, false, options, cb);\n          }\n        } else if (this._state !== DEFAULT) {\n          this.enqueue([this.dispatch, data, false, options, cb]);\n        } else {\n          this.sendFrame(_Sender.frame(data, options), cb);\n        }\n      }\n      /**\n       * Sends a data message to the other peer.\n       *\n       * @param {*} data The message to send\n       * @param {Object} options Options object\n       * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n       *     or text\n       * @param {Boolean} [options.compress=false] Specifies whether or not to\n       *     compress `data`\n       * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n       *     last one\n       * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n       *     `data`\n       * @param {Function} [cb] Callback\n       * @public\n       */\n      send(data, options, cb) {\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        let opcode = options.binary ? 2 : 1;\n        let rsv1 = options.compress;\n        let byteLength;\n        let readOnly;\n        if (typeof data === \"string\") {\n          byteLength = Buffer.byteLength(data);\n          readOnly = false;\n        } else if (isBlob(data)) {\n          byteLength = data.size;\n          readOnly = false;\n        } else {\n          data = toBuffer(data);\n          byteLength = data.length;\n          readOnly = toBuffer.readOnly;\n        }\n        if (this._firstFragment) {\n          this._firstFragment = false;\n          if (rsv1 && perMessageDeflate && perMessageDeflate.params[perMessageDeflate._isServer ? \"server_no_context_takeover\" : \"client_no_context_takeover\"]) {\n            rsv1 = byteLength >= perMessageDeflate._threshold;\n          }\n          this._compress = rsv1;\n        } else {\n          rsv1 = false;\n          opcode = 0;\n        }\n        if (options.fin) this._firstFragment = true;\n        const opts = {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1\n        };\n        if (isBlob(data)) {\n          if (this._state !== DEFAULT) {\n            this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n          } else {\n            this.getBlobData(data, this._compress, opts, cb);\n          }\n        } else if (this._state !== DEFAULT) {\n          this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n        } else {\n          this.dispatch(data, this._compress, opts, cb);\n        }\n      }\n      /**\n       * Gets the contents of a blob as binary data.\n       *\n       * @param {Blob} blob The blob\n       * @param {Boolean} [compress=false] Specifies whether or not to compress\n       *     the data\n       * @param {Object} options Options object\n       * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n       *     FIN bit\n       * @param {Function} [options.generateMask] The function used to generate the\n       *     masking key\n       * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n       *     `data`\n       * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n       *     key\n       * @param {Number} options.opcode The opcode\n       * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n       *     modified\n       * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n       *     RSV1 bit\n       * @param {Function} [cb] Callback\n       * @private\n       */\n      getBlobData(blob, compress, options, cb) {\n        this._bufferedBytes += options[kByteLength];\n        this._state = GET_BLOB_DATA;\n        blob.arrayBuffer().then((arrayBuffer) => {\n          if (this._socket.destroyed) {\n            const err = new Error(\n              \"The socket was closed while the blob was being read\"\n            );\n            process.nextTick(callCallbacks, this, err, cb);\n            return;\n          }\n          this._bufferedBytes -= options[kByteLength];\n          const data = toBuffer(arrayBuffer);\n          if (!compress) {\n            this._state = DEFAULT;\n            this.sendFrame(_Sender.frame(data, options), cb);\n            this.dequeue();\n          } else {\n            this.dispatch(data, compress, options, cb);\n          }\n        }).catch((err) => {\n          process.nextTick(onError, this, err, cb);\n        });\n      }\n      /**\n       * Dispatches a message.\n       *\n       * @param {(Buffer|String)} data The message to send\n       * @param {Boolean} [compress=false] Specifies whether or not to compress\n       *     `data`\n       * @param {Object} options Options object\n       * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n       *     FIN bit\n       * @param {Function} [options.generateMask] The function used to generate the\n       *     masking key\n       * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n       *     `data`\n       * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n       *     key\n       * @param {Number} options.opcode The opcode\n       * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n       *     modified\n       * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n       *     RSV1 bit\n       * @param {Function} [cb] Callback\n       * @private\n       */\n      dispatch(data, compress, options, cb) {\n        if (!compress) {\n          this.sendFrame(_Sender.frame(data, options), cb);\n          return;\n        }\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        this._bufferedBytes += options[kByteLength];\n        this._state = DEFLATING;\n        perMessageDeflate.compress(data, options.fin, (_, buf) => {\n          if (this._socket.destroyed) {\n            const err = new Error(\n              \"The socket was closed while data was being compressed\"\n            );\n            callCallbacks(this, err, cb);\n            return;\n          }\n          this._bufferedBytes -= options[kByteLength];\n          this._state = DEFAULT;\n          options.readOnly = false;\n          this.sendFrame(_Sender.frame(buf, options), cb);\n          this.dequeue();\n        });\n      }\n      /**\n       * Executes queued send operations.\n       *\n       * @private\n       */\n      dequeue() {\n        while (this._state === DEFAULT && this._queue.length) {\n          const params = this._queue.shift();\n          this._bufferedBytes -= params[3][kByteLength];\n          Reflect.apply(params[0], this, params.slice(1));\n        }\n      }\n      /**\n       * Enqueues a send operation.\n       *\n       * @param {Array} params Send operation parameters.\n       * @private\n       */\n      enqueue(params) {\n        this._bufferedBytes += params[3][kByteLength];\n        this._queue.push(params);\n      }\n      /**\n       * Sends a frame.\n       *\n       * @param {Buffer[]} list The frame to send\n       * @param {Function} [cb] Callback\n       * @private\n       */\n      sendFrame(list, cb) {\n        if (list.length === 2) {\n          this._socket.cork();\n          this._socket.write(list[0]);\n          this._socket.write(list[1], cb);\n          this._socket.uncork();\n        } else {\n          this._socket.write(list[0], cb);\n        }\n      }\n    };\n    module.exports = Sender2;\n    function callCallbacks(sender, err, cb) {\n      if (typeof cb === \"function\") cb(err);\n      for (let i = 0; i < sender._queue.length; i++) {\n        const params = sender._queue[i];\n        const callback = params[params.length - 1];\n        if (typeof callback === \"function\") callback(err);\n      }\n    }\n    function onError(sender, err, cb) {\n      callCallbacks(sender, err, cb);\n      sender.onerror(err);\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/event-target.js\nvar require_event_target = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/event-target.js\"(exports, module) {\n    \"use strict\";\n    var { kForOnEventAttribute, kListener } = require_constants();\n    var kCode = Symbol(\"kCode\");\n    var kData = Symbol(\"kData\");\n    var kError = Symbol(\"kError\");\n    var kMessage = Symbol(\"kMessage\");\n    var kReason = Symbol(\"kReason\");\n    var kTarget = Symbol(\"kTarget\");\n    var kType = Symbol(\"kType\");\n    var kWasClean = Symbol(\"kWasClean\");\n    var Event = class {\n      /**\n       * Create a new `Event`.\n       *\n       * @param {String} type The name of the event\n       * @throws {TypeError} If the `type` argument is not specified\n       */\n      constructor(type) {\n        this[kTarget] = null;\n        this[kType] = type;\n      }\n      /**\n       * @type {*}\n       */\n      get target() {\n        return this[kTarget];\n      }\n      /**\n       * @type {String}\n       */\n      get type() {\n        return this[kType];\n      }\n    };\n    Object.defineProperty(Event.prototype, \"target\", { enumerable: true });\n    Object.defineProperty(Event.prototype, \"type\", { enumerable: true });\n    var CloseEvent = class extends Event {\n      /**\n       * Create a new `CloseEvent`.\n       *\n       * @param {String} type The name of the event\n       * @param {Object} [options] A dictionary object that allows for setting\n       *     attributes via object members of the same name\n       * @param {Number} [options.code=0] The status code explaining why the\n       *     connection was closed\n       * @param {String} [options.reason=''] A human-readable string explaining why\n       *     the connection was closed\n       * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n       *     connection was cleanly closed\n       */\n      constructor(type, options = {}) {\n        super(type);\n        this[kCode] = options.code === void 0 ? 0 : options.code;\n        this[kReason] = options.reason === void 0 ? \"\" : options.reason;\n        this[kWasClean] = options.wasClean === void 0 ? false : options.wasClean;\n      }\n      /**\n       * @type {Number}\n       */\n      get code() {\n        return this[kCode];\n      }\n      /**\n       * @type {String}\n       */\n      get reason() {\n        return this[kReason];\n      }\n      /**\n       * @type {Boolean}\n       */\n      get wasClean() {\n        return this[kWasClean];\n      }\n    };\n    Object.defineProperty(CloseEvent.prototype, \"code\", { enumerable: true });\n    Object.defineProperty(CloseEvent.prototype, \"reason\", { enumerable: true });\n    Object.defineProperty(CloseEvent.prototype, \"wasClean\", { enumerable: true });\n    var ErrorEvent = class extends Event {\n      /**\n       * Create a new `ErrorEvent`.\n       *\n       * @param {String} type The name of the event\n       * @param {Object} [options] A dictionary object that allows for setting\n       *     attributes via object members of the same name\n       * @param {*} [options.error=null] The error that generated this event\n       * @param {String} [options.message=''] The error message\n       */\n      constructor(type, options = {}) {\n        super(type);\n        this[kError] = options.error === void 0 ? null : options.error;\n        this[kMessage] = options.message === void 0 ? \"\" : options.message;\n      }\n      /**\n       * @type {*}\n       */\n      get error() {\n        return this[kError];\n      }\n      /**\n       * @type {String}\n       */\n      get message() {\n        return this[kMessage];\n      }\n    };\n    Object.defineProperty(ErrorEvent.prototype, \"error\", { enumerable: true });\n    Object.defineProperty(ErrorEvent.prototype, \"message\", { enumerable: true });\n    var MessageEvent = class extends Event {\n      /**\n       * Create a new `MessageEvent`.\n       *\n       * @param {String} type The name of the event\n       * @param {Object} [options] A dictionary object that allows for setting\n       *     attributes via object members of the same name\n       * @param {*} [options.data=null] The message content\n       */\n      constructor(type, options = {}) {\n        super(type);\n        this[kData] = options.data === void 0 ? null : options.data;\n      }\n      /**\n       * @type {*}\n       */\n      get data() {\n        return this[kData];\n      }\n    };\n    Object.defineProperty(MessageEvent.prototype, \"data\", { enumerable: true });\n    var EventTarget = {\n      /**\n       * Register an event listener.\n       *\n       * @param {String} type A string representing the event type to listen for\n       * @param {(Function|Object)} handler The listener to add\n       * @param {Object} [options] An options object specifies characteristics about\n       *     the event listener\n       * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n       *     listener should be invoked at most once after being added. If `true`,\n       *     the listener would be automatically removed when invoked.\n       * @public\n       */\n      addEventListener(type, handler, options = {}) {\n        for (const listener of this.listeners(type)) {\n          if (!options[kForOnEventAttribute] && listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n            return;\n          }\n        }\n        let wrapper;\n        if (type === \"message\") {\n          wrapper = function onMessage(data, isBinary) {\n            const event = new MessageEvent(\"message\", {\n              data: isBinary ? data : data.toString()\n            });\n            event[kTarget] = this;\n            callListener(handler, this, event);\n          };\n        } else if (type === \"close\") {\n          wrapper = function onClose(code, message) {\n            const event = new CloseEvent(\"close\", {\n              code,\n              reason: message.toString(),\n              wasClean: this._closeFrameReceived && this._closeFrameSent\n            });\n            event[kTarget] = this;\n            callListener(handler, this, event);\n          };\n        } else if (type === \"error\") {\n          wrapper = function onError(error) {\n            const event = new ErrorEvent(\"error\", {\n              error,\n              message: error.message\n            });\n            event[kTarget] = this;\n            callListener(handler, this, event);\n          };\n        } else if (type === \"open\") {\n          wrapper = function onOpen() {\n            const event = new Event(\"open\");\n            event[kTarget] = this;\n            callListener(handler, this, event);\n          };\n        } else {\n          return;\n        }\n        wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n        wrapper[kListener] = handler;\n        if (options.once) {\n          this.once(type, wrapper);\n        } else {\n          this.on(type, wrapper);\n        }\n      },\n      /**\n       * Remove an event listener.\n       *\n       * @param {String} type A string representing the event type to remove\n       * @param {(Function|Object)} handler The listener to remove\n       * @public\n       */\n      removeEventListener(type, handler) {\n        for (const listener of this.listeners(type)) {\n          if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n            this.removeListener(type, listener);\n            break;\n          }\n        }\n      }\n    };\n    module.exports = {\n      CloseEvent,\n      ErrorEvent,\n      Event,\n      EventTarget,\n      MessageEvent\n    };\n    function callListener(listener, thisArg, event) {\n      if (typeof listener === \"object\" && listener.handleEvent) {\n        listener.handleEvent.call(listener, event);\n      } else {\n        listener.call(thisArg, event);\n      }\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/extension.js\nvar require_extension = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/extension.js\"(exports, module) {\n    \"use strict\";\n    var { tokenChars } = require_validation();\n    function push(dest, name, elem) {\n      if (dest[name] === void 0) dest[name] = [elem];\n      else dest[name].push(elem);\n    }\n    function parse(header) {\n      const offers = /* @__PURE__ */ Object.create(null);\n      let params = /* @__PURE__ */ Object.create(null);\n      let mustUnescape = false;\n      let isEscaping = false;\n      let inQuotes = false;\n      let extensionName;\n      let paramName;\n      let start = -1;\n      let code = -1;\n      let end = -1;\n      let i = 0;\n      for (; i < header.length; i++) {\n        code = header.charCodeAt(i);\n        if (extensionName === void 0) {\n          if (end === -1 && tokenChars[code] === 1) {\n            if (start === -1) start = i;\n          } else if (i !== 0 && (code === 32 || code === 9)) {\n            if (end === -1 && start !== -1) end = i;\n          } else if (code === 59 || code === 44) {\n            if (start === -1) {\n              throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n            if (end === -1) end = i;\n            const name = header.slice(start, end);\n            if (code === 44) {\n              push(offers, name, params);\n              params = /* @__PURE__ */ Object.create(null);\n            } else {\n              extensionName = name;\n            }\n            start = end = -1;\n          } else {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n        } else if (paramName === void 0) {\n          if (end === -1 && tokenChars[code] === 1) {\n            if (start === -1) start = i;\n          } else if (code === 32 || code === 9) {\n            if (end === -1 && start !== -1) end = i;\n          } else if (code === 59 || code === 44) {\n            if (start === -1) {\n              throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n            if (end === -1) end = i;\n            push(params, header.slice(start, end), true);\n            if (code === 44) {\n              push(offers, extensionName, params);\n              params = /* @__PURE__ */ Object.create(null);\n              extensionName = void 0;\n            }\n            start = end = -1;\n          } else if (code === 61 && start !== -1 && end === -1) {\n            paramName = header.slice(start, i);\n            start = end = -1;\n          } else {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n        } else {\n          if (isEscaping) {\n            if (tokenChars[code] !== 1) {\n              throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n            if (start === -1) start = i;\n            else if (!mustUnescape) mustUnescape = true;\n            isEscaping = false;\n          } else if (inQuotes) {\n            if (tokenChars[code] === 1) {\n              if (start === -1) start = i;\n            } else if (code === 34 && start !== -1) {\n              inQuotes = false;\n              end = i;\n            } else if (code === 92) {\n              isEscaping = true;\n            } else {\n              throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n          } else if (code === 34 && header.charCodeAt(i - 1) === 61) {\n            inQuotes = true;\n          } else if (end === -1 && tokenChars[code] === 1) {\n            if (start === -1) start = i;\n          } else if (start !== -1 && (code === 32 || code === 9)) {\n            if (end === -1) end = i;\n          } else if (code === 59 || code === 44) {\n            if (start === -1) {\n              throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n            if (end === -1) end = i;\n            let value = header.slice(start, end);\n            if (mustUnescape) {\n              value = value.replace(/\\\\/g, \"\");\n              mustUnescape = false;\n            }\n            push(params, paramName, value);\n            if (code === 44) {\n              push(offers, extensionName, params);\n              params = /* @__PURE__ */ Object.create(null);\n              extensionName = void 0;\n            }\n            paramName = void 0;\n            start = end = -1;\n          } else {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n        }\n      }\n      if (start === -1 || inQuotes || code === 32 || code === 9) {\n        throw new SyntaxError(\"Unexpected end of input\");\n      }\n      if (end === -1) end = i;\n      const token = header.slice(start, end);\n      if (extensionName === void 0) {\n        push(offers, token, params);\n      } else {\n        if (paramName === void 0) {\n          push(params, token, true);\n        } else if (mustUnescape) {\n          push(params, paramName, token.replace(/\\\\/g, \"\"));\n        } else {\n          push(params, paramName, token);\n        }\n        push(offers, extensionName, params);\n      }\n      return offers;\n    }\n    function format(extensions) {\n      return Object.keys(extensions).map((extension) => {\n        let configurations = extensions[extension];\n        if (!Array.isArray(configurations)) configurations = [configurations];\n        return configurations.map((params) => {\n          return [extension].concat(\n            Object.keys(params).map((k) => {\n              let values = params[k];\n              if (!Array.isArray(values)) values = [values];\n              return values.map((v) => v === true ? k : `${k}=${v}`).join(\"; \");\n            })\n          ).join(\"; \");\n        }).join(\", \");\n      }).join(\", \");\n    }\n    module.exports = { format, parse };\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket.js\nvar require_websocket = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket.js\"(exports, module) {\n    \"use strict\";\n    var EventEmitter = __require(\"events\");\n    var https = __require(\"https\");\n    var http = __require(\"http\");\n    var net = __require(\"net\");\n    var tls = __require(\"tls\");\n    var { randomBytes, createHash } = __require(\"crypto\");\n    var { Duplex, Readable } = __require(\"stream\");\n    var { URL } = __require(\"url\");\n    var PerMessageDeflate = require_permessage_deflate();\n    var Receiver2 = require_receiver();\n    var Sender2 = require_sender();\n    var { isBlob } = require_validation();\n    var {\n      BINARY_TYPES,\n      EMPTY_BUFFER,\n      GUID,\n      kForOnEventAttribute,\n      kListener,\n      kStatusCode,\n      kWebSocket,\n      NOOP\n    } = require_constants();\n    var {\n      EventTarget: { addEventListener, removeEventListener }\n    } = require_event_target();\n    var { format, parse } = require_extension();\n    var { toBuffer } = require_buffer_util();\n    var closeTimeout = 30 * 1e3;\n    var kAborted = Symbol(\"kAborted\");\n    var protocolVersions = [8, 13];\n    var readyStates = [\"CONNECTING\", \"OPEN\", \"CLOSING\", \"CLOSED\"];\n    var subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n    var WebSocket2 = class _WebSocket extends EventEmitter {\n      /**\n       * Create a new `WebSocket`.\n       *\n       * @param {(String|URL)} address The URL to which to connect\n       * @param {(String|String[])} [protocols] The subprotocols\n       * @param {Object} [options] Connection options\n       */\n      constructor(address, protocols, options) {\n        super();\n        this._binaryType = BINARY_TYPES[0];\n        this._closeCode = 1006;\n        this._closeFrameReceived = false;\n        this._closeFrameSent = false;\n        this._closeMessage = EMPTY_BUFFER;\n        this._closeTimer = null;\n        this._errorEmitted = false;\n        this._extensions = {};\n        this._paused = false;\n        this._protocol = \"\";\n        this._readyState = _WebSocket.CONNECTING;\n        this._receiver = null;\n        this._sender = null;\n        this._socket = null;\n        if (address !== null) {\n          this._bufferedAmount = 0;\n          this._isServer = false;\n          this._redirects = 0;\n          if (protocols === void 0) {\n            protocols = [];\n          } else if (!Array.isArray(protocols)) {\n            if (typeof protocols === \"object\" && protocols !== null) {\n              options = protocols;\n              protocols = [];\n            } else {\n              protocols = [protocols];\n            }\n          }\n          initAsClient(this, address, protocols, options);\n        } else {\n          this._autoPong = options.autoPong;\n          this._isServer = true;\n        }\n      }\n      /**\n       * For historical reasons, the custom \"nodebuffer\" type is used by the default\n       * instead of \"blob\".\n       *\n       * @type {String}\n       */\n      get binaryType() {\n        return this._binaryType;\n      }\n      set binaryType(type) {\n        if (!BINARY_TYPES.includes(type)) return;\n        this._binaryType = type;\n        if (this._receiver) this._receiver._binaryType = type;\n      }\n      /**\n       * @type {Number}\n       */\n      get bufferedAmount() {\n        if (!this._socket) return this._bufferedAmount;\n        return this._socket._writableState.length + this._sender._bufferedBytes;\n      }\n      /**\n       * @type {String}\n       */\n      get extensions() {\n        return Object.keys(this._extensions).join();\n      }\n      /**\n       * @type {Boolean}\n       */\n      get isPaused() {\n        return this._paused;\n      }\n      /**\n       * @type {Function}\n       */\n      /* istanbul ignore next */\n      get onclose() {\n        return null;\n      }\n      /**\n       * @type {Function}\n       */\n      /* istanbul ignore next */\n      get onerror() {\n        return null;\n      }\n      /**\n       * @type {Function}\n       */\n      /* istanbul ignore next */\n      get onopen() {\n        return null;\n      }\n      /**\n       * @type {Function}\n       */\n      /* istanbul ignore next */\n      get onmessage() {\n        return null;\n      }\n      /**\n       * @type {String}\n       */\n      get protocol() {\n        return this._protocol;\n      }\n      /**\n       * @type {Number}\n       */\n      get readyState() {\n        return this._readyState;\n      }\n      /**\n       * @type {String}\n       */\n      get url() {\n        return this._url;\n      }\n      /**\n       * Set up the socket and the internal resources.\n       *\n       * @param {Duplex} socket The network socket between the server and client\n       * @param {Buffer} head The first packet of the upgraded stream\n       * @param {Object} options Options object\n       * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n       *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n       *     multiple times in the same tick\n       * @param {Function} [options.generateMask] The function used to generate the\n       *     masking key\n       * @param {Number} [options.maxPayload=0] The maximum allowed message size\n       * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n       *     not to skip UTF-8 validation for text and close messages\n       * @private\n       */\n      setSocket(socket, head, options) {\n        const receiver = new Receiver2({\n          allowSynchronousEvents: options.allowSynchronousEvents,\n          binaryType: this.binaryType,\n          extensions: this._extensions,\n          isServer: this._isServer,\n          maxPayload: options.maxPayload,\n          skipUTF8Validation: options.skipUTF8Validation\n        });\n        const sender = new Sender2(socket, this._extensions, options.generateMask);\n        this._receiver = receiver;\n        this._sender = sender;\n        this._socket = socket;\n        receiver[kWebSocket] = this;\n        sender[kWebSocket] = this;\n        socket[kWebSocket] = this;\n        receiver.on(\"conclude\", receiverOnConclude);\n        receiver.on(\"drain\", receiverOnDrain);\n        receiver.on(\"error\", receiverOnError);\n        receiver.on(\"message\", receiverOnMessage);\n        receiver.on(\"ping\", receiverOnPing);\n        receiver.on(\"pong\", receiverOnPong);\n        sender.onerror = senderOnError;\n        if (socket.setTimeout) socket.setTimeout(0);\n        if (socket.setNoDelay) socket.setNoDelay();\n        if (head.length > 0) socket.unshift(head);\n        socket.on(\"close\", socketOnClose);\n        socket.on(\"data\", socketOnData);\n        socket.on(\"end\", socketOnEnd);\n        socket.on(\"error\", socketOnError);\n        this._readyState = _WebSocket.OPEN;\n        this.emit(\"open\");\n      }\n      /**\n       * Emit the `'close'` event.\n       *\n       * @private\n       */\n      emitClose() {\n        if (!this._socket) {\n          this._readyState = _WebSocket.CLOSED;\n          this.emit(\"close\", this._closeCode, this._closeMessage);\n          return;\n        }\n        if (this._extensions[PerMessageDeflate.extensionName]) {\n          this._extensions[PerMessageDeflate.extensionName].cleanup();\n        }\n        this._receiver.removeAllListeners();\n        this._readyState = _WebSocket.CLOSED;\n        this.emit(\"close\", this._closeCode, this._closeMessage);\n      }\n      /**\n       * Start a closing handshake.\n       *\n       *          +----------+   +-----------+   +----------+\n       *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n       *    |     +----------+   +-----------+   +----------+     |\n       *          +----------+   +-----------+         |\n       * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n       *          +----------+   +-----------+   |\n       *    |           |                        |   +---+        |\n       *                +------------------------+-->|fin| - - - -\n       *    |         +---+                      |   +---+\n       *     - - - - -|fin|<---------------------+\n       *              +---+\n       *\n       * @param {Number} [code] Status code explaining why the connection is closing\n       * @param {(String|Buffer)} [data] The reason why the connection is\n       *     closing\n       * @public\n       */\n      close(code, data) {\n        if (this.readyState === _WebSocket.CLOSED) return;\n        if (this.readyState === _WebSocket.CONNECTING) {\n          const msg = \"WebSocket was closed before the connection was established\";\n          abortHandshake(this, this._req, msg);\n          return;\n        }\n        if (this.readyState === _WebSocket.CLOSING) {\n          if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {\n            this._socket.end();\n          }\n          return;\n        }\n        this._readyState = _WebSocket.CLOSING;\n        this._sender.close(code, data, !this._isServer, (err) => {\n          if (err) return;\n          this._closeFrameSent = true;\n          if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {\n            this._socket.end();\n          }\n        });\n        setCloseTimer(this);\n      }\n      /**\n       * Pause the socket.\n       *\n       * @public\n       */\n      pause() {\n        if (this.readyState === _WebSocket.CONNECTING || this.readyState === _WebSocket.CLOSED) {\n          return;\n        }\n        this._paused = true;\n        this._socket.pause();\n      }\n      /**\n       * Send a ping.\n       *\n       * @param {*} [data] The data to send\n       * @param {Boolean} [mask] Indicates whether or not to mask `data`\n       * @param {Function} [cb] Callback which is executed when the ping is sent\n       * @public\n       */\n      ping(data, mask, cb) {\n        if (this.readyState === _WebSocket.CONNECTING) {\n          throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n          cb = data;\n          data = mask = void 0;\n        } else if (typeof mask === \"function\") {\n          cb = mask;\n          mask = void 0;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== _WebSocket.OPEN) {\n          sendAfterClose(this, data, cb);\n          return;\n        }\n        if (mask === void 0) mask = !this._isServer;\n        this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n      }\n      /**\n       * Send a pong.\n       *\n       * @param {*} [data] The data to send\n       * @param {Boolean} [mask] Indicates whether or not to mask `data`\n       * @param {Function} [cb] Callback which is executed when the pong is sent\n       * @public\n       */\n      pong(data, mask, cb) {\n        if (this.readyState === _WebSocket.CONNECTING) {\n          throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n          cb = data;\n          data = mask = void 0;\n        } else if (typeof mask === \"function\") {\n          cb = mask;\n          mask = void 0;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== _WebSocket.OPEN) {\n          sendAfterClose(this, data, cb);\n          return;\n        }\n        if (mask === void 0) mask = !this._isServer;\n        this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n      }\n      /**\n       * Resume the socket.\n       *\n       * @public\n       */\n      resume() {\n        if (this.readyState === _WebSocket.CONNECTING || this.readyState === _WebSocket.CLOSED) {\n          return;\n        }\n        this._paused = false;\n        if (!this._receiver._writableState.needDrain) this._socket.resume();\n      }\n      /**\n       * Send a data message.\n       *\n       * @param {*} data The message to send\n       * @param {Object} [options] Options object\n       * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n       *     text\n       * @param {Boolean} [options.compress] Specifies whether or not to compress\n       *     `data`\n       * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n       *     last one\n       * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n       * @param {Function} [cb] Callback which is executed when data is written out\n       * @public\n       */\n      send(data, options, cb) {\n        if (this.readyState === _WebSocket.CONNECTING) {\n          throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof options === \"function\") {\n          cb = options;\n          options = {};\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== _WebSocket.OPEN) {\n          sendAfterClose(this, data, cb);\n          return;\n        }\n        const opts = {\n          binary: typeof data !== \"string\",\n          mask: !this._isServer,\n          compress: true,\n          fin: true,\n          ...options\n        };\n        if (!this._extensions[PerMessageDeflate.extensionName]) {\n          opts.compress = false;\n        }\n        this._sender.send(data || EMPTY_BUFFER, opts, cb);\n      }\n      /**\n       * Forcibly close the connection.\n       *\n       * @public\n       */\n      terminate() {\n        if (this.readyState === _WebSocket.CLOSED) return;\n        if (this.readyState === _WebSocket.CONNECTING) {\n          const msg = \"WebSocket was closed before the connection was established\";\n          abortHandshake(this, this._req, msg);\n          return;\n        }\n        if (this._socket) {\n          this._readyState = _WebSocket.CLOSING;\n          this._socket.destroy();\n        }\n      }\n    };\n    Object.defineProperty(WebSocket2, \"CONNECTING\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"CONNECTING\")\n    });\n    Object.defineProperty(WebSocket2.prototype, \"CONNECTING\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"CONNECTING\")\n    });\n    Object.defineProperty(WebSocket2, \"OPEN\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"OPEN\")\n    });\n    Object.defineProperty(WebSocket2.prototype, \"OPEN\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"OPEN\")\n    });\n    Object.defineProperty(WebSocket2, \"CLOSING\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"CLOSING\")\n    });\n    Object.defineProperty(WebSocket2.prototype, \"CLOSING\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"CLOSING\")\n    });\n    Object.defineProperty(WebSocket2, \"CLOSED\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"CLOSED\")\n    });\n    Object.defineProperty(WebSocket2.prototype, \"CLOSED\", {\n      enumerable: true,\n      value: readyStates.indexOf(\"CLOSED\")\n    });\n    [\n      \"binaryType\",\n      \"bufferedAmount\",\n      \"extensions\",\n      \"isPaused\",\n      \"protocol\",\n      \"readyState\",\n      \"url\"\n    ].forEach((property) => {\n      Object.defineProperty(WebSocket2.prototype, property, { enumerable: true });\n    });\n    [\"open\", \"error\", \"close\", \"message\"].forEach((method) => {\n      Object.defineProperty(WebSocket2.prototype, `on${method}`, {\n        enumerable: true,\n        get() {\n          for (const listener of this.listeners(method)) {\n            if (listener[kForOnEventAttribute]) return listener[kListener];\n          }\n          return null;\n        },\n        set(handler) {\n          for (const listener of this.listeners(method)) {\n            if (listener[kForOnEventAttribute]) {\n              this.removeListener(method, listener);\n              break;\n            }\n          }\n          if (typeof handler !== \"function\") return;\n          this.addEventListener(method, handler, {\n            [kForOnEventAttribute]: true\n          });\n        }\n      });\n    });\n    WebSocket2.prototype.addEventListener = addEventListener;\n    WebSocket2.prototype.removeEventListener = removeEventListener;\n    module.exports = WebSocket2;\n    function initAsClient(websocket, address, protocols, options) {\n      const opts = {\n        allowSynchronousEvents: true,\n        autoPong: true,\n        protocolVersion: protocolVersions[1],\n        maxPayload: 100 * 1024 * 1024,\n        skipUTF8Validation: false,\n        perMessageDeflate: true,\n        followRedirects: false,\n        maxRedirects: 10,\n        ...options,\n        socketPath: void 0,\n        hostname: void 0,\n        protocol: void 0,\n        timeout: void 0,\n        method: \"GET\",\n        host: void 0,\n        path: void 0,\n        port: void 0\n      };\n      websocket._autoPong = opts.autoPong;\n      if (!protocolVersions.includes(opts.protocolVersion)) {\n        throw new RangeError(\n          `Unsupported protocol version: ${opts.protocolVersion} (supported versions: ${protocolVersions.join(\", \")})`\n        );\n      }\n      let parsedUrl;\n      if (address instanceof URL) {\n        parsedUrl = address;\n      } else {\n        try {\n          parsedUrl = new URL(address);\n        } catch (e) {\n          throw new SyntaxError(`Invalid URL: ${address}`);\n        }\n      }\n      if (parsedUrl.protocol === \"http:\") {\n        parsedUrl.protocol = \"ws:\";\n      } else if (parsedUrl.protocol === \"https:\") {\n        parsedUrl.protocol = \"wss:\";\n      }\n      websocket._url = parsedUrl.href;\n      const isSecure = parsedUrl.protocol === \"wss:\";\n      const isIpcUrl = parsedUrl.protocol === \"ws+unix:\";\n      let invalidUrlMessage;\n      if (parsedUrl.protocol !== \"ws:\" && !isSecure && !isIpcUrl) {\n        invalidUrlMessage = `The URL's protocol must be one of \"ws:\", \"wss:\", \"http:\", \"https\", or \"ws+unix:\"`;\n      } else if (isIpcUrl && !parsedUrl.pathname) {\n        invalidUrlMessage = \"The URL's pathname is empty\";\n      } else if (parsedUrl.hash) {\n        invalidUrlMessage = \"The URL contains a fragment identifier\";\n      }\n      if (invalidUrlMessage) {\n        const err = new SyntaxError(invalidUrlMessage);\n        if (websocket._redirects === 0) {\n          throw err;\n        } else {\n          emitErrorAndClose(websocket, err);\n          return;\n        }\n      }\n      const defaultPort = isSecure ? 443 : 80;\n      const key = randomBytes(16).toString(\"base64\");\n      const request = isSecure ? https.request : http.request;\n      const protocolSet = /* @__PURE__ */ new Set();\n      let perMessageDeflate;\n      opts.createConnection = opts.createConnection || (isSecure ? tlsConnect : netConnect);\n      opts.defaultPort = opts.defaultPort || defaultPort;\n      opts.port = parsedUrl.port || defaultPort;\n      opts.host = parsedUrl.hostname.startsWith(\"[\") ? parsedUrl.hostname.slice(1, -1) : parsedUrl.hostname;\n      opts.headers = {\n        ...opts.headers,\n        \"Sec-WebSocket-Version\": opts.protocolVersion,\n        \"Sec-WebSocket-Key\": key,\n        Connection: \"Upgrade\",\n        Upgrade: \"websocket\"\n      };\n      opts.path = parsedUrl.pathname + parsedUrl.search;\n      opts.timeout = opts.handshakeTimeout;\n      if (opts.perMessageDeflate) {\n        perMessageDeflate = new PerMessageDeflate(\n          opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n          false,\n          opts.maxPayload\n        );\n        opts.headers[\"Sec-WebSocket-Extensions\"] = format({\n          [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n        });\n      }\n      if (protocols.length) {\n        for (const protocol of protocols) {\n          if (typeof protocol !== \"string\" || !subprotocolRegex.test(protocol) || protocolSet.has(protocol)) {\n            throw new SyntaxError(\n              \"An invalid or duplicated subprotocol was specified\"\n            );\n          }\n          protocolSet.add(protocol);\n        }\n        opts.headers[\"Sec-WebSocket-Protocol\"] = protocols.join(\",\");\n      }\n      if (opts.origin) {\n        if (opts.protocolVersion < 13) {\n          opts.headers[\"Sec-WebSocket-Origin\"] = opts.origin;\n        } else {\n          opts.headers.Origin = opts.origin;\n        }\n      }\n      if (parsedUrl.username || parsedUrl.password) {\n        opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n      }\n      if (isIpcUrl) {\n        const parts = opts.path.split(\":\");\n        opts.socketPath = parts[0];\n        opts.path = parts[1];\n      }\n      let req;\n      if (opts.followRedirects) {\n        if (websocket._redirects === 0) {\n          websocket._originalIpc = isIpcUrl;\n          websocket._originalSecure = isSecure;\n          websocket._originalHostOrSocketPath = isIpcUrl ? opts.socketPath : parsedUrl.host;\n          const headers = options && options.headers;\n          options = { ...options, headers: {} };\n          if (headers) {\n            for (const [key2, value] of Object.entries(headers)) {\n              options.headers[key2.toLowerCase()] = value;\n            }\n          }\n        } else if (websocket.listenerCount(\"redirect\") === 0) {\n          const isSameHost = isIpcUrl ? websocket._originalIpc ? opts.socketPath === websocket._originalHostOrSocketPath : false : websocket._originalIpc ? false : parsedUrl.host === websocket._originalHostOrSocketPath;\n          if (!isSameHost || websocket._originalSecure && !isSecure) {\n            delete opts.headers.authorization;\n            delete opts.headers.cookie;\n            if (!isSameHost) delete opts.headers.host;\n            opts.auth = void 0;\n          }\n        }\n        if (opts.auth && !options.headers.authorization) {\n          options.headers.authorization = \"Basic \" + Buffer.from(opts.auth).toString(\"base64\");\n        }\n        req = websocket._req = request(opts);\n        if (websocket._redirects) {\n          websocket.emit(\"redirect\", websocket.url, req);\n        }\n      } else {\n        req = websocket._req = request(opts);\n      }\n      if (opts.timeout) {\n        req.on(\"timeout\", () => {\n          abortHandshake(websocket, req, \"Opening handshake has timed out\");\n        });\n      }\n      req.on(\"error\", (err) => {\n        if (req === null || req[kAborted]) return;\n        req = websocket._req = null;\n        emitErrorAndClose(websocket, err);\n      });\n      req.on(\"response\", (res) => {\n        const location = res.headers.location;\n        const statusCode = res.statusCode;\n        if (location && opts.followRedirects && statusCode >= 300 && statusCode < 400) {\n          if (++websocket._redirects > opts.maxRedirects) {\n            abortHandshake(websocket, req, \"Maximum redirects exceeded\");\n            return;\n          }\n          req.abort();\n          let addr;\n          try {\n            addr = new URL(location, address);\n          } catch (e) {\n            const err = new SyntaxError(`Invalid URL: ${location}`);\n            emitErrorAndClose(websocket, err);\n            return;\n          }\n          initAsClient(websocket, addr, protocols, options);\n        } else if (!websocket.emit(\"unexpected-response\", req, res)) {\n          abortHandshake(\n            websocket,\n            req,\n            `Unexpected server response: ${res.statusCode}`\n          );\n        }\n      });\n      req.on(\"upgrade\", (res, socket, head) => {\n        websocket.emit(\"upgrade\", res);\n        if (websocket.readyState !== WebSocket2.CONNECTING) return;\n        req = websocket._req = null;\n        const upgrade = res.headers.upgrade;\n        if (upgrade === void 0 || upgrade.toLowerCase() !== \"websocket\") {\n          abortHandshake(websocket, socket, \"Invalid Upgrade header\");\n          return;\n        }\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        if (res.headers[\"sec-websocket-accept\"] !== digest) {\n          abortHandshake(websocket, socket, \"Invalid Sec-WebSocket-Accept header\");\n          return;\n        }\n        const serverProt = res.headers[\"sec-websocket-protocol\"];\n        let protError;\n        if (serverProt !== void 0) {\n          if (!protocolSet.size) {\n            protError = \"Server sent a subprotocol but none was requested\";\n          } else if (!protocolSet.has(serverProt)) {\n            protError = \"Server sent an invalid subprotocol\";\n          }\n        } else if (protocolSet.size) {\n          protError = \"Server sent no subprotocol\";\n        }\n        if (protError) {\n          abortHandshake(websocket, socket, protError);\n          return;\n        }\n        if (serverProt) websocket._protocol = serverProt;\n        const secWebSocketExtensions = res.headers[\"sec-websocket-extensions\"];\n        if (secWebSocketExtensions !== void 0) {\n          if (!perMessageDeflate) {\n            const message = \"Server sent a Sec-WebSocket-Extensions header but no extension was requested\";\n            abortHandshake(websocket, socket, message);\n            return;\n          }\n          let extensions;\n          try {\n            extensions = parse(secWebSocketExtensions);\n          } catch (err) {\n            const message = \"Invalid Sec-WebSocket-Extensions header\";\n            abortHandshake(websocket, socket, message);\n            return;\n          }\n          const extensionNames = Object.keys(extensions);\n          if (extensionNames.length !== 1 || extensionNames[0] !== PerMessageDeflate.extensionName) {\n            const message = \"Server indicated an extension that was not requested\";\n            abortHandshake(websocket, socket, message);\n            return;\n          }\n          try {\n            perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n          } catch (err) {\n            const message = \"Invalid Sec-WebSocket-Extensions header\";\n            abortHandshake(websocket, socket, message);\n            return;\n          }\n          websocket._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n        websocket.setSocket(socket, head, {\n          allowSynchronousEvents: opts.allowSynchronousEvents,\n          generateMask: opts.generateMask,\n          maxPayload: opts.maxPayload,\n          skipUTF8Validation: opts.skipUTF8Validation\n        });\n      });\n      if (opts.finishRequest) {\n        opts.finishRequest(req, websocket);\n      } else {\n        req.end();\n      }\n    }\n    function emitErrorAndClose(websocket, err) {\n      websocket._readyState = WebSocket2.CLOSING;\n      websocket._errorEmitted = true;\n      websocket.emit(\"error\", err);\n      websocket.emitClose();\n    }\n    function netConnect(options) {\n      options.path = options.socketPath;\n      return net.connect(options);\n    }\n    function tlsConnect(options) {\n      options.path = void 0;\n      if (!options.servername && options.servername !== \"\") {\n        options.servername = net.isIP(options.host) ? \"\" : options.host;\n      }\n      return tls.connect(options);\n    }\n    function abortHandshake(websocket, stream, message) {\n      websocket._readyState = WebSocket2.CLOSING;\n      const err = new Error(message);\n      Error.captureStackTrace(err, abortHandshake);\n      if (stream.setHeader) {\n        stream[kAborted] = true;\n        stream.abort();\n        if (stream.socket && !stream.socket.destroyed) {\n          stream.socket.destroy();\n        }\n        process.nextTick(emitErrorAndClose, websocket, err);\n      } else {\n        stream.destroy(err);\n        stream.once(\"error\", websocket.emit.bind(websocket, \"error\"));\n        stream.once(\"close\", websocket.emitClose.bind(websocket));\n      }\n    }\n    function sendAfterClose(websocket, data, cb) {\n      if (data) {\n        const length = isBlob(data) ? data.size : toBuffer(data).length;\n        if (websocket._socket) websocket._sender._bufferedBytes += length;\n        else websocket._bufferedAmount += length;\n      }\n      if (cb) {\n        const err = new Error(\n          `WebSocket is not open: readyState ${websocket.readyState} (${readyStates[websocket.readyState]})`\n        );\n        process.nextTick(cb, err);\n      }\n    }\n    function receiverOnConclude(code, reason) {\n      const websocket = this[kWebSocket];\n      websocket._closeFrameReceived = true;\n      websocket._closeMessage = reason;\n      websocket._closeCode = code;\n      if (websocket._socket[kWebSocket] === void 0) return;\n      websocket._socket.removeListener(\"data\", socketOnData);\n      process.nextTick(resume, websocket._socket);\n      if (code === 1005) websocket.close();\n      else websocket.close(code, reason);\n    }\n    function receiverOnDrain() {\n      const websocket = this[kWebSocket];\n      if (!websocket.isPaused) websocket._socket.resume();\n    }\n    function receiverOnError(err) {\n      const websocket = this[kWebSocket];\n      if (websocket._socket[kWebSocket] !== void 0) {\n        websocket._socket.removeListener(\"data\", socketOnData);\n        process.nextTick(resume, websocket._socket);\n        websocket.close(err[kStatusCode]);\n      }\n      if (!websocket._errorEmitted) {\n        websocket._errorEmitted = true;\n        websocket.emit(\"error\", err);\n      }\n    }\n    function receiverOnFinish() {\n      this[kWebSocket].emitClose();\n    }\n    function receiverOnMessage(data, isBinary) {\n      this[kWebSocket].emit(\"message\", data, isBinary);\n    }\n    function receiverOnPing(data) {\n      const websocket = this[kWebSocket];\n      if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n      websocket.emit(\"ping\", data);\n    }\n    function receiverOnPong(data) {\n      this[kWebSocket].emit(\"pong\", data);\n    }\n    function resume(stream) {\n      stream.resume();\n    }\n    function senderOnError(err) {\n      const websocket = this[kWebSocket];\n      if (websocket.readyState === WebSocket2.CLOSED) return;\n      if (websocket.readyState === WebSocket2.OPEN) {\n        websocket._readyState = WebSocket2.CLOSING;\n        setCloseTimer(websocket);\n      }\n      this._socket.end();\n      if (!websocket._errorEmitted) {\n        websocket._errorEmitted = true;\n        websocket.emit(\"error\", err);\n      }\n    }\n    function setCloseTimer(websocket) {\n      websocket._closeTimer = setTimeout(\n        websocket._socket.destroy.bind(websocket._socket),\n        closeTimeout\n      );\n    }\n    function socketOnClose() {\n      const websocket = this[kWebSocket];\n      this.removeListener(\"close\", socketOnClose);\n      this.removeListener(\"data\", socketOnData);\n      this.removeListener(\"end\", socketOnEnd);\n      websocket._readyState = WebSocket2.CLOSING;\n      let chunk;\n      if (!this._readableState.endEmitted && !websocket._closeFrameReceived && !websocket._receiver._writableState.errorEmitted && (chunk = websocket._socket.read()) !== null) {\n        websocket._receiver.write(chunk);\n      }\n      websocket._receiver.end();\n      this[kWebSocket] = void 0;\n      clearTimeout(websocket._closeTimer);\n      if (websocket._receiver._writableState.finished || websocket._receiver._writableState.errorEmitted) {\n        websocket.emitClose();\n      } else {\n        websocket._receiver.on(\"error\", receiverOnFinish);\n        websocket._receiver.on(\"finish\", receiverOnFinish);\n      }\n    }\n    function socketOnData(chunk) {\n      if (!this[kWebSocket]._receiver.write(chunk)) {\n        this.pause();\n      }\n    }\n    function socketOnEnd() {\n      const websocket = this[kWebSocket];\n      websocket._readyState = WebSocket2.CLOSING;\n      websocket._receiver.end();\n      this.end();\n    }\n    function socketOnError() {\n      const websocket = this[kWebSocket];\n      this.removeListener(\"error\", socketOnError);\n      this.on(\"error\", NOOP);\n      if (websocket) {\n        websocket._readyState = WebSocket2.CLOSING;\n        this.destroy();\n      }\n    }\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/subprotocol.js\nvar require_subprotocol = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/subprotocol.js\"(exports, module) {\n    \"use strict\";\n    var { tokenChars } = require_validation();\n    function parse(header) {\n      const protocols = /* @__PURE__ */ new Set();\n      let start = -1;\n      let end = -1;\n      let i = 0;\n      for (i; i < header.length; i++) {\n        const code = header.charCodeAt(i);\n        if (end === -1 && tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (i !== 0 && (code === 32 || code === 9)) {\n          if (end === -1 && start !== -1) end = i;\n        } else if (code === 44) {\n          if (start === -1) {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n          if (end === -1) end = i;\n          const protocol2 = header.slice(start, end);\n          if (protocols.has(protocol2)) {\n            throw new SyntaxError(`The \"${protocol2}\" subprotocol is duplicated`);\n          }\n          protocols.add(protocol2);\n          start = end = -1;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      }\n      if (start === -1 || end !== -1) {\n        throw new SyntaxError(\"Unexpected end of input\");\n      }\n      const protocol = header.slice(start, i);\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n      protocols.add(protocol);\n      return protocols;\n    }\n    module.exports = { parse };\n  }\n});\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket-server.js\nvar require_websocket_server = __commonJS({\n  \"../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket-server.js\"(exports, module) {\n    \"use strict\";\n    var EventEmitter = __require(\"events\");\n    var http = __require(\"http\");\n    var { Duplex } = __require(\"stream\");\n    var { createHash } = __require(\"crypto\");\n    var extension = require_extension();\n    var PerMessageDeflate = require_permessage_deflate();\n    var subprotocol = require_subprotocol();\n    var WebSocket2 = require_websocket();\n    var { GUID, kWebSocket } = require_constants();\n    var keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n    var RUNNING = 0;\n    var CLOSING = 1;\n    var CLOSED = 2;\n    var WebSocketServer2 = class extends EventEmitter {\n      /**\n       * Create a `WebSocketServer` instance.\n       *\n       * @param {Object} options Configuration options\n       * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n       *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n       *     multiple times in the same tick\n       * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n       *     automatically send a pong in response to a ping\n       * @param {Number} [options.backlog=511] The maximum length of the queue of\n       *     pending connections\n       * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n       *     track clients\n       * @param {Function} [options.handleProtocols] A hook to handle protocols\n       * @param {String} [options.host] The hostname where to bind the server\n       * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n       *     size\n       * @param {Boolean} [options.noServer=false] Enable no server mode\n       * @param {String} [options.path] Accept only connections matching this path\n       * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n       *     permessage-deflate\n       * @param {Number} [options.port] The port where to bind the server\n       * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n       *     server to use\n       * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n       *     not to skip UTF-8 validation for text and close messages\n       * @param {Function} [options.verifyClient] A hook to reject connections\n       * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n       *     class to use. It must be the `WebSocket` class or class that extends it\n       * @param {Function} [callback] A listener for the `listening` event\n       */\n      constructor(options, callback) {\n        super();\n        options = {\n          allowSynchronousEvents: true,\n          autoPong: true,\n          maxPayload: 100 * 1024 * 1024,\n          skipUTF8Validation: false,\n          perMessageDeflate: false,\n          handleProtocols: null,\n          clientTracking: true,\n          verifyClient: null,\n          noServer: false,\n          backlog: null,\n          // use default (511 as implemented in net.js)\n          server: null,\n          host: null,\n          path: null,\n          port: null,\n          WebSocket: WebSocket2,\n          ...options\n        };\n        if (options.port == null && !options.server && !options.noServer || options.port != null && (options.server || options.noServer) || options.server && options.noServer) {\n          throw new TypeError(\n            'One and only one of the \"port\", \"server\", or \"noServer\" options must be specified'\n          );\n        }\n        if (options.port != null) {\n          this._server = http.createServer((req, res) => {\n            const body = http.STATUS_CODES[426];\n            res.writeHead(426, {\n              \"Content-Length\": body.length,\n              \"Content-Type\": \"text/plain\"\n            });\n            res.end(body);\n          });\n          this._server.listen(\n            options.port,\n            options.host,\n            options.backlog,\n            callback\n          );\n        } else if (options.server) {\n          this._server = options.server;\n        }\n        if (this._server) {\n          const emitConnection = this.emit.bind(this, \"connection\");\n          this._removeListeners = addListeners(this._server, {\n            listening: this.emit.bind(this, \"listening\"),\n            error: this.emit.bind(this, \"error\"),\n            upgrade: (req, socket, head) => {\n              this.handleUpgrade(req, socket, head, emitConnection);\n            }\n          });\n        }\n        if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n        if (options.clientTracking) {\n          this.clients = /* @__PURE__ */ new Set();\n          this._shouldEmitClose = false;\n        }\n        this.options = options;\n        this._state = RUNNING;\n      }\n      /**\n       * Returns the bound address, the address family name, and port of the server\n       * as reported by the operating system if listening on an IP socket.\n       * If the server is listening on a pipe or UNIX domain socket, the name is\n       * returned as a string.\n       *\n       * @return {(Object|String|null)} The address of the server\n       * @public\n       */\n      address() {\n        if (this.options.noServer) {\n          throw new Error('The server is operating in \"noServer\" mode');\n        }\n        if (!this._server) return null;\n        return this._server.address();\n      }\n      /**\n       * Stop the server from accepting new connections and emit the `'close'` event\n       * when all existing connections are closed.\n       *\n       * @param {Function} [cb] A one-time listener for the `'close'` event\n       * @public\n       */\n      close(cb) {\n        if (this._state === CLOSED) {\n          if (cb) {\n            this.once(\"close\", () => {\n              cb(new Error(\"The server is not running\"));\n            });\n          }\n          process.nextTick(emitClose, this);\n          return;\n        }\n        if (cb) this.once(\"close\", cb);\n        if (this._state === CLOSING) return;\n        this._state = CLOSING;\n        if (this.options.noServer || this.options.server) {\n          if (this._server) {\n            this._removeListeners();\n            this._removeListeners = this._server = null;\n          }\n          if (this.clients) {\n            if (!this.clients.size) {\n              process.nextTick(emitClose, this);\n            } else {\n              this._shouldEmitClose = true;\n            }\n          } else {\n            process.nextTick(emitClose, this);\n          }\n        } else {\n          const server = this._server;\n          this._removeListeners();\n          this._removeListeners = this._server = null;\n          server.close(() => {\n            emitClose(this);\n          });\n        }\n      }\n      /**\n       * See if a given request should be handled by this server instance.\n       *\n       * @param {http.IncomingMessage} req Request object to inspect\n       * @return {Boolean} `true` if the request is valid, else `false`\n       * @public\n       */\n      shouldHandle(req) {\n        if (this.options.path) {\n          const index = req.url.indexOf(\"?\");\n          const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n          if (pathname !== this.options.path) return false;\n        }\n        return true;\n      }\n      /**\n       * Handle a HTTP Upgrade request.\n       *\n       * @param {http.IncomingMessage} req The request object\n       * @param {Duplex} socket The network socket between the server and client\n       * @param {Buffer} head The first packet of the upgraded stream\n       * @param {Function} cb Callback\n       * @public\n       */\n      handleUpgrade(req, socket, head, cb) {\n        socket.on(\"error\", socketOnError);\n        const key = req.headers[\"sec-websocket-key\"];\n        const upgrade = req.headers.upgrade;\n        const version = +req.headers[\"sec-websocket-version\"];\n        if (req.method !== \"GET\") {\n          const message = \"Invalid HTTP method\";\n          abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n          return;\n        }\n        if (upgrade === void 0 || upgrade.toLowerCase() !== \"websocket\") {\n          const message = \"Invalid Upgrade header\";\n          abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n          return;\n        }\n        if (key === void 0 || !keyRegex.test(key)) {\n          const message = \"Missing or invalid Sec-WebSocket-Key header\";\n          abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n          return;\n        }\n        if (version !== 8 && version !== 13) {\n          const message = \"Missing or invalid Sec-WebSocket-Version header\";\n          abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n          return;\n        }\n        if (!this.shouldHandle(req)) {\n          abortHandshake(socket, 400);\n          return;\n        }\n        const secWebSocketProtocol = req.headers[\"sec-websocket-protocol\"];\n        let protocols = /* @__PURE__ */ new Set();\n        if (secWebSocketProtocol !== void 0) {\n          try {\n            protocols = subprotocol.parse(secWebSocketProtocol);\n          } catch (err) {\n            const message = \"Invalid Sec-WebSocket-Protocol header\";\n            abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n            return;\n          }\n        }\n        const secWebSocketExtensions = req.headers[\"sec-websocket-extensions\"];\n        const extensions = {};\n        if (this.options.perMessageDeflate && secWebSocketExtensions !== void 0) {\n          const perMessageDeflate = new PerMessageDeflate(\n            this.options.perMessageDeflate,\n            true,\n            this.options.maxPayload\n          );\n          try {\n            const offers = extension.parse(secWebSocketExtensions);\n            if (offers[PerMessageDeflate.extensionName]) {\n              perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n              extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n            }\n          } catch (err) {\n            const message = \"Invalid or unacceptable Sec-WebSocket-Extensions header\";\n            abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n            return;\n          }\n        }\n        if (this.options.verifyClient) {\n          const info = {\n            origin: req.headers[`${version === 8 ? \"sec-websocket-origin\" : \"origin\"}`],\n            secure: !!(req.socket.authorized || req.socket.encrypted),\n            req\n          };\n          if (this.options.verifyClient.length === 2) {\n            this.options.verifyClient(info, (verified, code, message, headers) => {\n              if (!verified) {\n                return abortHandshake(socket, code || 401, message, headers);\n              }\n              this.completeUpgrade(\n                extensions,\n                key,\n                protocols,\n                req,\n                socket,\n                head,\n                cb\n              );\n            });\n            return;\n          }\n          if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n        }\n        this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n      }\n      /**\n       * Upgrade the connection to WebSocket.\n       *\n       * @param {Object} extensions The accepted extensions\n       * @param {String} key The value of the `Sec-WebSocket-Key` header\n       * @param {Set} protocols The subprotocols\n       * @param {http.IncomingMessage} req The request object\n       * @param {Duplex} socket The network socket between the server and client\n       * @param {Buffer} head The first packet of the upgraded stream\n       * @param {Function} cb Callback\n       * @throws {Error} If called more than once with the same socket\n       * @private\n       */\n      completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n        if (!socket.readable || !socket.writable) return socket.destroy();\n        if (socket[kWebSocket]) {\n          throw new Error(\n            \"server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration\"\n          );\n        }\n        if (this._state > RUNNING) return abortHandshake(socket, 503);\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        const headers = [\n          \"HTTP/1.1 101 Switching Protocols\",\n          \"Upgrade: websocket\",\n          \"Connection: Upgrade\",\n          `Sec-WebSocket-Accept: ${digest}`\n        ];\n        const ws = new this.options.WebSocket(null, void 0, this.options);\n        if (protocols.size) {\n          const protocol = this.options.handleProtocols ? this.options.handleProtocols(protocols, req) : protocols.values().next().value;\n          if (protocol) {\n            headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n            ws._protocol = protocol;\n          }\n        }\n        if (extensions[PerMessageDeflate.extensionName]) {\n          const params = extensions[PerMessageDeflate.extensionName].params;\n          const value = extension.format({\n            [PerMessageDeflate.extensionName]: [params]\n          });\n          headers.push(`Sec-WebSocket-Extensions: ${value}`);\n          ws._extensions = extensions;\n        }\n        this.emit(\"headers\", headers, req);\n        socket.write(headers.concat(\"\\r\\n\").join(\"\\r\\n\"));\n        socket.removeListener(\"error\", socketOnError);\n        ws.setSocket(socket, head, {\n          allowSynchronousEvents: this.options.allowSynchronousEvents,\n          maxPayload: this.options.maxPayload,\n          skipUTF8Validation: this.options.skipUTF8Validation\n        });\n        if (this.clients) {\n          this.clients.add(ws);\n          ws.on(\"close\", () => {\n            this.clients.delete(ws);\n            if (this._shouldEmitClose && !this.clients.size) {\n              process.nextTick(emitClose, this);\n            }\n          });\n        }\n        cb(ws, req);\n      }\n    };\n    module.exports = WebSocketServer2;\n    function addListeners(server, map) {\n      for (const event of Object.keys(map)) server.on(event, map[event]);\n      return function removeListeners() {\n        for (const event of Object.keys(map)) {\n          server.removeListener(event, map[event]);\n        }\n      };\n    }\n    function emitClose(server) {\n      server._state = CLOSED;\n      server.emit(\"close\");\n    }\n    function socketOnError() {\n      this.destroy();\n    }\n    function abortHandshake(socket, code, message, headers) {\n      message = message || http.STATUS_CODES[code];\n      headers = {\n        Connection: \"close\",\n        \"Content-Type\": \"text/html\",\n        \"Content-Length\": Buffer.byteLength(message),\n        ...headers\n      };\n      socket.once(\"finish\", socket.destroy);\n      socket.end(\n        `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\n` + Object.keys(headers).map((h) => `${h}: ${headers[h]}`).join(\"\\r\\n\") + \"\\r\\n\\r\\n\" + message\n      );\n    }\n    function abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n      if (server.listenerCount(\"wsClientError\")) {\n        const err = new Error(message);\n        Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n        server.emit(\"wsClientError\", err, socket, req);\n      } else {\n        abortHandshake(socket, code, message);\n      }\n    }\n  }\n});\n\n// src/browser/simple_client-node.ts\n\n\n// ../common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/wrapper.mjs\nvar import_stream = __toESM(require_stream(), 1);\nvar import_receiver = __toESM(require_receiver(), 1);\nvar import_sender = __toESM(require_sender(), 1);\nvar import_websocket = __toESM(require_websocket(), 1);\nvar import_websocket_server = __toESM(require_websocket_server(), 1);\nvar wrapper_default = import_websocket.default;\n\n// src/browser/simple_client-node.ts\nvar nodeWebSocket = wrapper_default;\n(0,_simple_client_js__WEBPACK_IMPORTED_MODULE_2__.setDefaultWebSocketConstructor)(nodeWebSocket);\n\n//# sourceMappingURL=simple_client-node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/simple_client-node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/simple_client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexClient: () => (/* binding */ ConvexClient),\n/* harmony export */   setDefaultWebSocketConstructor: () => (/* binding */ setDefaultWebSocketConstructor)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nlet defaultWebSocketConstructor;\nfunction setDefaultWebSocketConstructor(ws) {\n  defaultWebSocketConstructor = ws;\n}\nclass ConvexClient {\n  /**\n   * Construct a client and immediately initiate a WebSocket connection to the passed address.\n   *\n   * @public\n   */\n  constructor(address, options = {}) {\n    __publicField(this, \"listeners\");\n    __publicField(this, \"_client\");\n    // A synthetic server event to run callbacks the first time\n    __publicField(this, \"callNewListenersWithCurrentValuesTimer\");\n    __publicField(this, \"_closed\");\n    __publicField(this, \"_disabled\");\n    if (options.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.validateDeploymentUrl)(address);\n    }\n    const { disabled, ...baseOptions } = options;\n    this._closed = false;\n    this._disabled = !!disabled;\n    if (defaultWebSocketConstructor && !(\"webSocketConstructor\" in baseOptions) && typeof WebSocket === \"undefined\") {\n      baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n    }\n    if (typeof window === \"undefined\" && !(\"unsavedChangesWarning\" in baseOptions)) {\n      baseOptions.unsavedChangesWarning = false;\n    }\n    if (!this.disabled) {\n      this._client = new _index_js__WEBPACK_IMPORTED_MODULE_1__.BaseConvexClient(\n        address,\n        (updatedQueries) => this._transition(updatedQueries),\n        baseOptions\n      );\n    }\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  /**\n   * Once closed no registered callbacks will fire again.\n   */\n  get closed() {\n    return this._closed;\n  }\n  get client() {\n    if (this._client) return this._client;\n    throw new Error(\"ConvexClient is disabled\");\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Call a callback whenever a new result for a query is received. The callback\n   * will run soon after being registered if a result for the query is already\n   * in memory.\n   *\n   * The return value is an {@link Unsubscribe} object which is both a function\n   * an an object with properties. Both of the patterns below work with this object:\n   *\n   *```ts\n   * // call the return value as a function\n   * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   * unsubscribe();\n   *\n   * // unpack the return value into its properties\n   * const {\n   *   getCurrentValue,\n   *   unsubscribe,\n   * } = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   *```\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - The arguments to run the query with.\n   * @param callback - Function to call when the query result updates.\n   * @param onError - Function to call when the query result updates with an error.\n   * If not provided, errors will be thrown instead of calling the callback.\n   *\n   * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n   */\n  onUpdate(query, args, callback, onError) {\n    if (this.disabled) {\n      const disabledUnsubscribe = () => {\n      };\n      const unsubscribeProps2 = {\n        unsubscribe: disabledUnsubscribe,\n        getCurrentValue: () => void 0,\n        getQueryLogs: () => void 0\n      };\n      Object.assign(disabledUnsubscribe, unsubscribeProps2);\n      return disabledUnsubscribe;\n    }\n    const { queryToken, unsubscribe } = this.client.subscribe(\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query),\n      args\n    );\n    const queryInfo = {\n      queryToken,\n      callback,\n      onError,\n      unsubscribe,\n      hasEverRun: false,\n      query,\n      args\n    };\n    this.listeners.add(queryInfo);\n    if (this.queryResultReady(queryToken) && this.callNewListenersWithCurrentValuesTimer === void 0) {\n      this.callNewListenersWithCurrentValuesTimer = setTimeout(\n        () => this.callNewListenersWithCurrentValues(),\n        0\n      );\n    }\n    const unsubscribeProps = {\n      unsubscribe: () => {\n        if (this.closed) {\n          return;\n        }\n        this.listeners.delete(queryInfo);\n        unsubscribe();\n      },\n      getCurrentValue: () => this.client.localQueryResultByToken(queryToken),\n      getQueryLogs: () => this.client.localQueryLogs(queryToken)\n    };\n    const ret = unsubscribeProps.unsubscribe;\n    Object.assign(ret, unsubscribeProps);\n    return ret;\n  }\n  // Run all callbacks that have never been run before if they have a query\n  // result available now.\n  callNewListenersWithCurrentValues() {\n    this.callNewListenersWithCurrentValuesTimer = void 0;\n    this._transition([], true);\n  }\n  queryResultReady(queryToken) {\n    return this.client.hasLocalQueryResultByToken(queryToken);\n  }\n  async close() {\n    if (this.disabled) return;\n    this.listeners.clear();\n    this._closed = true;\n    return this.client.close();\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT (typically an OpenID Connect Identity Token)\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    if (this.disabled) return;\n    this.client.setAuth(\n      fetchToken,\n      onChange ?? (() => {\n      })\n    );\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, identity) {\n    if (this.closed) {\n      throw new Error(\"ConvexClient has already been closed.\");\n    }\n    if (this.disabled) return;\n    this.client.setAdminAuth(token, identity);\n  }\n  /**\n   * @internal\n   */\n  _transition(updatedQueries, callNewListeners = false) {\n    for (const queryInfo of this.listeners) {\n      const { callback, queryToken, onError, hasEverRun } = queryInfo;\n      if (updatedQueries.includes(queryToken) || callNewListeners && !hasEverRun && this.client.hasLocalQueryResultByToken(queryToken)) {\n        queryInfo.hasEverRun = true;\n        let newValue;\n        try {\n          newValue = this.client.localQueryResultByToken(queryToken);\n        } catch (error) {\n          if (!(error instanceof Error)) throw error;\n          if (onError) {\n            onError(\n              error,\n              \"Second argument to onUpdate onError is reserved for later use\"\n            );\n          } else {\n            void Promise.reject(error);\n          }\n          continue;\n        }\n        callback(\n          newValue,\n          \"Second argument to onUpdate callback is reserved for later use\"\n        );\n      }\n    }\n  }\n  /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation(mutation, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.mutation((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(mutation), args);\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action.\n   * @returns A promise of the action's result.\n   */\n  async action(action, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.action((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(action), args);\n  }\n  /**\n   * Fetch a query result once.\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query.\n   * @returns A promise of the query's result.\n   */\n  async query(query, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    const value = this.client.localQueryResult((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n    if (value !== void 0) return Promise.resolve(value);\n    return new Promise((resolve, reject) => {\n      const { unsubscribe } = this.onUpdate(\n        query,\n        args,\n        (value2) => {\n          unsubscribe();\n          resolve(value2);\n        },\n        (e) => {\n          unsubscribe();\n          reject(e);\n        }\n      );\n    });\n  }\n}\n//# sourceMappingURL=simple_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/authentication_manager.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationManager: () => (/* binding */ AuthenticationManager)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"(ssr)/./node_modules/jwt-decode/build/esm/index.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst MAXIMUM_REFRESH_DELAY = 20 * 24 * 60 * 60 * 1e3;\nconst MAX_TOKEN_CONFIRMATION_ATTEMPTS = 2;\nclass AuthenticationManager {\n  constructor(syncState, callbacks, config) {\n    __publicField(this, \"authState\", { state: \"noAuth\" });\n    // Used to detect races involving `setConfig` calls\n    // while a token is being fetched.\n    __publicField(this, \"configVersion\", 0);\n    // Shared by the BaseClient so that the auth manager can easily inspect it\n    __publicField(this, \"syncState\");\n    // Passed down by BaseClient, sends a message to the server\n    __publicField(this, \"authenticate\");\n    __publicField(this, \"stopSocket\");\n    __publicField(this, \"tryRestartSocket\");\n    __publicField(this, \"pauseSocket\");\n    __publicField(this, \"resumeSocket\");\n    // Passed down by BaseClient, sends a message to the server\n    __publicField(this, \"clearAuth\");\n    __publicField(this, \"logger\");\n    __publicField(this, \"refreshTokenLeewaySeconds\");\n    // Number of times we have attempted to confirm the latest token. We retry up\n    // to `MAX_TOKEN_CONFIRMATION_ATTEMPTS` times.\n    __publicField(this, \"tokenConfirmationAttempts\", 0);\n    this.syncState = syncState;\n    this.authenticate = callbacks.authenticate;\n    this.stopSocket = callbacks.stopSocket;\n    this.tryRestartSocket = callbacks.tryRestartSocket;\n    this.pauseSocket = callbacks.pauseSocket;\n    this.resumeSocket = callbacks.resumeSocket;\n    this.clearAuth = callbacks.clearAuth;\n    this.logger = config.logger;\n    this.refreshTokenLeewaySeconds = config.refreshTokenLeewaySeconds;\n  }\n  async setConfig(fetchToken, onChange) {\n    this.resetAuthState();\n    this._logVerbose(\"pausing WS for auth token fetch\");\n    this.pauseSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(fetchToken, {\n      forceRefreshToken: false\n    });\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfCachedToken\",\n        config: { fetchToken, onAuthChange: onChange },\n        hasRetried: false\n      });\n      this.authenticate(token.value);\n    } else {\n      this.setAuthState({\n        state: \"initialRefetch\",\n        config: { fetchToken, onAuthChange: onChange }\n      });\n      await this.refetchToken();\n    }\n    this._logVerbose(\"resuming WS after auth token fetch\");\n    this.resumeSocket();\n  }\n  onTransition(serverMessage) {\n    if (!this.syncState.isCurrentOrNewerAuthVersion(\n      serverMessage.endVersion.identity\n    )) {\n      return;\n    }\n    if (serverMessage.endVersion.identity <= serverMessage.startVersion.identity) {\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n      this._logVerbose(\"server confirmed auth token is valid\");\n      void this.refetchToken();\n      this.authState.config.onAuthChange(true);\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this._logVerbose(\"server confirmed new auth token is valid\");\n      this.scheduleTokenRefetch(this.authState.token);\n      this.tokenConfirmationAttempts = 0;\n      if (!this.authState.hadAuth) {\n        this.authState.config.onAuthChange(true);\n      }\n    }\n  }\n  onAuthError(serverMessage) {\n    if (serverMessage.authUpdateAttempted === false && (this.authState.state === \"waitingForServerConfirmationOfFreshToken\" || this.authState.state === \"waitingForServerConfirmationOfCachedToken\")) {\n      this._logVerbose(\"ignoring non-auth token expired error\");\n      return;\n    }\n    const { baseVersion } = serverMessage;\n    if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n      this._logVerbose(\"ignoring auth error for previous auth attempt\");\n      return;\n    }\n    void this.tryToReauthenticate(serverMessage);\n    return;\n  }\n  // This is similar to `refetchToken` defined below, in fact we\n  // don't represent them as different states, but it is different\n  // in that we pause the WebSocket so that mutations\n  // don't retry with bad auth.\n  async tryToReauthenticate(serverMessage) {\n    this._logVerbose(`attempting to reauthenticate: ${serverMessage.error}`);\n    if (\n      // No way to fetch another token, kaboom\n      this.authState.state === \"noAuth\" || // We failed on a fresh token. After a small number of retries, we give up\n      // and clear the auth state to avoid infinite retries.\n      this.authState.state === \"waitingForServerConfirmationOfFreshToken\" && this.tokenConfirmationAttempts >= MAX_TOKEN_CONFIRMATION_ATTEMPTS\n    ) {\n      this.logger.error(\n        `Failed to authenticate: \"${serverMessage.error}\", check your server auth config`\n      );\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      if (this.authState.state !== \"noAuth\") {\n        this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n      }\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this.tokenConfirmationAttempts++;\n      this._logVerbose(\n        `retrying reauthentication, ${MAX_TOKEN_CONFIRMATION_ATTEMPTS - this.tokenConfirmationAttempts} attempts remaining`\n      );\n    }\n    await this.stopSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true\n      }\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value && this.syncState.isNewAuth(token.value)) {\n      this.authenticate(token.value);\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfFreshToken\",\n        config: this.authState.config,\n        token: token.value,\n        hadAuth: this.authState.state === \"notRefetching\" || this.authState.state === \"waitingForScheduledRefetch\"\n      });\n    } else {\n      this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this.tryRestartSocket();\n  }\n  // Force refetch the token and schedule another refetch\n  // before the token expires - an active client should never\n  // need to reauthenticate.\n  async refetchToken() {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    this._logVerbose(\"refetching auth token\");\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true\n      }\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      if (this.syncState.isNewAuth(token.value)) {\n        this.setAuthState({\n          state: \"waitingForServerConfirmationOfFreshToken\",\n          hadAuth: this.syncState.hasAuth(),\n          token: token.value,\n          config: this.authState.config\n        });\n        this.authenticate(token.value);\n      } else {\n        this.setAuthState({\n          state: \"notRefetching\",\n          config: this.authState.config\n        });\n      }\n    } else {\n      this._logVerbose(\"refetching token failed\");\n      if (this.syncState.hasAuth()) {\n        this.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this._logVerbose(\n      \"restarting WS after auth token fetch (if currently stopped)\"\n    );\n    this.tryRestartSocket();\n  }\n  scheduleTokenRefetch(token) {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    const decodedToken = this.decodeToken(token);\n    if (!decodedToken) {\n      this.logger.error(\n        \"Auth token is not a valid JWT, cannot refetch the token\"\n      );\n      return;\n    }\n    const { iat, exp } = decodedToken;\n    if (!iat || !exp) {\n      this.logger.error(\n        \"Auth token does not have required fields, cannot refetch the token\"\n      );\n      return;\n    }\n    const tokenValiditySeconds = exp - iat;\n    if (tokenValiditySeconds <= 2) {\n      this.logger.error(\n        \"Auth token does not live long enough, cannot refetch the token\"\n      );\n      return;\n    }\n    let delay = Math.min(\n      MAXIMUM_REFRESH_DELAY,\n      (tokenValiditySeconds - this.refreshTokenLeewaySeconds) * 1e3\n    );\n    if (delay <= 0) {\n      this.logger.warn(\n        `Refetching auth token immediately, configured leeway ${this.refreshTokenLeewaySeconds}s is larger than the token's lifetime ${tokenValiditySeconds}s`\n      );\n      delay = 0;\n    }\n    const refetchTokenTimeoutId = setTimeout(() => {\n      this._logVerbose(\"running scheduled token refetch\");\n      void this.refetchToken();\n    }, delay);\n    this.setAuthState({\n      state: \"waitingForScheduledRefetch\",\n      refetchTokenTimeoutId,\n      config: this.authState.config\n    });\n    this._logVerbose(\n      `scheduled preemptive auth token refetching in ${delay}ms`\n    );\n  }\n  // Protects against simultaneous calls to `setConfig`\n  // while we're fetching a token\n  async fetchTokenAndGuardAgainstRace(fetchToken, fetchArgs) {\n    const originalConfigVersion = ++this.configVersion;\n    this._logVerbose(\n      `fetching token with config version ${originalConfigVersion}`\n    );\n    const token = await fetchToken(fetchArgs);\n    if (this.configVersion !== originalConfigVersion) {\n      this._logVerbose(\n        `stale config version, expected ${originalConfigVersion}, got ${this.configVersion}`\n      );\n      return { isFromOutdatedConfig: true };\n    }\n    return { isFromOutdatedConfig: false, value: token };\n  }\n  stop() {\n    this.resetAuthState();\n    this.configVersion++;\n    this._logVerbose(`config version bumped to ${this.configVersion}`);\n  }\n  setAndReportAuthFailed(onAuthChange) {\n    onAuthChange(false);\n    this.resetAuthState();\n  }\n  resetAuthState() {\n    this.setAuthState({ state: \"noAuth\" });\n  }\n  setAuthState(newAuth) {\n    const authStateForLog = newAuth.state === \"waitingForServerConfirmationOfFreshToken\" ? {\n      hadAuth: newAuth.hadAuth,\n      state: newAuth.state,\n      token: `...${newAuth.token.slice(-7)}`\n    } : { state: newAuth.state };\n    this._logVerbose(\n      `setting auth state to ${JSON.stringify(authStateForLog)}`\n    );\n    switch (newAuth.state) {\n      case \"waitingForScheduledRefetch\":\n      case \"notRefetching\":\n      case \"noAuth\":\n        this.tokenConfirmationAttempts = 0;\n        break;\n      case \"waitingForServerConfirmationOfFreshToken\":\n      case \"waitingForServerConfirmationOfCachedToken\":\n      case \"initialRefetch\":\n        break;\n      default: {\n        const _typeCheck = newAuth;\n      }\n    }\n    if (this.authState.state === \"waitingForScheduledRefetch\") {\n      clearTimeout(this.authState.refetchTokenTimeoutId);\n      this.syncState.markAuthCompletion();\n    }\n    this.authState = newAuth;\n  }\n  decodeToken(token) {\n    try {\n      return (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__.jwtDecode)(token);\n    } catch (e) {\n      this._logVerbose(\n        `Error decoding token: ${e instanceof Error ? e.message : \"Unknown error\"}`\n      );\n      return null;\n    }\n  }\n  _logVerbose(message) {\n    this.logger.logVerbose(`${message} [v${this.configVersion}]`);\n  }\n}\n//# sourceMappingURL=authentication_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9hdXRoZW50aWNhdGlvbl9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDdUM7QUFDdkM7QUFDQTtBQUNPO0FBQ1A7QUFDQSx1Q0FBdUMsaUJBQWlCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvQ0FBb0M7QUFDdEQ7QUFDQSxPQUFPO0FBQ1A7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELG9CQUFvQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQkFBb0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGtFQUFrRTtBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsK0JBQStCLHdDQUF3QyxxQkFBcUI7QUFDNUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsdURBQXVELE1BQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsc0JBQXNCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHNCQUFzQixRQUFRLG1CQUFtQjtBQUMzRjtBQUNBLGVBQWU7QUFDZjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxtQkFBbUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdCQUF3QjtBQUMzQyxNQUFNLElBQUk7QUFDVjtBQUNBLCtCQUErQixnQ0FBZ0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscURBQVM7QUFDdEIsTUFBTTtBQUNOO0FBQ0EsaUNBQWlDLGlEQUFpRDtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFNBQVMsSUFBSSxtQkFBbUI7QUFDOUQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9hdXRoZW50aWNhdGlvbl9tYW5hZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IGp3dERlY29kZSB9IGZyb20gXCJqd3QtZGVjb2RlXCI7XG5jb25zdCBNQVhJTVVNX1JFRlJFU0hfREVMQVkgPSAyMCAqIDI0ICogNjAgKiA2MCAqIDFlMztcbmNvbnN0IE1BWF9UT0tFTl9DT05GSVJNQVRJT05fQVRURU1QVFMgPSAyO1xuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKHN5bmNTdGF0ZSwgY2FsbGJhY2tzLCBjb25maWcpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYXV0aFN0YXRlXCIsIHsgc3RhdGU6IFwibm9BdXRoXCIgfSk7XG4gICAgLy8gVXNlZCB0byBkZXRlY3QgcmFjZXMgaW52b2x2aW5nIGBzZXRDb25maWdgIGNhbGxzXG4gICAgLy8gd2hpbGUgYSB0b2tlbiBpcyBiZWluZyBmZXRjaGVkLlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25maWdWZXJzaW9uXCIsIDApO1xuICAgIC8vIFNoYXJlZCBieSB0aGUgQmFzZUNsaWVudCBzbyB0aGF0IHRoZSBhdXRoIG1hbmFnZXIgY2FuIGVhc2lseSBpbnNwZWN0IGl0XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN5bmNTdGF0ZVwiKTtcbiAgICAvLyBQYXNzZWQgZG93biBieSBCYXNlQ2xpZW50LCBzZW5kcyBhIG1lc3NhZ2UgdG8gdGhlIHNlcnZlclxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJhdXRoZW50aWNhdGVcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3BTb2NrZXRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyeVJlc3RhcnRTb2NrZXRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBhdXNlU29ja2V0XCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZXN1bWVTb2NrZXRcIik7XG4gICAgLy8gUGFzc2VkIGRvd24gYnkgQmFzZUNsaWVudCwgc2VuZHMgYSBtZXNzYWdlIHRvIHRoZSBzZXJ2ZXJcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY2xlYXJBdXRoXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJsb2dnZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlZnJlc2hUb2tlbkxlZXdheVNlY29uZHNcIik7XG4gICAgLy8gTnVtYmVyIG9mIHRpbWVzIHdlIGhhdmUgYXR0ZW1wdGVkIHRvIGNvbmZpcm0gdGhlIGxhdGVzdCB0b2tlbi4gV2UgcmV0cnkgdXBcbiAgICAvLyB0byBgTUFYX1RPS0VOX0NPTkZJUk1BVElPTl9BVFRFTVBUU2AgdGltZXMuXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRva2VuQ29uZmlybWF0aW9uQXR0ZW1wdHNcIiwgMCk7XG4gICAgdGhpcy5zeW5jU3RhdGUgPSBzeW5jU3RhdGU7XG4gICAgdGhpcy5hdXRoZW50aWNhdGUgPSBjYWxsYmFja3MuYXV0aGVudGljYXRlO1xuICAgIHRoaXMuc3RvcFNvY2tldCA9IGNhbGxiYWNrcy5zdG9wU29ja2V0O1xuICAgIHRoaXMudHJ5UmVzdGFydFNvY2tldCA9IGNhbGxiYWNrcy50cnlSZXN0YXJ0U29ja2V0O1xuICAgIHRoaXMucGF1c2VTb2NrZXQgPSBjYWxsYmFja3MucGF1c2VTb2NrZXQ7XG4gICAgdGhpcy5yZXN1bWVTb2NrZXQgPSBjYWxsYmFja3MucmVzdW1lU29ja2V0O1xuICAgIHRoaXMuY2xlYXJBdXRoID0gY2FsbGJhY2tzLmNsZWFyQXV0aDtcbiAgICB0aGlzLmxvZ2dlciA9IGNvbmZpZy5sb2dnZXI7XG4gICAgdGhpcy5yZWZyZXNoVG9rZW5MZWV3YXlTZWNvbmRzID0gY29uZmlnLnJlZnJlc2hUb2tlbkxlZXdheVNlY29uZHM7XG4gIH1cbiAgYXN5bmMgc2V0Q29uZmlnKGZldGNoVG9rZW4sIG9uQ2hhbmdlKSB7XG4gICAgdGhpcy5yZXNldEF1dGhTdGF0ZSgpO1xuICAgIHRoaXMuX2xvZ1ZlcmJvc2UoXCJwYXVzaW5nIFdTIGZvciBhdXRoIHRva2VuIGZldGNoXCIpO1xuICAgIHRoaXMucGF1c2VTb2NrZXQoKTtcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IHRoaXMuZmV0Y2hUb2tlbkFuZEd1YXJkQWdhaW5zdFJhY2UoZmV0Y2hUb2tlbiwge1xuICAgICAgZm9yY2VSZWZyZXNoVG9rZW46IGZhbHNlXG4gICAgfSk7XG4gICAgaWYgKHRva2VuLmlzRnJvbU91dGRhdGVkQ29uZmlnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0b2tlbi52YWx1ZSkge1xuICAgICAgdGhpcy5zZXRBdXRoU3RhdGUoe1xuICAgICAgICBzdGF0ZTogXCJ3YWl0aW5nRm9yU2VydmVyQ29uZmlybWF0aW9uT2ZDYWNoZWRUb2tlblwiLFxuICAgICAgICBjb25maWc6IHsgZmV0Y2hUb2tlbiwgb25BdXRoQ2hhbmdlOiBvbkNoYW5nZSB9LFxuICAgICAgICBoYXNSZXRyaWVkOiBmYWxzZVxuICAgICAgfSk7XG4gICAgICB0aGlzLmF1dGhlbnRpY2F0ZSh0b2tlbi52YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0QXV0aFN0YXRlKHtcbiAgICAgICAgc3RhdGU6IFwiaW5pdGlhbFJlZmV0Y2hcIixcbiAgICAgICAgY29uZmlnOiB7IGZldGNoVG9rZW4sIG9uQXV0aENoYW5nZTogb25DaGFuZ2UgfVxuICAgICAgfSk7XG4gICAgICBhd2FpdCB0aGlzLnJlZmV0Y2hUb2tlbigpO1xuICAgIH1cbiAgICB0aGlzLl9sb2dWZXJib3NlKFwicmVzdW1pbmcgV1MgYWZ0ZXIgYXV0aCB0b2tlbiBmZXRjaFwiKTtcbiAgICB0aGlzLnJlc3VtZVNvY2tldCgpO1xuICB9XG4gIG9uVHJhbnNpdGlvbihzZXJ2ZXJNZXNzYWdlKSB7XG4gICAgaWYgKCF0aGlzLnN5bmNTdGF0ZS5pc0N1cnJlbnRPck5ld2VyQXV0aFZlcnNpb24oXG4gICAgICBzZXJ2ZXJNZXNzYWdlLmVuZFZlcnNpb24uaWRlbnRpdHlcbiAgICApKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChzZXJ2ZXJNZXNzYWdlLmVuZFZlcnNpb24uaWRlbnRpdHkgPD0gc2VydmVyTWVzc2FnZS5zdGFydFZlcnNpb24uaWRlbnRpdHkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHRoaXMuYXV0aFN0YXRlLnN0YXRlID09PSBcIndhaXRpbmdGb3JTZXJ2ZXJDb25maXJtYXRpb25PZkNhY2hlZFRva2VuXCIpIHtcbiAgICAgIHRoaXMuX2xvZ1ZlcmJvc2UoXCJzZXJ2ZXIgY29uZmlybWVkIGF1dGggdG9rZW4gaXMgdmFsaWRcIik7XG4gICAgICB2b2lkIHRoaXMucmVmZXRjaFRva2VuKCk7XG4gICAgICB0aGlzLmF1dGhTdGF0ZS5jb25maWcub25BdXRoQ2hhbmdlKHRydWUpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5hdXRoU3RhdGUuc3RhdGUgPT09IFwid2FpdGluZ0ZvclNlcnZlckNvbmZpcm1hdGlvbk9mRnJlc2hUb2tlblwiKSB7XG4gICAgICB0aGlzLl9sb2dWZXJib3NlKFwic2VydmVyIGNvbmZpcm1lZCBuZXcgYXV0aCB0b2tlbiBpcyB2YWxpZFwiKTtcbiAgICAgIHRoaXMuc2NoZWR1bGVUb2tlblJlZmV0Y2godGhpcy5hdXRoU3RhdGUudG9rZW4pO1xuICAgICAgdGhpcy50b2tlbkNvbmZpcm1hdGlvbkF0dGVtcHRzID0gMDtcbiAgICAgIGlmICghdGhpcy5hdXRoU3RhdGUuaGFkQXV0aCkge1xuICAgICAgICB0aGlzLmF1dGhTdGF0ZS5jb25maWcub25BdXRoQ2hhbmdlKHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBvbkF1dGhFcnJvcihzZXJ2ZXJNZXNzYWdlKSB7XG4gICAgaWYgKHNlcnZlck1lc3NhZ2UuYXV0aFVwZGF0ZUF0dGVtcHRlZCA9PT0gZmFsc2UgJiYgKHRoaXMuYXV0aFN0YXRlLnN0YXRlID09PSBcIndhaXRpbmdGb3JTZXJ2ZXJDb25maXJtYXRpb25PZkZyZXNoVG9rZW5cIiB8fCB0aGlzLmF1dGhTdGF0ZS5zdGF0ZSA9PT0gXCJ3YWl0aW5nRm9yU2VydmVyQ29uZmlybWF0aW9uT2ZDYWNoZWRUb2tlblwiKSkge1xuICAgICAgdGhpcy5fbG9nVmVyYm9zZShcImlnbm9yaW5nIG5vbi1hdXRoIHRva2VuIGV4cGlyZWQgZXJyb3JcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgYmFzZVZlcnNpb24gfSA9IHNlcnZlck1lc3NhZ2U7XG4gICAgaWYgKCF0aGlzLnN5bmNTdGF0ZS5pc0N1cnJlbnRPck5ld2VyQXV0aFZlcnNpb24oYmFzZVZlcnNpb24gKyAxKSkge1xuICAgICAgdGhpcy5fbG9nVmVyYm9zZShcImlnbm9yaW5nIGF1dGggZXJyb3IgZm9yIHByZXZpb3VzIGF1dGggYXR0ZW1wdFwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdm9pZCB0aGlzLnRyeVRvUmVhdXRoZW50aWNhdGUoc2VydmVyTWVzc2FnZSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIFRoaXMgaXMgc2ltaWxhciB0byBgcmVmZXRjaFRva2VuYCBkZWZpbmVkIGJlbG93LCBpbiBmYWN0IHdlXG4gIC8vIGRvbid0IHJlcHJlc2VudCB0aGVtIGFzIGRpZmZlcmVudCBzdGF0ZXMsIGJ1dCBpdCBpcyBkaWZmZXJlbnRcbiAgLy8gaW4gdGhhdCB3ZSBwYXVzZSB0aGUgV2ViU29ja2V0IHNvIHRoYXQgbXV0YXRpb25zXG4gIC8vIGRvbid0IHJldHJ5IHdpdGggYmFkIGF1dGguXG4gIGFzeW5jIHRyeVRvUmVhdXRoZW50aWNhdGUoc2VydmVyTWVzc2FnZSkge1xuICAgIHRoaXMuX2xvZ1ZlcmJvc2UoYGF0dGVtcHRpbmcgdG8gcmVhdXRoZW50aWNhdGU6ICR7c2VydmVyTWVzc2FnZS5lcnJvcn1gKTtcbiAgICBpZiAoXG4gICAgICAvLyBObyB3YXkgdG8gZmV0Y2ggYW5vdGhlciB0b2tlbiwga2Fib29tXG4gICAgICB0aGlzLmF1dGhTdGF0ZS5zdGF0ZSA9PT0gXCJub0F1dGhcIiB8fCAvLyBXZSBmYWlsZWQgb24gYSBmcmVzaCB0b2tlbi4gQWZ0ZXIgYSBzbWFsbCBudW1iZXIgb2YgcmV0cmllcywgd2UgZ2l2ZSB1cFxuICAgICAgLy8gYW5kIGNsZWFyIHRoZSBhdXRoIHN0YXRlIHRvIGF2b2lkIGluZmluaXRlIHJldHJpZXMuXG4gICAgICB0aGlzLmF1dGhTdGF0ZS5zdGF0ZSA9PT0gXCJ3YWl0aW5nRm9yU2VydmVyQ29uZmlybWF0aW9uT2ZGcmVzaFRva2VuXCIgJiYgdGhpcy50b2tlbkNvbmZpcm1hdGlvbkF0dGVtcHRzID49IE1BWF9UT0tFTl9DT05GSVJNQVRJT05fQVRURU1QVFNcbiAgICApIHtcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFxuICAgICAgICBgRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZTogXCIke3NlcnZlck1lc3NhZ2UuZXJyb3J9XCIsIGNoZWNrIHlvdXIgc2VydmVyIGF1dGggY29uZmlnYFxuICAgICAgKTtcbiAgICAgIGlmICh0aGlzLnN5bmNTdGF0ZS5oYXNBdXRoKCkpIHtcbiAgICAgICAgdGhpcy5zeW5jU3RhdGUuY2xlYXJBdXRoKCk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5hdXRoU3RhdGUuc3RhdGUgIT09IFwibm9BdXRoXCIpIHtcbiAgICAgICAgdGhpcy5zZXRBbmRSZXBvcnRBdXRoRmFpbGVkKHRoaXMuYXV0aFN0YXRlLmNvbmZpZy5vbkF1dGhDaGFuZ2UpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5hdXRoU3RhdGUuc3RhdGUgPT09IFwid2FpdGluZ0ZvclNlcnZlckNvbmZpcm1hdGlvbk9mRnJlc2hUb2tlblwiKSB7XG4gICAgICB0aGlzLnRva2VuQ29uZmlybWF0aW9uQXR0ZW1wdHMrKztcbiAgICAgIHRoaXMuX2xvZ1ZlcmJvc2UoXG4gICAgICAgIGByZXRyeWluZyByZWF1dGhlbnRpY2F0aW9uLCAke01BWF9UT0tFTl9DT05GSVJNQVRJT05fQVRURU1QVFMgLSB0aGlzLnRva2VuQ29uZmlybWF0aW9uQXR0ZW1wdHN9IGF0dGVtcHRzIHJlbWFpbmluZ2BcbiAgICAgICk7XG4gICAgfVxuICAgIGF3YWl0IHRoaXMuc3RvcFNvY2tldCgpO1xuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy5mZXRjaFRva2VuQW5kR3VhcmRBZ2FpbnN0UmFjZShcbiAgICAgIHRoaXMuYXV0aFN0YXRlLmNvbmZpZy5mZXRjaFRva2VuLFxuICAgICAge1xuICAgICAgICBmb3JjZVJlZnJlc2hUb2tlbjogdHJ1ZVxuICAgICAgfVxuICAgICk7XG4gICAgaWYgKHRva2VuLmlzRnJvbU91dGRhdGVkQ29uZmlnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0b2tlbi52YWx1ZSAmJiB0aGlzLnN5bmNTdGF0ZS5pc05ld0F1dGgodG9rZW4udmFsdWUpKSB7XG4gICAgICB0aGlzLmF1dGhlbnRpY2F0ZSh0b2tlbi52YWx1ZSk7XG4gICAgICB0aGlzLnNldEF1dGhTdGF0ZSh7XG4gICAgICAgIHN0YXRlOiBcIndhaXRpbmdGb3JTZXJ2ZXJDb25maXJtYXRpb25PZkZyZXNoVG9rZW5cIixcbiAgICAgICAgY29uZmlnOiB0aGlzLmF1dGhTdGF0ZS5jb25maWcsXG4gICAgICAgIHRva2VuOiB0b2tlbi52YWx1ZSxcbiAgICAgICAgaGFkQXV0aDogdGhpcy5hdXRoU3RhdGUuc3RhdGUgPT09IFwibm90UmVmZXRjaGluZ1wiIHx8IHRoaXMuYXV0aFN0YXRlLnN0YXRlID09PSBcIndhaXRpbmdGb3JTY2hlZHVsZWRSZWZldGNoXCJcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9sb2dWZXJib3NlKFwicmVhdXRoZW50aWNhdGlvbiBmYWlsZWQsIGNvdWxkIG5vdCBmZXRjaCBhIG5ldyB0b2tlblwiKTtcbiAgICAgIGlmICh0aGlzLnN5bmNTdGF0ZS5oYXNBdXRoKCkpIHtcbiAgICAgICAgdGhpcy5zeW5jU3RhdGUuY2xlYXJBdXRoKCk7XG4gICAgICB9XG4gICAgICB0aGlzLnNldEFuZFJlcG9ydEF1dGhGYWlsZWQodGhpcy5hdXRoU3RhdGUuY29uZmlnLm9uQXV0aENoYW5nZSk7XG4gICAgfVxuICAgIHRoaXMudHJ5UmVzdGFydFNvY2tldCgpO1xuICB9XG4gIC8vIEZvcmNlIHJlZmV0Y2ggdGhlIHRva2VuIGFuZCBzY2hlZHVsZSBhbm90aGVyIHJlZmV0Y2hcbiAgLy8gYmVmb3JlIHRoZSB0b2tlbiBleHBpcmVzIC0gYW4gYWN0aXZlIGNsaWVudCBzaG91bGQgbmV2ZXJcbiAgLy8gbmVlZCB0byByZWF1dGhlbnRpY2F0ZS5cbiAgYXN5bmMgcmVmZXRjaFRva2VuKCkge1xuICAgIGlmICh0aGlzLmF1dGhTdGF0ZS5zdGF0ZSA9PT0gXCJub0F1dGhcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLl9sb2dWZXJib3NlKFwicmVmZXRjaGluZyBhdXRoIHRva2VuXCIpO1xuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy5mZXRjaFRva2VuQW5kR3VhcmRBZ2FpbnN0UmFjZShcbiAgICAgIHRoaXMuYXV0aFN0YXRlLmNvbmZpZy5mZXRjaFRva2VuLFxuICAgICAge1xuICAgICAgICBmb3JjZVJlZnJlc2hUb2tlbjogdHJ1ZVxuICAgICAgfVxuICAgICk7XG4gICAgaWYgKHRva2VuLmlzRnJvbU91dGRhdGVkQ29uZmlnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0b2tlbi52YWx1ZSkge1xuICAgICAgaWYgKHRoaXMuc3luY1N0YXRlLmlzTmV3QXV0aCh0b2tlbi52YWx1ZSkpIHtcbiAgICAgICAgdGhpcy5zZXRBdXRoU3RhdGUoe1xuICAgICAgICAgIHN0YXRlOiBcIndhaXRpbmdGb3JTZXJ2ZXJDb25maXJtYXRpb25PZkZyZXNoVG9rZW5cIixcbiAgICAgICAgICBoYWRBdXRoOiB0aGlzLnN5bmNTdGF0ZS5oYXNBdXRoKCksXG4gICAgICAgICAgdG9rZW46IHRva2VuLnZhbHVlLFxuICAgICAgICAgIGNvbmZpZzogdGhpcy5hdXRoU3RhdGUuY29uZmlnXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZSh0b2tlbi52YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNldEF1dGhTdGF0ZSh7XG4gICAgICAgICAgc3RhdGU6IFwibm90UmVmZXRjaGluZ1wiLFxuICAgICAgICAgIGNvbmZpZzogdGhpcy5hdXRoU3RhdGUuY29uZmlnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9sb2dWZXJib3NlKFwicmVmZXRjaGluZyB0b2tlbiBmYWlsZWRcIik7XG4gICAgICBpZiAodGhpcy5zeW5jU3RhdGUuaGFzQXV0aCgpKSB7XG4gICAgICAgIHRoaXMuY2xlYXJBdXRoKCk7XG4gICAgICB9XG4gICAgICB0aGlzLnNldEFuZFJlcG9ydEF1dGhGYWlsZWQodGhpcy5hdXRoU3RhdGUuY29uZmlnLm9uQXV0aENoYW5nZSk7XG4gICAgfVxuICAgIHRoaXMuX2xvZ1ZlcmJvc2UoXG4gICAgICBcInJlc3RhcnRpbmcgV1MgYWZ0ZXIgYXV0aCB0b2tlbiBmZXRjaCAoaWYgY3VycmVudGx5IHN0b3BwZWQpXCJcbiAgICApO1xuICAgIHRoaXMudHJ5UmVzdGFydFNvY2tldCgpO1xuICB9XG4gIHNjaGVkdWxlVG9rZW5SZWZldGNoKHRva2VuKSB7XG4gICAgaWYgKHRoaXMuYXV0aFN0YXRlLnN0YXRlID09PSBcIm5vQXV0aFwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGRlY29kZWRUb2tlbiA9IHRoaXMuZGVjb2RlVG9rZW4odG9rZW4pO1xuICAgIGlmICghZGVjb2RlZFRva2VuKSB7XG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcihcbiAgICAgICAgXCJBdXRoIHRva2VuIGlzIG5vdCBhIHZhbGlkIEpXVCwgY2Fubm90IHJlZmV0Y2ggdGhlIHRva2VuXCJcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgaWF0LCBleHAgfSA9IGRlY29kZWRUb2tlbjtcbiAgICBpZiAoIWlhdCB8fCAhZXhwKSB7XG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcihcbiAgICAgICAgXCJBdXRoIHRva2VuIGRvZXMgbm90IGhhdmUgcmVxdWlyZWQgZmllbGRzLCBjYW5ub3QgcmVmZXRjaCB0aGUgdG9rZW5cIlxuICAgICAgKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgdG9rZW5WYWxpZGl0eVNlY29uZHMgPSBleHAgLSBpYXQ7XG4gICAgaWYgKHRva2VuVmFsaWRpdHlTZWNvbmRzIDw9IDIpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFxuICAgICAgICBcIkF1dGggdG9rZW4gZG9lcyBub3QgbGl2ZSBsb25nIGVub3VnaCwgY2Fubm90IHJlZmV0Y2ggdGhlIHRva2VuXCJcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBkZWxheSA9IE1hdGgubWluKFxuICAgICAgTUFYSU1VTV9SRUZSRVNIX0RFTEFZLFxuICAgICAgKHRva2VuVmFsaWRpdHlTZWNvbmRzIC0gdGhpcy5yZWZyZXNoVG9rZW5MZWV3YXlTZWNvbmRzKSAqIDFlM1xuICAgICk7XG4gICAgaWYgKGRlbGF5IDw9IDApIHtcbiAgICAgIHRoaXMubG9nZ2VyLndhcm4oXG4gICAgICAgIGBSZWZldGNoaW5nIGF1dGggdG9rZW4gaW1tZWRpYXRlbHksIGNvbmZpZ3VyZWQgbGVld2F5ICR7dGhpcy5yZWZyZXNoVG9rZW5MZWV3YXlTZWNvbmRzfXMgaXMgbGFyZ2VyIHRoYW4gdGhlIHRva2VuJ3MgbGlmZXRpbWUgJHt0b2tlblZhbGlkaXR5U2Vjb25kc31zYFxuICAgICAgKTtcbiAgICAgIGRlbGF5ID0gMDtcbiAgICB9XG4gICAgY29uc3QgcmVmZXRjaFRva2VuVGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLl9sb2dWZXJib3NlKFwicnVubmluZyBzY2hlZHVsZWQgdG9rZW4gcmVmZXRjaFwiKTtcbiAgICAgIHZvaWQgdGhpcy5yZWZldGNoVG9rZW4oKTtcbiAgICB9LCBkZWxheSk7XG4gICAgdGhpcy5zZXRBdXRoU3RhdGUoe1xuICAgICAgc3RhdGU6IFwid2FpdGluZ0ZvclNjaGVkdWxlZFJlZmV0Y2hcIixcbiAgICAgIHJlZmV0Y2hUb2tlblRpbWVvdXRJZCxcbiAgICAgIGNvbmZpZzogdGhpcy5hdXRoU3RhdGUuY29uZmlnXG4gICAgfSk7XG4gICAgdGhpcy5fbG9nVmVyYm9zZShcbiAgICAgIGBzY2hlZHVsZWQgcHJlZW1wdGl2ZSBhdXRoIHRva2VuIHJlZmV0Y2hpbmcgaW4gJHtkZWxheX1tc2BcbiAgICApO1xuICB9XG4gIC8vIFByb3RlY3RzIGFnYWluc3Qgc2ltdWx0YW5lb3VzIGNhbGxzIHRvIGBzZXRDb25maWdgXG4gIC8vIHdoaWxlIHdlJ3JlIGZldGNoaW5nIGEgdG9rZW5cbiAgYXN5bmMgZmV0Y2hUb2tlbkFuZEd1YXJkQWdhaW5zdFJhY2UoZmV0Y2hUb2tlbiwgZmV0Y2hBcmdzKSB7XG4gICAgY29uc3Qgb3JpZ2luYWxDb25maWdWZXJzaW9uID0gKyt0aGlzLmNvbmZpZ1ZlcnNpb247XG4gICAgdGhpcy5fbG9nVmVyYm9zZShcbiAgICAgIGBmZXRjaGluZyB0b2tlbiB3aXRoIGNvbmZpZyB2ZXJzaW9uICR7b3JpZ2luYWxDb25maWdWZXJzaW9ufWBcbiAgICApO1xuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgZmV0Y2hUb2tlbihmZXRjaEFyZ3MpO1xuICAgIGlmICh0aGlzLmNvbmZpZ1ZlcnNpb24gIT09IG9yaWdpbmFsQ29uZmlnVmVyc2lvbikge1xuICAgICAgdGhpcy5fbG9nVmVyYm9zZShcbiAgICAgICAgYHN0YWxlIGNvbmZpZyB2ZXJzaW9uLCBleHBlY3RlZCAke29yaWdpbmFsQ29uZmlnVmVyc2lvbn0sIGdvdCAke3RoaXMuY29uZmlnVmVyc2lvbn1gXG4gICAgICApO1xuICAgICAgcmV0dXJuIHsgaXNGcm9tT3V0ZGF0ZWRDb25maWc6IHRydWUgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgaXNGcm9tT3V0ZGF0ZWRDb25maWc6IGZhbHNlLCB2YWx1ZTogdG9rZW4gfTtcbiAgfVxuICBzdG9wKCkge1xuICAgIHRoaXMucmVzZXRBdXRoU3RhdGUoKTtcbiAgICB0aGlzLmNvbmZpZ1ZlcnNpb24rKztcbiAgICB0aGlzLl9sb2dWZXJib3NlKGBjb25maWcgdmVyc2lvbiBidW1wZWQgdG8gJHt0aGlzLmNvbmZpZ1ZlcnNpb259YCk7XG4gIH1cbiAgc2V0QW5kUmVwb3J0QXV0aEZhaWxlZChvbkF1dGhDaGFuZ2UpIHtcbiAgICBvbkF1dGhDaGFuZ2UoZmFsc2UpO1xuICAgIHRoaXMucmVzZXRBdXRoU3RhdGUoKTtcbiAgfVxuICByZXNldEF1dGhTdGF0ZSgpIHtcbiAgICB0aGlzLnNldEF1dGhTdGF0ZSh7IHN0YXRlOiBcIm5vQXV0aFwiIH0pO1xuICB9XG4gIHNldEF1dGhTdGF0ZShuZXdBdXRoKSB7XG4gICAgY29uc3QgYXV0aFN0YXRlRm9yTG9nID0gbmV3QXV0aC5zdGF0ZSA9PT0gXCJ3YWl0aW5nRm9yU2VydmVyQ29uZmlybWF0aW9uT2ZGcmVzaFRva2VuXCIgPyB7XG4gICAgICBoYWRBdXRoOiBuZXdBdXRoLmhhZEF1dGgsXG4gICAgICBzdGF0ZTogbmV3QXV0aC5zdGF0ZSxcbiAgICAgIHRva2VuOiBgLi4uJHtuZXdBdXRoLnRva2VuLnNsaWNlKC03KX1gXG4gICAgfSA6IHsgc3RhdGU6IG5ld0F1dGguc3RhdGUgfTtcbiAgICB0aGlzLl9sb2dWZXJib3NlKFxuICAgICAgYHNldHRpbmcgYXV0aCBzdGF0ZSB0byAke0pTT04uc3RyaW5naWZ5KGF1dGhTdGF0ZUZvckxvZyl9YFxuICAgICk7XG4gICAgc3dpdGNoIChuZXdBdXRoLnN0YXRlKSB7XG4gICAgICBjYXNlIFwid2FpdGluZ0ZvclNjaGVkdWxlZFJlZmV0Y2hcIjpcbiAgICAgIGNhc2UgXCJub3RSZWZldGNoaW5nXCI6XG4gICAgICBjYXNlIFwibm9BdXRoXCI6XG4gICAgICAgIHRoaXMudG9rZW5Db25maXJtYXRpb25BdHRlbXB0cyA9IDA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIndhaXRpbmdGb3JTZXJ2ZXJDb25maXJtYXRpb25PZkZyZXNoVG9rZW5cIjpcbiAgICAgIGNhc2UgXCJ3YWl0aW5nRm9yU2VydmVyQ29uZmlybWF0aW9uT2ZDYWNoZWRUb2tlblwiOlxuICAgICAgY2FzZSBcImluaXRpYWxSZWZldGNoXCI6XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBjb25zdCBfdHlwZUNoZWNrID0gbmV3QXV0aDtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRoaXMuYXV0aFN0YXRlLnN0YXRlID09PSBcIndhaXRpbmdGb3JTY2hlZHVsZWRSZWZldGNoXCIpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLmF1dGhTdGF0ZS5yZWZldGNoVG9rZW5UaW1lb3V0SWQpO1xuICAgICAgdGhpcy5zeW5jU3RhdGUubWFya0F1dGhDb21wbGV0aW9uKCk7XG4gICAgfVxuICAgIHRoaXMuYXV0aFN0YXRlID0gbmV3QXV0aDtcbiAgfVxuICBkZWNvZGVUb2tlbih0b2tlbikge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gand0RGVjb2RlKHRva2VuKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLl9sb2dWZXJib3NlKFxuICAgICAgICBgRXJyb3IgZGVjb2RpbmcgdG9rZW46ICR7ZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogXCJVbmtub3duIGVycm9yXCJ9YFxuICAgICAgKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuICBfbG9nVmVyYm9zZShtZXNzYWdlKSB7XG4gICAgdGhpcy5sb2dnZXIubG9nVmVyYm9zZShgJHttZXNzYWdlfSBbdiR7dGhpcy5jb25maWdWZXJzaW9ufV1gKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aGVudGljYXRpb25fbWFuYWdlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* binding */ BaseConvexClient)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _local_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local_state.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\");\n/* harmony import */ var _request_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./request_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\");\n/* harmony import */ var _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimistic_updates_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\");\n/* harmony import */ var _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./remote_query_set.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_socket_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\");\n/* harmony import */ var _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authentication_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\");\n/* harmony import */ var _metrics_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass BaseConvexClient {\n  /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param onTransition - A callback receiving an array of query tokens\n   * corresponding to query results that have changed -- additional handlers\n   * can be added via `addOnTransitionHandler`.\n   * @param options - See {@link BaseConvexClientOptions} for a full description.\n   */\n  constructor(address, onTransition, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"state\");\n    __publicField(this, \"requestManager\");\n    __publicField(this, \"webSocketManager\");\n    __publicField(this, \"authenticationManager\");\n    __publicField(this, \"remoteQuerySet\");\n    __publicField(this, \"optimisticQueryResults\");\n    __publicField(this, \"_transitionHandlerCounter\", 0);\n    __publicField(this, \"_nextRequestId\");\n    __publicField(this, \"_onTransitionFns\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_sessionId\");\n    __publicField(this, \"firstMessageReceived\", false);\n    __publicField(this, \"debug\");\n    __publicField(this, \"logger\");\n    __publicField(this, \"maxObservedTimestamp\");\n    // Instance property so that `mark()` doesn't need to be called as a method.\n    __publicField(this, \"mark\", (name) => {\n      if (this.debug) {\n        (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.mark)(name, this.sessionId);\n      }\n    });\n    if (typeof address === \"object\") {\n      throw new Error(\n        \"Passing a ClientConfig object is no longer supported. Pass the URL of the Convex deployment as a string directly.\"\n      );\n    }\n    if (options?.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.validateDeploymentUrl)(address);\n    }\n    options = { ...options };\n    const authRefreshTokenLeewaySeconds = options.authRefreshTokenLeewaySeconds ?? 2;\n    let webSocketConstructor = options.webSocketConstructor;\n    if (!webSocketConstructor && typeof WebSocket === \"undefined\") {\n      throw new Error(\n        \"No WebSocket global variable defined! To use Convex in an environment without WebSocket try the HTTP client: https://docs.convex.dev/api/classes/browser.ConvexHttpClient\"\n      );\n    }\n    webSocketConstructor = webSocketConstructor || WebSocket;\n    this.debug = options.reportDebugInfoToConvex ?? false;\n    this.address = address;\n    this.logger = options.logger === false ? (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.instantiateNoopLogger)({ verbose: options.verbose ?? false }) : options.logger !== true && options.logger ? options.logger : (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.instantiateDefaultLogger)({ verbose: options.verbose ?? false });\n    const i = address.search(\"://\");\n    if (i === -1) {\n      throw new Error(\"Provided address was not an absolute URL.\");\n    }\n    const origin = address.substring(i + 3);\n    const protocol = address.substring(0, i);\n    let wsProtocol;\n    if (protocol === \"http\") {\n      wsProtocol = \"ws\";\n    } else if (protocol === \"https\") {\n      wsProtocol = \"wss\";\n    } else {\n      throw new Error(`Unknown parent protocol ${protocol}`);\n    }\n    const wsUri = `${wsProtocol}://${origin}/api/${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}/sync`;\n    this.state = new _local_state_js__WEBPACK_IMPORTED_MODULE_3__.LocalSyncState();\n    this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet(\n      (queryId) => this.state.queryPath(queryId),\n      this.logger\n    );\n    this.requestManager = new _request_manager_js__WEBPACK_IMPORTED_MODULE_4__.RequestManager(this.logger);\n    this.authenticationManager = new _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__.AuthenticationManager(\n      this.state,\n      {\n        authenticate: (token) => {\n          const message = this.state.setAuth(token);\n          this.webSocketManager.sendMessage(message);\n          return message.baseVersion;\n        },\n        stopSocket: () => this.webSocketManager.stop(),\n        tryRestartSocket: () => this.webSocketManager.tryRestart(),\n        pauseSocket: () => {\n          this.webSocketManager.pause();\n          this.state.pause();\n        },\n        resumeSocket: () => this.webSocketManager.resume(),\n        clearAuth: () => {\n          this.clearAuth();\n        }\n      },\n      {\n        logger: this.logger,\n        refreshTokenLeewaySeconds: authRefreshTokenLeewaySeconds\n      }\n    );\n    this.optimisticQueryResults = new _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__.OptimisticQueryResults();\n    this.addOnTransitionHandler((transition) => {\n      onTransition(transition.queries.map((q) => q.token));\n    });\n    this._nextRequestId = 0;\n    this._sessionId = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.newSessionId)();\n    const { unsavedChangesWarning } = options;\n    if (typeof window === \"undefined\" || typeof window.addEventListener === \"undefined\") {\n      if (unsavedChangesWarning === true) {\n        throw new Error(\n          \"unsavedChangesWarning requested, but window.addEventListener not found! Remove {unsavedChangesWarning: true} from Convex client options.\"\n        );\n      }\n    } else if (unsavedChangesWarning !== false) {\n      window.addEventListener(\"beforeunload\", (e) => {\n        if (this.requestManager.hasIncompleteRequests()) {\n          e.preventDefault();\n          const confirmationMessage = \"Are you sure you want to leave? Your changes may not be saved.\";\n          (e || window.event).returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      });\n    }\n    this.webSocketManager = new _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__.WebSocketManager(\n      wsUri,\n      {\n        onOpen: (reconnectMetadata) => {\n          this.mark(\"convexWebSocketOpen\");\n          this.webSocketManager.sendMessage({\n            ...reconnectMetadata,\n            type: \"Connect\",\n            sessionId: this._sessionId,\n            maxObservedTimestamp: this.maxObservedTimestamp\n          });\n          const oldRemoteQueryResults = new Set(\n            this.remoteQuerySet.remoteQueryResults().keys()\n          );\n          this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet(\n            (queryId) => this.state.queryPath(queryId),\n            this.logger\n          );\n          const [querySetModification, authModification] = this.state.restart(\n            oldRemoteQueryResults\n          );\n          if (authModification) {\n            this.webSocketManager.sendMessage(authModification);\n          }\n          this.webSocketManager.sendMessage(querySetModification);\n          for (const message of this.requestManager.restart()) {\n            this.webSocketManager.sendMessage(message);\n          }\n        },\n        onResume: () => {\n          const [querySetModification, authModification] = this.state.resume();\n          if (authModification) {\n            this.webSocketManager.sendMessage(authModification);\n          }\n          if (querySetModification) {\n            this.webSocketManager.sendMessage(querySetModification);\n          }\n          for (const message of this.requestManager.resume()) {\n            this.webSocketManager.sendMessage(message);\n          }\n        },\n        onMessage: (serverMessage) => {\n          if (!this.firstMessageReceived) {\n            this.firstMessageReceived = true;\n            this.mark(\"convexFirstMessageReceived\");\n            this.reportMarks();\n          }\n          switch (serverMessage.type) {\n            case \"Transition\": {\n              this.observedTimestamp(serverMessage.endVersion.ts);\n              this.authenticationManager.onTransition(serverMessage);\n              this.remoteQuerySet.transition(serverMessage);\n              this.state.transition(serverMessage);\n              const completedRequests = this.requestManager.removeCompleted(\n                this.remoteQuerySet.timestamp()\n              );\n              this.notifyOnQueryResultChanges(completedRequests);\n              break;\n            }\n            case \"MutationResponse\": {\n              if (serverMessage.success) {\n                this.observedTimestamp(serverMessage.ts);\n              }\n              const completedMutationInfo = this.requestManager.onResponse(serverMessage);\n              if (completedMutationInfo !== null) {\n                this.notifyOnQueryResultChanges(\n                  /* @__PURE__ */ new Map([\n                    [\n                      completedMutationInfo.requestId,\n                      completedMutationInfo.result\n                    ]\n                  ])\n                );\n              }\n              break;\n            }\n            case \"ActionResponse\": {\n              this.requestManager.onResponse(serverMessage);\n              break;\n            }\n            case \"AuthError\": {\n              this.authenticationManager.onAuthError(serverMessage);\n              break;\n            }\n            case \"FatalError\": {\n              const error = (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logFatalError)(this.logger, serverMessage.error);\n              void this.webSocketManager.terminate();\n              throw error;\n            }\n            case \"Ping\":\n              break;\n            // do nothing\n            default: {\n              const _typeCheck = serverMessage;\n            }\n          }\n          return {\n            hasSyncedPastLastReconnect: this.hasSyncedPastLastReconnect()\n          };\n        }\n      },\n      webSocketConstructor,\n      this.logger\n    );\n    this.mark(\"convexClientConstructed\");\n  }\n  /**\n   * Return true if there is outstanding work from prior to the time of the most recent restart.\n   * This indicates that the client has not proven itself to have gotten past the issue that\n   * potentially led to the restart. Use this to influence when to reset backoff after a failure.\n   */\n  hasSyncedPastLastReconnect() {\n    const hasSyncedPastLastReconnect = this.requestManager.hasSyncedPastLastReconnect() || this.state.hasSyncedPastLastReconnect();\n    return hasSyncedPastLastReconnect;\n  }\n  observedTimestamp(observedTs) {\n    if (this.maxObservedTimestamp === void 0 || this.maxObservedTimestamp.lessThanOrEqual(observedTs)) {\n      this.maxObservedTimestamp = observedTs;\n    }\n  }\n  getMaxObservedTimestamp() {\n    return this.maxObservedTimestamp;\n  }\n  /**\n   * Compute the current query results based on the remoteQuerySet and the\n   * current optimistic updates and call `onTransition` for all the changed\n   * queries.\n   *\n   * @param completedMutations - A set of mutation IDs whose optimistic updates\n   * are no longer needed.\n   */\n  notifyOnQueryResultChanges(completedRequests) {\n    const remoteQueryResults = this.remoteQuerySet.remoteQueryResults();\n    const queryTokenToValue = /* @__PURE__ */ new Map();\n    for (const [queryId, result] of remoteQueryResults) {\n      const queryToken = this.state.queryToken(queryId);\n      if (queryToken !== null) {\n        const query = {\n          result,\n          udfPath: this.state.queryPath(queryId),\n          args: this.state.queryArgs(queryId)\n        };\n        queryTokenToValue.set(queryToken, query);\n      }\n    }\n    const changedQueryTokens = this.optimisticQueryResults.ingestQueryResultsFromServer(\n      queryTokenToValue,\n      new Set(completedRequests.keys())\n    );\n    this.handleTransition({\n      queries: changedQueryTokens.map((token) => ({\n        token,\n        modification: {\n          kind: \"Updated\",\n          result: queryTokenToValue.get(token).result\n        }\n      })),\n      reflectedMutations: Array.from(completedRequests).map(\n        ([requestId, result]) => ({\n          requestId,\n          result\n        })\n      ),\n      timestamp: this.remoteQuerySet.timestamp()\n    });\n  }\n  handleTransition(transition) {\n    for (const fn of this._onTransitionFns.values()) {\n      fn(transition);\n    }\n  }\n  /**\n   * Add a handler that will be called on a transition.\n   *\n   * Any external side effects (e.g. setting React state) should be handled here.\n   *\n   * @param fn\n   *\n   * @returns\n   */\n  addOnTransitionHandler(fn) {\n    const id = this._transitionHandlerCounter++;\n    this._onTransitionFns.set(id, fn);\n    return () => this._onTransitionFns.delete(id);\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    void this.authenticationManager.setConfig(fetchToken, onChange);\n  }\n  hasAuth() {\n    return this.state.hasAuth();\n  }\n  /** @internal */\n  setAdminAuth(value, fakeUserIdentity) {\n    const message = this.state.setAdminAuth(value, fakeUserIdentity);\n    this.webSocketManager.sendMessage(message);\n  }\n  clearAuth() {\n    const message = this.state.clearAuth();\n    this.webSocketManager.sendMessage(message);\n  }\n  /**\n     * Subscribe to a query function.\n     *\n     * Whenever this query's result changes, the `onTransition` callback\n     * passed into the constructor will be called.\n     *\n     * @param name - The name of the query.\n     * @param args - An arguments object for the query. If this is omitted, the\n     * arguments will be `{}`.\n     * @param options - A {@link SubscribeOptions} options object for this query.\n  \n     * @returns An object containing a {@link QueryToken} corresponding to this\n     * query and an `unsubscribe` callback.\n     */\n  subscribe(name, args, options) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const { modification, queryToken, unsubscribe } = this.state.subscribe(\n      name,\n      argsObject,\n      options?.journal,\n      options?.componentPath\n    );\n    if (modification !== null) {\n      this.webSocketManager.sendMessage(modification);\n    }\n    return {\n      queryToken,\n      unsubscribe: () => {\n        const modification2 = unsubscribe();\n        if (modification2) {\n          this.webSocketManager.sendMessage(modification2);\n        }\n      }\n    };\n  }\n  /**\n   * A query result based only on the current, local state.\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   */\n  localQueryResult(udfPath, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n  /**\n   * Get query result by query token based on current, local state\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   *\n   * @internal\n   */\n  localQueryResultByToken(queryToken) {\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n  /**\n   * Whether local query result is available for a toke.\n   *\n   * This method does not throw if the result is an error.\n   *\n   * @internal\n   */\n  hasLocalQueryResultByToken(queryToken) {\n    return this.optimisticQueryResults.hasQueryResult(queryToken);\n  }\n  /**\n   * @internal\n   */\n  localQueryLogs(udfPath, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n    return this.optimisticQueryResults.queryLogs(queryToken);\n  }\n  /**\n   * Retrieve the current {@link QueryJournal} for this query function.\n   *\n   * If we have not yet received a result for this query, this will be `undefined`.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for this query.\n   * @returns The query's {@link QueryJournal} or `undefined`.\n   */\n  queryJournal(name, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(name, argsObject);\n    return this.state.queryJournal(queryToken);\n  }\n  /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */\n  connectionState() {\n    const wsConnectionState = this.webSocketManager.connectionState();\n    return {\n      hasInflightRequests: this.requestManager.hasInflightRequests(),\n      isWebSocketConnected: wsConnectionState.isConnected,\n      hasEverConnected: wsConnectionState.hasEverConnected,\n      connectionCount: wsConnectionState.connectionCount,\n      connectionRetries: wsConnectionState.connectionRetries,\n      timeOfOldestInflightRequest: this.requestManager.timeOfOldestInflightRequest(),\n      inflightMutations: this.requestManager.inflightMutations(),\n      inflightActions: this.requestManager.inflightActions()\n    };\n  }\n  /**\n     * Execute a mutation function.\n     *\n     * @param name - The name of the mutation.\n     * @param args - An arguments object for the mutation. If this is omitted,\n     * the arguments will be `{}`.\n     * @param options - A {@link MutationOptions} options object for this mutation.\n  \n     * @returns - A promise of the mutation's result.\n     */\n  async mutation(name, args, options) {\n    const result = await this.mutationInternal(name, args, options);\n    if (!result.success) {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError(\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result)\n          )\n        );\n      }\n      throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result));\n    }\n    return result.value;\n  }\n  /**\n   * @internal\n   */\n  async mutationInternal(udfPath, args, options, componentPath) {\n    const { mutationPromise } = this.enqueueMutation(\n      udfPath,\n      args,\n      options,\n      componentPath\n    );\n    return mutationPromise;\n  }\n  /**\n   * @internal\n   */\n  enqueueMutation(udfPath, args, options, componentPath) {\n    const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    this.tryReportLongDisconnect();\n    const requestId = this.nextRequestId;\n    this._nextRequestId++;\n    if (options !== void 0) {\n      const optimisticUpdate = options.optimisticUpdate;\n      if (optimisticUpdate !== void 0) {\n        const wrappedUpdate = (localQueryStore) => {\n          optimisticUpdate(localQueryStore, mutationArgs);\n        };\n        const changedQueryTokens = this.optimisticQueryResults.applyOptimisticUpdate(\n          wrappedUpdate,\n          requestId\n        );\n        const changedQueries = changedQueryTokens.map((token) => {\n          const localResult = this.localQueryResultByToken(token);\n          return {\n            token,\n            modification: {\n              kind: \"Updated\",\n              result: localResult === void 0 ? void 0 : {\n                success: true,\n                value: localResult,\n                logLines: []\n              }\n            }\n          };\n        });\n        this.handleTransition({\n          queries: changedQueries,\n          reflectedMutations: [],\n          timestamp: this.remoteQuerySet.timestamp()\n        });\n      }\n    }\n    const message = {\n      type: \"Mutation\",\n      requestId,\n      udfPath,\n      componentPath,\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(mutationArgs)]\n    };\n    const mightBeSent = this.webSocketManager.sendMessage(message);\n    const mutationPromise = this.requestManager.request(message, mightBeSent);\n    return {\n      requestId,\n      mutationPromise\n    };\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param name - The name of the action.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action(name, args) {\n    const result = await this.actionInternal(name, args);\n    if (!result.success) {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result))\n        );\n      }\n      throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result));\n    }\n    return result.value;\n  }\n  /**\n   * @internal\n   */\n  async actionInternal(udfPath, args, componentPath) {\n    const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const requestId = this.nextRequestId;\n    this._nextRequestId++;\n    this.tryReportLongDisconnect();\n    const message = {\n      type: \"Action\",\n      requestId,\n      udfPath,\n      componentPath,\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(actionArgs)]\n    };\n    const mightBeSent = this.webSocketManager.sendMessage(message);\n    return this.requestManager.request(message, mightBeSent);\n  }\n  /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with an {@link BaseConvexClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */\n  async close() {\n    this.authenticationManager.stop();\n    return this.webSocketManager.terminate();\n  }\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n  /**\n   * @internal\n   */\n  get nextRequestId() {\n    return this._nextRequestId;\n  }\n  /**\n   * @internal\n   */\n  get sessionId() {\n    return this._sessionId;\n  }\n  /**\n   * Reports performance marks to the server. This should only be called when\n   * we have a functional websocket.\n   */\n  reportMarks() {\n    if (this.debug) {\n      const report = (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.getMarksReport)(this.sessionId);\n      this.webSocketManager.sendMessage({\n        type: \"Event\",\n        eventType: \"ClientConnect\",\n        event: report\n      });\n    }\n  }\n  tryReportLongDisconnect() {\n    if (!this.debug) {\n      return;\n    }\n    const timeOfOldestRequest = this.connectionState().timeOfOldestInflightRequest;\n    if (timeOfOldestRequest === null || Date.now() - timeOfOldestRequest.getTime() <= 60 * 1e3) {\n      return;\n    }\n    const endpoint = `${this.address}/api/debug_event`;\n    fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}`\n      },\n      body: JSON.stringify({ event: \"LongWebsocketDisconnect\" })\n    }).then((response) => {\n      if (!response.ok) {\n        this.logger.warn(\n          \"Analytics request failed with response:\",\n          response.body\n        );\n      }\n    }).catch((error) => {\n      this.logger.warn(\"Analytics response failed with error:\", error);\n    });\n  }\n}\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/local_state.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalSyncState: () => (/* binding */ LocalSyncState)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass LocalSyncState {\n  constructor() {\n    __publicField(this, \"nextQueryId\");\n    __publicField(this, \"querySetVersion\");\n    __publicField(this, \"querySet\");\n    __publicField(this, \"queryIdToToken\");\n    __publicField(this, \"identityVersion\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"outstandingQueriesOlderThanRestart\");\n    __publicField(this, \"outstandingAuthOlderThanRestart\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"pendingQuerySetModifications\");\n    this.nextQueryId = 0;\n    this.querySetVersion = 0;\n    this.identityVersion = 0;\n    this.querySet = /* @__PURE__ */ new Map();\n    this.queryIdToToken = /* @__PURE__ */ new Map();\n    this.outstandingQueriesOlderThanRestart = /* @__PURE__ */ new Set();\n    this.outstandingAuthOlderThanRestart = false;\n    this.paused = false;\n    this.pendingQuerySetModifications = /* @__PURE__ */ new Map();\n  }\n  hasSyncedPastLastReconnect() {\n    return this.outstandingQueriesOlderThanRestart.size === 0 && !this.outstandingAuthOlderThanRestart;\n  }\n  markAuthCompletion() {\n    this.outstandingAuthOlderThanRestart = false;\n  }\n  subscribe(udfPath, args, journal, componentPath) {\n    const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== void 0) {\n      existingEntry.numSubscribers += 1;\n      return {\n        queryToken,\n        modification: null,\n        unsubscribe: () => this.removeSubscriber(queryToken)\n      };\n    } else {\n      const queryId = this.nextQueryId++;\n      const query = {\n        id: queryId,\n        canonicalizedUdfPath,\n        args,\n        numSubscribers: 1,\n        journal,\n        componentPath\n      };\n      this.querySet.set(queryToken, query);\n      this.queryIdToToken.set(queryId, queryToken);\n      const baseVersion = this.querySetVersion;\n      const newVersion = this.querySetVersion + 1;\n      const add = {\n        type: \"Add\",\n        queryId,\n        udfPath: canonicalizedUdfPath,\n        args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)],\n        journal,\n        componentPath\n      };\n      if (this.paused) {\n        this.pendingQuerySetModifications.set(queryId, add);\n      } else {\n        this.querySetVersion = newVersion;\n      }\n      const modification = {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [add]\n      };\n      return {\n        queryToken,\n        modification,\n        unsubscribe: () => this.removeSubscriber(queryToken)\n      };\n    }\n  }\n  transition(transition) {\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\":\n        case \"QueryFailed\": {\n          this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n          const journal = modification.journal;\n          if (journal !== void 0) {\n            const queryToken = this.queryIdToToken.get(modification.queryId);\n            if (queryToken !== void 0) {\n              this.querySet.get(queryToken).journal = journal;\n            }\n          }\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n          break;\n        }\n        default: {\n          const _ = modification;\n          throw new Error(`Invalid modification ${modification.type}`);\n        }\n      }\n    }\n  }\n  queryId(udfPath, args) {\n    const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== void 0) {\n      return existingEntry.id;\n    }\n    return null;\n  }\n  isCurrentOrNewerAuthVersion(version) {\n    return version >= this.identityVersion;\n  }\n  setAuth(value) {\n    this.auth = {\n      tokenType: \"User\",\n      value\n    };\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      baseVersion,\n      ...this.auth\n    };\n  }\n  setAdminAuth(value, actingAs) {\n    const auth = {\n      tokenType: \"Admin\",\n      value,\n      impersonating: actingAs\n    };\n    this.auth = auth;\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      baseVersion,\n      ...auth\n    };\n  }\n  clearAuth() {\n    this.auth = void 0;\n    this.markAuthCompletion();\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      tokenType: \"None\",\n      baseVersion\n    };\n  }\n  hasAuth() {\n    return !!this.auth;\n  }\n  isNewAuth(value) {\n    return this.auth?.value !== value;\n  }\n  queryPath(queryId) {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs).canonicalizedUdfPath;\n    }\n    return null;\n  }\n  queryArgs(queryId) {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs).args;\n    }\n    return null;\n  }\n  queryToken(queryId) {\n    return this.queryIdToToken.get(queryId) ?? null;\n  }\n  queryJournal(queryToken) {\n    return this.querySet.get(queryToken)?.journal;\n  }\n  restart(oldRemoteQueryResults) {\n    this.unpause();\n    this.outstandingQueriesOlderThanRestart.clear();\n    const modifications = [];\n    for (const localQuery of this.querySet.values()) {\n      const add = {\n        type: \"Add\",\n        queryId: localQuery.id,\n        udfPath: localQuery.canonicalizedUdfPath,\n        args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(localQuery.args)],\n        journal: localQuery.journal,\n        componentPath: localQuery.componentPath\n      };\n      modifications.push(add);\n      if (!oldRemoteQueryResults.has(localQuery.id)) {\n        this.outstandingQueriesOlderThanRestart.add(localQuery.id);\n      }\n    }\n    this.querySetVersion = 1;\n    const querySet = {\n      type: \"ModifyQuerySet\",\n      baseVersion: 0,\n      newVersion: 1,\n      modifications\n    };\n    if (!this.auth) {\n      this.identityVersion = 0;\n      return [querySet, void 0];\n    }\n    this.outstandingAuthOlderThanRestart = true;\n    const authenticate = {\n      type: \"Authenticate\",\n      baseVersion: 0,\n      ...this.auth\n    };\n    this.identityVersion = 1;\n    return [querySet, authenticate];\n  }\n  pause() {\n    this.paused = true;\n  }\n  resume() {\n    const querySet = this.pendingQuerySetModifications.size > 0 ? {\n      type: \"ModifyQuerySet\",\n      baseVersion: this.querySetVersion,\n      newVersion: ++this.querySetVersion,\n      modifications: Array.from(\n        this.pendingQuerySetModifications.values()\n      )\n    } : void 0;\n    const authenticate = this.auth !== void 0 ? {\n      type: \"Authenticate\",\n      baseVersion: this.identityVersion++,\n      ...this.auth\n    } : void 0;\n    this.unpause();\n    return [querySet, authenticate];\n  }\n  unpause() {\n    this.paused = false;\n    this.pendingQuerySetModifications.clear();\n  }\n  removeSubscriber(queryToken) {\n    const localQuery = this.querySet.get(queryToken);\n    if (localQuery.numSubscribers > 1) {\n      localQuery.numSubscribers -= 1;\n      return null;\n    } else {\n      this.querySet.delete(queryToken);\n      this.queryIdToToken.delete(localQuery.id);\n      this.outstandingQueriesOlderThanRestart.delete(localQuery.id);\n      const baseVersion = this.querySetVersion;\n      const newVersion = this.querySetVersion + 1;\n      const remove = {\n        type: \"Remove\",\n        queryId: localQuery.id\n      };\n      if (this.paused) {\n        if (this.pendingQuerySetModifications.has(localQuery.id)) {\n          this.pendingQuerySetModifications.delete(localQuery.id);\n        } else {\n          this.pendingQuerySetModifications.set(localQuery.id, remove);\n        }\n      } else {\n        this.querySetVersion = newVersion;\n      }\n      return {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [remove]\n      };\n    }\n  }\n}\n//# sourceMappingURL=local_state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/metrics.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMarksReport: () => (/* binding */ getMarksReport),\n/* harmony export */   mark: () => (/* binding */ mark)\n/* harmony export */ });\n\nconst markNames = [\n  \"convexClientConstructed\",\n  \"convexWebSocketOpen\",\n  \"convexFirstMessageReceived\"\n];\nfunction mark(name, sessionId) {\n  const detail = { sessionId };\n  if (typeof performance === \"undefined\" || !performance.mark) return;\n  performance.mark(name, { detail });\n}\nfunction performanceMarkToJson(mark2) {\n  let name = mark2.name.slice(\"convex\".length);\n  name = name.charAt(0).toLowerCase() + name.slice(1);\n  return {\n    name,\n    startTime: mark2.startTime\n  };\n}\nfunction getMarksReport(sessionId) {\n  if (typeof performance === \"undefined\" || !performance.getEntriesByName) {\n    return [];\n  }\n  const allMarks = [];\n  for (const name of markNames) {\n    const marks = performance.getEntriesByName(name).filter((entry) => entry.entryType === \"mark\").filter((mark2) => mark2.detail.sessionId === sessionId);\n    allMarks.push(...marks);\n  }\n  return allMarks.map(performanceMarkToJson);\n}\n//# sourceMappingURL=metrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxtQkFBbUI7QUFDbkI7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL21ldHJpY3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBtYXJrTmFtZXMgPSBbXG4gIFwiY29udmV4Q2xpZW50Q29uc3RydWN0ZWRcIixcbiAgXCJjb252ZXhXZWJTb2NrZXRPcGVuXCIsXG4gIFwiY29udmV4Rmlyc3RNZXNzYWdlUmVjZWl2ZWRcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBtYXJrKG5hbWUsIHNlc3Npb25JZCkge1xuICBjb25zdCBkZXRhaWwgPSB7IHNlc3Npb25JZCB9O1xuICBpZiAodHlwZW9mIHBlcmZvcm1hbmNlID09PSBcInVuZGVmaW5lZFwiIHx8ICFwZXJmb3JtYW5jZS5tYXJrKSByZXR1cm47XG4gIHBlcmZvcm1hbmNlLm1hcmsobmFtZSwgeyBkZXRhaWwgfSk7XG59XG5mdW5jdGlvbiBwZXJmb3JtYW5jZU1hcmtUb0pzb24obWFyazIpIHtcbiAgbGV0IG5hbWUgPSBtYXJrMi5uYW1lLnNsaWNlKFwiY29udmV4XCIubGVuZ3RoKTtcbiAgbmFtZSA9IG5hbWUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBuYW1lLnNsaWNlKDEpO1xuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgc3RhcnRUaW1lOiBtYXJrMi5zdGFydFRpbWVcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXJrc1JlcG9ydChzZXNzaW9uSWQpIHtcbiAgaWYgKHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBjb25zdCBhbGxNYXJrcyA9IFtdO1xuICBmb3IgKGNvbnN0IG5hbWUgb2YgbWFya05hbWVzKSB7XG4gICAgY29uc3QgbWFya3MgPSBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKG5hbWUpLmZpbHRlcigoZW50cnkpID0+IGVudHJ5LmVudHJ5VHlwZSA9PT0gXCJtYXJrXCIpLmZpbHRlcigobWFyazIpID0+IG1hcmsyLmRldGFpbC5zZXNzaW9uSWQgPT09IHNlc3Npb25JZCk7XG4gICAgYWxsTWFya3MucHVzaCguLi5tYXJrcyk7XG4gIH1cbiAgcmV0dXJuIGFsbE1hcmtzLm1hcChwZXJmb3JtYW5jZU1hcmtUb0pzb24pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0cmljcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OptimisticQueryResults: () => (/* binding */ OptimisticQueryResults)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nclass OptimisticLocalStoreImpl {\n  constructor(queryResults) {\n    // A references of the query results in OptimisticQueryResults\n    __publicField(this, \"queryResults\");\n    // All of the queries modified by this class\n    __publicField(this, \"modifiedQueries\");\n    this.queryResults = queryResults;\n    this.modifiedQueries = [];\n  }\n  getQuery(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    const queryResult = this.queryResults.get(\n      (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs)\n    );\n    if (queryResult === void 0) {\n      return void 0;\n    }\n    return OptimisticLocalStoreImpl.queryValue(queryResult.result);\n  }\n  getAllQueries(query) {\n    const queriesWithName = [];\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    for (const queryResult of this.queryResults.values()) {\n      if (queryResult.udfPath === (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.canonicalizeUdfPath)(name)) {\n        queriesWithName.push({\n          args: queryResult.args,\n          value: OptimisticLocalStoreImpl.queryValue(queryResult.result)\n        });\n      }\n    }\n    return queriesWithName;\n  }\n  setQuery(queryReference, args, value) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(queryReference);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs);\n    let result;\n    if (value === void 0) {\n      result = void 0;\n    } else {\n      result = {\n        success: true,\n        value,\n        // It's an optimistic update, so there are no function logs to show.\n        logLines: []\n      };\n    }\n    const query = {\n      udfPath: name,\n      args: queryArgs,\n      result\n    };\n    this.queryResults.set(queryToken, query);\n    this.modifiedQueries.push(queryToken);\n  }\n  static queryValue(result) {\n    if (result === void 0) {\n      return void 0;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      return void 0;\n    }\n  }\n}\nclass OptimisticQueryResults {\n  constructor() {\n    __publicField(this, \"queryResults\");\n    __publicField(this, \"optimisticUpdates\");\n    this.queryResults = /* @__PURE__ */ new Map();\n    this.optimisticUpdates = [];\n  }\n  ingestQueryResultsFromServer(serverQueryResults, optimisticUpdatesToDrop) {\n    this.optimisticUpdates = this.optimisticUpdates.filter((updateAndId) => {\n      return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n    });\n    const oldQueryResults = this.queryResults;\n    this.queryResults = new Map(serverQueryResults);\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    for (const updateAndId of this.optimisticUpdates) {\n      updateAndId.update(localStore);\n    }\n    const changedQueries = [];\n    for (const [queryToken, query] of this.queryResults) {\n      const oldQuery = oldQueryResults.get(queryToken);\n      if (oldQuery === void 0 || oldQuery.result !== query.result) {\n        changedQueries.push(queryToken);\n      }\n    }\n    return changedQueries;\n  }\n  applyOptimisticUpdate(update, mutationId) {\n    this.optimisticUpdates.push({\n      update,\n      mutationId\n    });\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    update(localStore);\n    return localStore.modifiedQueries;\n  }\n  queryResult(queryToken) {\n    const query = this.queryResults.get(queryToken);\n    if (query === void 0) {\n      return void 0;\n    }\n    const result = query.result;\n    if (result === void 0) {\n      return void 0;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_4__.ConvexError(\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)\n          )\n        );\n      }\n      throw new Error(\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)\n      );\n    }\n  }\n  hasQueryResult(queryToken) {\n    return this.queryResults.get(queryToken) !== void 0;\n  }\n  /**\n   * @internal\n   */\n  queryLogs(queryToken) {\n    const query = this.queryResults.get(queryToken);\n    return query?.result?.logLines;\n  }\n}\n//# sourceMappingURL=optimistic_updates_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/protocol.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeClientMessage: () => (/* binding */ encodeClientMessage),\n/* harmony export */   longToU64: () => (/* binding */ longToU64),\n/* harmony export */   parseServerMessage: () => (/* binding */ parseServerMessage),\n/* harmony export */   u64ToLong: () => (/* binding */ u64ToLong)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n\n\n\nfunction u64ToLong(encoded) {\n  const integerBytes = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.toByteArray(encoded);\n  return _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromBytesLE(Array.from(integerBytes));\n}\nfunction longToU64(raw) {\n  const integerBytes = new Uint8Array(raw.toBytesLE());\n  return _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.fromByteArray(integerBytes);\n}\nfunction parseServerMessage(encoded) {\n  switch (encoded.type) {\n    case \"FatalError\":\n    case \"AuthError\":\n    case \"ActionResponse\":\n    case \"Ping\": {\n      return { ...encoded };\n    }\n    case \"MutationResponse\": {\n      if (encoded.success) {\n        return { ...encoded, ts: u64ToLong(encoded.ts) };\n      } else {\n        return { ...encoded };\n      }\n    }\n    case \"Transition\": {\n      return {\n        ...encoded,\n        startVersion: {\n          ...encoded.startVersion,\n          ts: u64ToLong(encoded.startVersion.ts)\n        },\n        endVersion: {\n          ...encoded.endVersion,\n          ts: u64ToLong(encoded.endVersion.ts)\n        }\n      };\n    }\n    default: {\n      const _exhaustivenessCheck = encoded;\n    }\n  }\n  return void 0;\n}\nfunction encodeClientMessage(message) {\n  switch (message.type) {\n    case \"Authenticate\":\n    case \"ModifyQuerySet\":\n    case \"Mutation\":\n    case \"Action\":\n    case \"Event\": {\n      return { ...message };\n    }\n    case \"Connect\": {\n      if (message.maxObservedTimestamp !== void 0) {\n        return {\n          ...message,\n          maxObservedTimestamp: longToU64(message.maxObservedTimestamp)\n        };\n      } else {\n        return { ...message, maxObservedTimestamp: void 0 };\n      }\n    }\n    default: {\n      const _exhaustivenessCheck = message;\n    }\n  }\n  return void 0;\n}\n//# sourceMappingURL=protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNrQztBQUNiO0FBQzNCO0FBQ1AsdUJBQXVCLGdFQUFrQjtBQUN6QyxTQUFTLDBDQUFJO0FBQ2I7QUFDTztBQUNQO0FBQ0EsU0FBUyxrRUFBb0I7QUFDN0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLFFBQVE7QUFDUixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IEJhc2U2NCB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IExvbmcgfSBmcm9tIFwiLi4vbG9uZy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHU2NFRvTG9uZyhlbmNvZGVkKSB7XG4gIGNvbnN0IGludGVnZXJCeXRlcyA9IEJhc2U2NC50b0J5dGVBcnJheShlbmNvZGVkKTtcbiAgcmV0dXJuIExvbmcuZnJvbUJ5dGVzTEUoQXJyYXkuZnJvbShpbnRlZ2VyQnl0ZXMpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb25nVG9VNjQocmF3KSB7XG4gIGNvbnN0IGludGVnZXJCeXRlcyA9IG5ldyBVaW50OEFycmF5KHJhdy50b0J5dGVzTEUoKSk7XG4gIHJldHVybiBCYXNlNjQuZnJvbUJ5dGVBcnJheShpbnRlZ2VyQnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU2VydmVyTWVzc2FnZShlbmNvZGVkKSB7XG4gIHN3aXRjaCAoZW5jb2RlZC50eXBlKSB7XG4gICAgY2FzZSBcIkZhdGFsRXJyb3JcIjpcbiAgICBjYXNlIFwiQXV0aEVycm9yXCI6XG4gICAgY2FzZSBcIkFjdGlvblJlc3BvbnNlXCI6XG4gICAgY2FzZSBcIlBpbmdcIjoge1xuICAgICAgcmV0dXJuIHsgLi4uZW5jb2RlZCB9O1xuICAgIH1cbiAgICBjYXNlIFwiTXV0YXRpb25SZXNwb25zZVwiOiB7XG4gICAgICBpZiAoZW5jb2RlZC5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiB7IC4uLmVuY29kZWQsIHRzOiB1NjRUb0xvbmcoZW5jb2RlZC50cykgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IC4uLmVuY29kZWQgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSBcIlRyYW5zaXRpb25cIjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uZW5jb2RlZCxcbiAgICAgICAgc3RhcnRWZXJzaW9uOiB7XG4gICAgICAgICAgLi4uZW5jb2RlZC5zdGFydFZlcnNpb24sXG4gICAgICAgICAgdHM6IHU2NFRvTG9uZyhlbmNvZGVkLnN0YXJ0VmVyc2lvbi50cylcbiAgICAgICAgfSxcbiAgICAgICAgZW5kVmVyc2lvbjoge1xuICAgICAgICAgIC4uLmVuY29kZWQuZW5kVmVyc2lvbixcbiAgICAgICAgICB0czogdTY0VG9Mb25nKGVuY29kZWQuZW5kVmVyc2lvbi50cylcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgY29uc3QgX2V4aGF1c3RpdmVuZXNzQ2hlY2sgPSBlbmNvZGVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUNsaWVudE1lc3NhZ2UobWVzc2FnZSkge1xuICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgIGNhc2UgXCJBdXRoZW50aWNhdGVcIjpcbiAgICBjYXNlIFwiTW9kaWZ5UXVlcnlTZXRcIjpcbiAgICBjYXNlIFwiTXV0YXRpb25cIjpcbiAgICBjYXNlIFwiQWN0aW9uXCI6XG4gICAgY2FzZSBcIkV2ZW50XCI6IHtcbiAgICAgIHJldHVybiB7IC4uLm1lc3NhZ2UgfTtcbiAgICB9XG4gICAgY2FzZSBcIkNvbm5lY3RcIjoge1xuICAgICAgaWYgKG1lc3NhZ2UubWF4T2JzZXJ2ZWRUaW1lc3RhbXAgIT09IHZvaWQgMCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLm1lc3NhZ2UsXG4gICAgICAgICAgbWF4T2JzZXJ2ZWRUaW1lc3RhbXA6IGxvbmdUb1U2NChtZXNzYWdlLm1heE9ic2VydmVkVGltZXN0YW1wKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ubWVzc2FnZSwgbWF4T2JzZXJ2ZWRUaW1lc3RhbXA6IHZvaWQgMCB9O1xuICAgICAgfVxuICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICBjb25zdCBfZXhoYXVzdGl2ZW5lc3NDaGVjayA9IG1lc3NhZ2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB2b2lkIDA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm90b2NvbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/remote_query_set.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoteQuerySet: () => (/* binding */ RemoteQuerySet)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass RemoteQuerySet {\n  constructor(queryPath, logger) {\n    __publicField(this, \"version\");\n    __publicField(this, \"remoteQuerySet\");\n    __publicField(this, \"queryPath\");\n    __publicField(this, \"logger\");\n    this.version = { querySet: 0, ts: _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromNumber(0), identity: 0 };\n    this.remoteQuerySet = /* @__PURE__ */ new Map();\n    this.queryPath = queryPath;\n    this.logger = logger;\n  }\n  transition(transition) {\n    const start = transition.startVersion;\n    if (this.version.querySet !== start.querySet || this.version.ts.notEquals(start.ts) || this.version.identity !== start.identity) {\n      throw new Error(\n        `Invalid start version: ${start.ts.toString()}:${start.querySet}`\n      );\n    }\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logForFunction)(this.logger, \"info\", \"query\", queryPath, line);\n            }\n          }\n          const value = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(modification.value ?? null);\n          this.remoteQuerySet.set(modification.queryId, {\n            success: true,\n            value,\n            logLines: modification.logLines\n          });\n          break;\n        }\n        case \"QueryFailed\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logForFunction)(this.logger, \"info\", \"query\", queryPath, line);\n            }\n          }\n          const { errorData } = modification;\n          this.remoteQuerySet.set(modification.queryId, {\n            success: false,\n            errorMessage: modification.errorMessage,\n            errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n            logLines: modification.logLines\n          });\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.remoteQuerySet.delete(modification.queryId);\n          break;\n        }\n        default: {\n          const _ = modification;\n          throw new Error(`Invalid modification ${modification.type}`);\n        }\n      }\n    }\n    this.version = transition.endVersion;\n  }\n  remoteQueryResults() {\n    return this.remoteQuerySet;\n  }\n  timestamp() {\n    return this.version.ts;\n  }\n}\n//# sourceMappingURL=remote_query_set.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNxRDtBQUNuQjtBQUNhO0FBQ3hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUIsMENBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQkFBb0IsR0FBRyxlQUFlO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFjO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0IsOERBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBYztBQUM1QjtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDhEQUFZO0FBQzFEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Qsa0JBQWtCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IGpzb25Ub0NvbnZleCB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IExvbmcgfSBmcm9tIFwiLi4vbG9uZy5qc1wiO1xuaW1wb3J0IHsgbG9nRm9yRnVuY3Rpb24gfSBmcm9tIFwiLi4vbG9nZ2luZy5qc1wiO1xuZXhwb3J0IGNsYXNzIFJlbW90ZVF1ZXJ5U2V0IHtcbiAgY29uc3RydWN0b3IocXVlcnlQYXRoLCBsb2dnZXIpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidmVyc2lvblwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVtb3RlUXVlcnlTZXRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInF1ZXJ5UGF0aFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG9nZ2VyXCIpO1xuICAgIHRoaXMudmVyc2lvbiA9IHsgcXVlcnlTZXQ6IDAsIHRzOiBMb25nLmZyb21OdW1iZXIoMCksIGlkZW50aXR5OiAwIH07XG4gICAgdGhpcy5yZW1vdGVRdWVyeVNldCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgdGhpcy5xdWVyeVBhdGggPSBxdWVyeVBhdGg7XG4gICAgdGhpcy5sb2dnZXIgPSBsb2dnZXI7XG4gIH1cbiAgdHJhbnNpdGlvbih0cmFuc2l0aW9uKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0cmFuc2l0aW9uLnN0YXJ0VmVyc2lvbjtcbiAgICBpZiAodGhpcy52ZXJzaW9uLnF1ZXJ5U2V0ICE9PSBzdGFydC5xdWVyeVNldCB8fCB0aGlzLnZlcnNpb24udHMubm90RXF1YWxzKHN0YXJ0LnRzKSB8fCB0aGlzLnZlcnNpb24uaWRlbnRpdHkgIT09IHN0YXJ0LmlkZW50aXR5KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBJbnZhbGlkIHN0YXJ0IHZlcnNpb246ICR7c3RhcnQudHMudG9TdHJpbmcoKX06JHtzdGFydC5xdWVyeVNldH1gXG4gICAgICApO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IG1vZGlmaWNhdGlvbiBvZiB0cmFuc2l0aW9uLm1vZGlmaWNhdGlvbnMpIHtcbiAgICAgIHN3aXRjaCAobW9kaWZpY2F0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIlF1ZXJ5VXBkYXRlZFwiOiB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXRoID0gdGhpcy5xdWVyeVBhdGgobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGlmIChxdWVyeVBhdGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBtb2RpZmljYXRpb24ubG9nTGluZXMpIHtcbiAgICAgICAgICAgICAgbG9nRm9yRnVuY3Rpb24odGhpcy5sb2dnZXIsIFwiaW5mb1wiLCBcInF1ZXJ5XCIsIHF1ZXJ5UGF0aCwgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHZhbHVlID0ganNvblRvQ29udmV4KG1vZGlmaWNhdGlvbi52YWx1ZSA/PyBudWxsKTtcbiAgICAgICAgICB0aGlzLnJlbW90ZVF1ZXJ5U2V0LnNldChtb2RpZmljYXRpb24ucXVlcnlJZCwge1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgbG9nTGluZXM6IG1vZGlmaWNhdGlvbi5sb2dMaW5lc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJRdWVyeUZhaWxlZFwiOiB7XG4gICAgICAgICAgY29uc3QgcXVlcnlQYXRoID0gdGhpcy5xdWVyeVBhdGgobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGlmIChxdWVyeVBhdGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBtb2RpZmljYXRpb24ubG9nTGluZXMpIHtcbiAgICAgICAgICAgICAgbG9nRm9yRnVuY3Rpb24odGhpcy5sb2dnZXIsIFwiaW5mb1wiLCBcInF1ZXJ5XCIsIHF1ZXJ5UGF0aCwgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHsgZXJyb3JEYXRhIH0gPSBtb2RpZmljYXRpb247XG4gICAgICAgICAgdGhpcy5yZW1vdGVRdWVyeVNldC5zZXQobW9kaWZpY2F0aW9uLnF1ZXJ5SWQsIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiBtb2RpZmljYXRpb24uZXJyb3JNZXNzYWdlLFxuICAgICAgICAgICAgZXJyb3JEYXRhOiBlcnJvckRhdGEgIT09IHZvaWQgMCA/IGpzb25Ub0NvbnZleChlcnJvckRhdGEpIDogdm9pZCAwLFxuICAgICAgICAgICAgbG9nTGluZXM6IG1vZGlmaWNhdGlvbi5sb2dMaW5lc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJRdWVyeVJlbW92ZWRcIjoge1xuICAgICAgICAgIHRoaXMucmVtb3RlUXVlcnlTZXQuZGVsZXRlKG1vZGlmaWNhdGlvbi5xdWVyeUlkKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgY29uc3QgXyA9IG1vZGlmaWNhdGlvbjtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbW9kaWZpY2F0aW9uICR7bW9kaWZpY2F0aW9uLnR5cGV9YCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy52ZXJzaW9uID0gdHJhbnNpdGlvbi5lbmRWZXJzaW9uO1xuICB9XG4gIHJlbW90ZVF1ZXJ5UmVzdWx0cygpIHtcbiAgICByZXR1cm4gdGhpcy5yZW1vdGVRdWVyeVNldDtcbiAgfVxuICB0aW1lc3RhbXAoKSB7XG4gICAgcmV0dXJuIHRoaXMudmVyc2lvbi50cztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3RlX3F1ZXJ5X3NldC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/request_manager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestManager: () => (/* binding */ RequestManager)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass RequestManager {\n  constructor(logger) {\n    this.logger = logger;\n    __publicField(this, \"inflightRequests\");\n    __publicField(this, \"requestsOlderThanRestart\");\n    __publicField(this, \"inflightMutationsCount\", 0);\n    __publicField(this, \"inflightActionsCount\", 0);\n    this.inflightRequests = /* @__PURE__ */ new Map();\n    this.requestsOlderThanRestart = /* @__PURE__ */ new Set();\n  }\n  request(message, sent) {\n    const result = new Promise((resolve) => {\n      const status = sent ? \"Requested\" : \"NotSent\";\n      this.inflightRequests.set(message.requestId, {\n        message,\n        status: { status, requestedAt: /* @__PURE__ */ new Date(), onResult: resolve }\n      });\n      if (message.type === \"Mutation\") {\n        this.inflightMutationsCount++;\n      } else if (message.type === \"Action\") {\n        this.inflightActionsCount++;\n      }\n    });\n    return result;\n  }\n  /**\n   * Update the state after receiving a response.\n   *\n   * @returns A RequestId if the request is complete and its optimistic update\n   * can be dropped, null otherwise.\n   */\n  onResponse(response) {\n    const requestInfo = this.inflightRequests.get(response.requestId);\n    if (requestInfo === void 0) {\n      return null;\n    }\n    if (requestInfo.status.status === \"Completed\") {\n      return null;\n    }\n    const udfType = requestInfo.message.type === \"Mutation\" ? \"mutation\" : \"action\";\n    const udfPath = requestInfo.message.udfPath;\n    for (const line of response.logLines) {\n      (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logForFunction)(this.logger, \"info\", udfType, udfPath, line);\n    }\n    const status = requestInfo.status;\n    let result;\n    let onResolve;\n    if (response.success) {\n      result = {\n        success: true,\n        logLines: response.logLines,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(response.result)\n      };\n      onResolve = () => status.onResult(result);\n    } else {\n      const errorMessage = response.result;\n      const { errorData } = response;\n      (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logForFunction)(this.logger, \"error\", udfType, udfPath, errorMessage);\n      result = {\n        success: false,\n        errorMessage,\n        errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n        logLines: response.logLines\n      };\n      onResolve = () => status.onResult(result);\n    }\n    if (response.type === \"ActionResponse\" || !response.success) {\n      onResolve();\n      this.inflightRequests.delete(response.requestId);\n      this.requestsOlderThanRestart.delete(response.requestId);\n      if (requestInfo.message.type === \"Action\") {\n        this.inflightActionsCount--;\n      } else if (requestInfo.message.type === \"Mutation\") {\n        this.inflightMutationsCount--;\n      }\n      return { requestId: response.requestId, result };\n    }\n    requestInfo.status = {\n      status: \"Completed\",\n      result,\n      ts: response.ts,\n      onResolve\n    };\n    return null;\n  }\n  // Remove and returns completed requests.\n  removeCompleted(ts) {\n    const completeRequests = /* @__PURE__ */ new Map();\n    for (const [requestId, requestInfo] of this.inflightRequests.entries()) {\n      const status = requestInfo.status;\n      if (status.status === \"Completed\" && status.ts.lessThanOrEqual(ts)) {\n        status.onResolve();\n        completeRequests.set(requestId, status.result);\n        if (requestInfo.message.type === \"Mutation\") {\n          this.inflightMutationsCount--;\n        } else if (requestInfo.message.type === \"Action\") {\n          this.inflightActionsCount--;\n        }\n        this.inflightRequests.delete(requestId);\n        this.requestsOlderThanRestart.delete(requestId);\n      }\n    }\n    return completeRequests;\n  }\n  restart() {\n    this.requestsOlderThanRestart = new Set(this.inflightRequests.keys());\n    const allMessages = [];\n    for (const [requestId, value] of this.inflightRequests) {\n      if (value.status.status === \"NotSent\") {\n        value.status.status = \"Requested\";\n        allMessages.push(value.message);\n        continue;\n      }\n      if (value.message.type === \"Mutation\") {\n        allMessages.push(value.message);\n      } else if (value.message.type === \"Action\") {\n        this.inflightRequests.delete(requestId);\n        this.requestsOlderThanRestart.delete(requestId);\n        this.inflightActionsCount--;\n        if (value.status.status === \"Completed\") {\n          throw new Error(\"Action should never be in 'Completed' state\");\n        }\n        value.status.onResult({\n          success: false,\n          errorMessage: \"Connection lost while action was in flight\",\n          logLines: []\n        });\n      }\n    }\n    return allMessages;\n  }\n  resume() {\n    const allMessages = [];\n    for (const [, value] of this.inflightRequests) {\n      if (value.status.status === \"NotSent\") {\n        value.status.status = \"Requested\";\n        allMessages.push(value.message);\n        continue;\n      }\n    }\n    return allMessages;\n  }\n  /**\n   * @returns true if there are any requests that have been requested but have\n   * not be completed yet.\n   */\n  hasIncompleteRequests() {\n    for (const requestInfo of this.inflightRequests.values()) {\n      if (requestInfo.status.status === \"Requested\") {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * @returns true if there are any inflight requests, including ones that have\n   * completed on the server, but have not been applied.\n   */\n  hasInflightRequests() {\n    return this.inflightRequests.size > 0;\n  }\n  /**\n   * @returns true if there are any inflight requests, that have been hanging around\n   * since prior to the most recent restart.\n   */\n  hasSyncedPastLastReconnect() {\n    return this.requestsOlderThanRestart.size === 0;\n  }\n  timeOfOldestInflightRequest() {\n    if (this.inflightRequests.size === 0) {\n      return null;\n    }\n    let oldestInflightRequest = Date.now();\n    for (const request of this.inflightRequests.values()) {\n      if (request.status.status !== \"Completed\") {\n        if (request.status.requestedAt.getTime() < oldestInflightRequest) {\n          oldestInflightRequest = request.status.requestedAt.getTime();\n        }\n      }\n    }\n    return new Date(oldestInflightRequest);\n  }\n  /**\n   * @returns The number of mutations currently in flight.\n   */\n  inflightMutations() {\n    return this.inflightMutationsCount;\n  }\n  /**\n   * @returns The number of actions currently in flight.\n   */\n  inflightActions() {\n    return this.inflightActionsCount;\n  }\n}\n//# sourceMappingURL=request_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/session.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newSessionId: () => (/* binding */ newSessionId)\n/* harmony export */ });\n\nfunction newSessionId() {\n  return uuidv4();\n}\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n}\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3Nlc3Npb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gbmV3U2Vzc2lvbklkKCkge1xuICByZXR1cm4gdXVpZHY0KCk7XG59XG5mdW5jdGlvbiB1dWlkdjQoKSB7XG4gIHJldHVybiBcInh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiLnJlcGxhY2UoL1t4eV0vZywgKGMpID0+IHtcbiAgICBjb25zdCByID0gTWF0aC5yYW5kb20oKSAqIDE2IHwgMCwgdiA9IGMgPT09IFwieFwiID8gciA6IHIgJiAzIHwgODtcbiAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vzc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canonicalizeUdfPath: () => (/* binding */ canonicalizeUdfPath),\n/* harmony export */   serializePathAndArgs: () => (/* binding */ serializePathAndArgs)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\nfunction canonicalizeUdfPath(udfPath) {\n  const pieces = udfPath.split(\":\");\n  let moduleName;\n  let functionName;\n  if (pieces.length === 1) {\n    moduleName = pieces[0];\n    functionName = \"default\";\n  } else {\n    moduleName = pieces.slice(0, pieces.length - 1).join(\":\");\n    functionName = pieces[pieces.length - 1];\n  }\n  if (moduleName.endsWith(\".js\")) {\n    moduleName = moduleName.slice(0, -3);\n  }\n  return `${moduleName}:${functionName}`;\n}\nfunction serializePathAndArgs(udfPath, args) {\n  return JSON.stringify({\n    udfPath: canonicalizeUdfPath(udfPath),\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n  });\n}\n//# sourceMappingURL=udf_path_utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy91ZGZfcGF0aF91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUN3QztBQUM5QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVcsR0FBRyxhQUFhO0FBQ3ZDO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFBVSw4REFBWTtBQUN0QixHQUFHO0FBQ0g7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvdWRmX3BhdGhfdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY2Fub25pY2FsaXplVWRmUGF0aCh1ZGZQYXRoKSB7XG4gIGNvbnN0IHBpZWNlcyA9IHVkZlBhdGguc3BsaXQoXCI6XCIpO1xuICBsZXQgbW9kdWxlTmFtZTtcbiAgbGV0IGZ1bmN0aW9uTmFtZTtcbiAgaWYgKHBpZWNlcy5sZW5ndGggPT09IDEpIHtcbiAgICBtb2R1bGVOYW1lID0gcGllY2VzWzBdO1xuICAgIGZ1bmN0aW9uTmFtZSA9IFwiZGVmYXVsdFwiO1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZU5hbWUgPSBwaWVjZXMuc2xpY2UoMCwgcGllY2VzLmxlbmd0aCAtIDEpLmpvaW4oXCI6XCIpO1xuICAgIGZ1bmN0aW9uTmFtZSA9IHBpZWNlc1twaWVjZXMubGVuZ3RoIC0gMV07XG4gIH1cbiAgaWYgKG1vZHVsZU5hbWUuZW5kc1dpdGgoXCIuanNcIikpIHtcbiAgICBtb2R1bGVOYW1lID0gbW9kdWxlTmFtZS5zbGljZSgwLCAtMyk7XG4gIH1cbiAgcmV0dXJuIGAke21vZHVsZU5hbWV9OiR7ZnVuY3Rpb25OYW1lfWA7XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplUGF0aEFuZEFyZ3ModWRmUGF0aCwgYXJncykge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgIHVkZlBhdGg6IGNhbm9uaWNhbGl6ZVVkZlBhdGgodWRmUGF0aCksXG4gICAgYXJnczogY29udmV4VG9Kc29uKGFyZ3MpXG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWRmX3BhdGhfdXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketManager: () => (/* binding */ WebSocketManager)\n/* harmony export */ });\n/* harmony import */ var _protocol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst CLOSE_NORMAL = 1e3;\nconst CLOSE_GOING_AWAY = 1001;\nconst CLOSE_NO_STATUS = 1005;\nconst CLOSE_NOT_FOUND = 4040;\nclass WebSocketManager {\n  constructor(uri, callbacks, webSocketConstructor, logger) {\n    __publicField(this, \"socket\");\n    __publicField(this, \"connectionCount\");\n    __publicField(this, \"_hasEverConnected\", false);\n    __publicField(this, \"lastCloseReason\");\n    /** Upon HTTPS/WSS failure, the first jittered backoff duration, in ms. */\n    __publicField(this, \"initialBackoff\");\n    /** We backoff exponentially, but we need to cap that--this is the jittered max. */\n    __publicField(this, \"maxBackoff\");\n    /** How many times have we failed consecutively? */\n    __publicField(this, \"retries\");\n    /** How long before lack of server response causes us to initiate a reconnect,\n     * in ms */\n    __publicField(this, \"serverInactivityThreshold\");\n    __publicField(this, \"reconnectDueToServerInactivityTimeout\");\n    __publicField(this, \"uri\");\n    __publicField(this, \"onOpen\");\n    __publicField(this, \"onResume\");\n    __publicField(this, \"onMessage\");\n    __publicField(this, \"webSocketConstructor\");\n    __publicField(this, \"logger\");\n    this.webSocketConstructor = webSocketConstructor;\n    this.socket = { state: \"disconnected\" };\n    this.connectionCount = 0;\n    this.lastCloseReason = \"InitialConnect\";\n    this.initialBackoff = 100;\n    this.maxBackoff = 16e3;\n    this.retries = 0;\n    this.serverInactivityThreshold = 3e4;\n    this.reconnectDueToServerInactivityTimeout = null;\n    this.uri = uri;\n    this.onOpen = callbacks.onOpen;\n    this.onResume = callbacks.onResume;\n    this.onMessage = callbacks.onMessage;\n    this.logger = logger;\n    this.connect();\n  }\n  setSocketState(state) {\n    this.socket = state;\n    this._logVerbose(\n      `socket state changed: ${this.socket.state}, paused: ${\"paused\" in this.socket ? this.socket.paused : void 0}`\n    );\n  }\n  connect() {\n    if (this.socket.state === \"terminated\") {\n      return;\n    }\n    if (this.socket.state !== \"disconnected\" && this.socket.state !== \"stopped\") {\n      throw new Error(\n        \"Didn't start connection from disconnected state: \" + this.socket.state\n      );\n    }\n    const ws = new this.webSocketConstructor(this.uri);\n    this._logVerbose(\"constructed WebSocket\");\n    this.setSocketState({\n      state: \"connecting\",\n      ws,\n      paused: \"no\"\n    });\n    this.resetServerInactivityTimeout();\n    ws.onopen = () => {\n      this.logger.logVerbose(\"begin ws.onopen\");\n      if (this.socket.state !== \"connecting\") {\n        throw new Error(\"onopen called with socket not in connecting state\");\n      }\n      this.setSocketState({\n        state: \"ready\",\n        ws,\n        paused: this.socket.paused === \"yes\" ? \"uninitialized\" : \"no\"\n      });\n      this.resetServerInactivityTimeout();\n      if (this.socket.paused === \"no\") {\n        this._hasEverConnected = true;\n        this.onOpen({\n          connectionCount: this.connectionCount,\n          lastCloseReason: this.lastCloseReason\n        });\n      }\n      if (this.lastCloseReason !== \"InitialConnect\") {\n        this.logger.log(\"WebSocket reconnected\");\n      }\n      this.connectionCount += 1;\n      this.lastCloseReason = null;\n    };\n    ws.onerror = (error) => {\n      const message = error.message;\n      this.logger.log(`WebSocket error: ${message}`);\n    };\n    ws.onmessage = (message) => {\n      this.resetServerInactivityTimeout();\n      const serverMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.parseServerMessage)(JSON.parse(message.data));\n      this._logVerbose(`received ws message with type ${serverMessage.type}`);\n      const response = this.onMessage(serverMessage);\n      if (response.hasSyncedPastLastReconnect) {\n        this.retries = 0;\n      }\n    };\n    ws.onclose = (event) => {\n      this._logVerbose(\"begin ws.onclose\");\n      if (this.lastCloseReason === null) {\n        this.lastCloseReason = event.reason ?? \"OnCloseInvoked\";\n      }\n      if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_GOING_AWAY && // This commonly gets fired on mobile apps when the app is backgrounded\n      event.code !== CLOSE_NO_STATUS && event.code !== CLOSE_NOT_FOUND) {\n        let msg = `WebSocket closed with code ${event.code}`;\n        if (event.reason) {\n          msg += `: ${event.reason}`;\n        }\n        this.logger.log(msg);\n      }\n      this.scheduleReconnect();\n      return;\n    };\n  }\n  /**\n   * @returns The state of the {@link Socket}.\n   */\n  socketState() {\n    return this.socket.state;\n  }\n  /**\n   * @param message - A ClientMessage to send.\n   * @returns Whether the message (might have been) sent.\n   */\n  sendMessage(message) {\n    const messageForLog = {\n      type: message.type,\n      ...message.type === \"Authenticate\" && message.tokenType === \"User\" ? {\n        value: `...${message.value.slice(-7)}`\n      } : {}\n    };\n    if (this.socket.state === \"ready\" && this.socket.paused === \"no\") {\n      const encodedMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.encodeClientMessage)(message);\n      const request = JSON.stringify(encodedMessage);\n      try {\n        this.socket.ws.send(request);\n      } catch (error) {\n        this.logger.log(\n          `Failed to send message on WebSocket, reconnecting: ${error}`\n        );\n        this.closeAndReconnect(\"FailedToSendMessage\");\n      }\n      this._logVerbose(\n        `sent message with type ${message.type}: ${JSON.stringify(\n          messageForLog\n        )}`\n      );\n      return true;\n    }\n    this._logVerbose(\n      `message not sent (socket state: ${this.socket.state}, paused: ${\"paused\" in this.socket ? this.socket.paused : void 0}): ${JSON.stringify(\n        messageForLog\n      )}`\n    );\n    return false;\n  }\n  resetServerInactivityTimeout() {\n    if (this.socket.state === \"terminated\") {\n      return;\n    }\n    if (this.reconnectDueToServerInactivityTimeout !== null) {\n      clearTimeout(this.reconnectDueToServerInactivityTimeout);\n      this.reconnectDueToServerInactivityTimeout = null;\n    }\n    this.reconnectDueToServerInactivityTimeout = setTimeout(() => {\n      this.closeAndReconnect(\"InactiveServer\");\n    }, this.serverInactivityThreshold);\n  }\n  scheduleReconnect() {\n    this.socket = { state: \"disconnected\" };\n    const backoff = this.nextBackoff();\n    this.logger.log(`Attempting reconnect in ${backoff}ms`);\n    setTimeout(() => this.connect(), backoff);\n  }\n  /**\n   * Close the WebSocket and schedule a reconnect.\n   *\n   * This should be used when we hit an error and would like to restart the session.\n   */\n  closeAndReconnect(closeReason) {\n    this._logVerbose(`begin closeAndReconnect with reason ${closeReason}`);\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"terminated\":\n      case \"stopped\":\n        return;\n      case \"connecting\":\n      case \"ready\": {\n        this.lastCloseReason = closeReason;\n        void this.close();\n        this.scheduleReconnect();\n        return;\n      }\n      default: {\n        const _ = this.socket;\n      }\n    }\n  }\n  /**\n   * Close the WebSocket, being careful to clear the onclose handler to avoid re-entrant\n   * calls. Use this instead of directly calling `ws.close()`\n   *\n   * It is the callers responsibility to update the state after this method is called so that the\n   * closed socket is not accessible or used again after this method is called\n   */\n  close() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"terminated\":\n      case \"stopped\":\n        return Promise.resolve();\n      case \"connecting\": {\n        const ws = this.socket.ws;\n        return new Promise((r) => {\n          ws.onclose = () => {\n            this._logVerbose(\"Closed after connecting\");\n            r();\n          };\n          ws.onopen = () => {\n            this._logVerbose(\"Opened after connecting\");\n            ws.close();\n          };\n        });\n      }\n      case \"ready\": {\n        this._logVerbose(\"ws.close called\");\n        const ws = this.socket.ws;\n        const result = new Promise((r) => {\n          ws.onclose = () => {\n            r();\n          };\n        });\n        ws.close();\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        return Promise.resolve();\n      }\n    }\n  }\n  /**\n   * Close the WebSocket and do not reconnect.\n   * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n   */\n  terminate() {\n    if (this.reconnectDueToServerInactivityTimeout) {\n      clearTimeout(this.reconnectDueToServerInactivityTimeout);\n    }\n    switch (this.socket.state) {\n      case \"terminated\":\n      case \"stopped\":\n      case \"disconnected\":\n      case \"connecting\":\n      case \"ready\": {\n        const result = this.close();\n        this.setSocketState({ state: \"terminated\" });\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        throw new Error(\n          `Invalid websocket state: ${this.socket.state}`\n        );\n      }\n    }\n  }\n  stop() {\n    switch (this.socket.state) {\n      case \"terminated\":\n        return Promise.resolve();\n      case \"connecting\":\n      case \"stopped\":\n      case \"disconnected\":\n      case \"ready\": {\n        const result = this.close();\n        this.socket = { state: \"stopped\" };\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        return Promise.resolve();\n      }\n    }\n  }\n  /**\n   * Create a new WebSocket after a previous `stop()`, unless `terminate()` was\n   * called before.\n   */\n  tryRestart() {\n    switch (this.socket.state) {\n      case \"stopped\":\n        break;\n      case \"terminated\":\n      case \"connecting\":\n      case \"ready\":\n      case \"disconnected\":\n        this.logger.logVerbose(\"Restart called without stopping first\");\n        return;\n      default: {\n        const _ = this.socket;\n      }\n    }\n    this.connect();\n  }\n  pause() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"stopped\":\n      case \"terminated\":\n        return;\n      case \"connecting\":\n      case \"ready\": {\n        this.socket = { ...this.socket, paused: \"yes\" };\n        return;\n      }\n      default: {\n        const _ = this.socket;\n        return;\n      }\n    }\n  }\n  /**\n   * Resume the state machine if previously paused.\n   */\n  resume() {\n    switch (this.socket.state) {\n      case \"connecting\":\n        this.socket = { ...this.socket, paused: \"no\" };\n        return;\n      case \"ready\":\n        if (this.socket.paused === \"uninitialized\") {\n          this.socket = { ...this.socket, paused: \"no\" };\n          this.onOpen({\n            connectionCount: this.connectionCount,\n            lastCloseReason: this.lastCloseReason\n          });\n        } else if (this.socket.paused === \"yes\") {\n          this.socket = { ...this.socket, paused: \"no\" };\n          this.onResume();\n        }\n        return;\n      case \"terminated\":\n      case \"stopped\":\n      case \"disconnected\":\n        return;\n      default: {\n        const _ = this.socket;\n      }\n    }\n    this.connect();\n  }\n  connectionState() {\n    return {\n      isConnected: this.socket.state === \"ready\",\n      hasEverConnected: this._hasEverConnected,\n      connectionCount: this.connectionCount,\n      connectionRetries: this.retries\n    };\n  }\n  _logVerbose(message) {\n    this.logger.logVerbose(message);\n  }\n  nextBackoff() {\n    const baseBackoff = this.initialBackoff * Math.pow(2, this.retries);\n    this.retries += 1;\n    const actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n    const jitter = actualBackoff * (Math.random() - 0.5);\n    return actualBackoff + jitter;\n  }\n}\n//# sourceMappingURL=web_socket_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/common/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/common/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSimpleObject: () => (/* binding */ isSimpleObject),\n/* harmony export */   parseArgs: () => (/* binding */ parseArgs),\n/* harmony export */   validateDeploymentUrl: () => (/* binding */ validateDeploymentUrl)\n/* harmony export */ });\n\nfunction parseArgs(args) {\n  if (args === void 0) {\n    return {};\n  }\n  if (!isSimpleObject(args)) {\n    throw new Error(\n      `The arguments to a Convex function must be an object. Received: ${args}`\n    );\n  }\n  return args;\n}\nfunction validateDeploymentUrl(deploymentUrl) {\n  if (typeof deploymentUrl === \"undefined\") {\n    throw new Error(\n      `Client created with undefined deployment address. If you used an environment variable, check that it's set.`\n    );\n  }\n  if (typeof deploymentUrl !== \"string\") {\n    throw new Error(\n      `Invalid deployment address: found ${deploymentUrl}\".`\n    );\n  }\n  if (!(deploymentUrl.startsWith(\"http:\") || deploymentUrl.startsWith(\"https:\"))) {\n    throw new Error(\n      `Invalid deployment address: Must start with \"https://\" or \"http://\". Found \"${deploymentUrl}\".`\n    );\n  }\n  try {\n    new URL(deploymentUrl);\n  } catch {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" is not a valid URL. If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`\n    );\n  }\n  if (deploymentUrl.endsWith(\".convex.site\")) {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" ends with .convex.site, which is used for HTTP Actions. Convex deployment URLs typically end with .convex.cloud? If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`\n    );\n  }\n}\nfunction isSimpleObject(value) {\n  const isObject = typeof value === \"object\";\n  const prototype = Object.getPrototypeOf(value);\n  const isSimple = prototype === null || prototype === Object.prototype || // Objects generated from other contexts (e.g. across Node.js `vm` modules) will not satisfy the previous\n  // conditions but are still simple objects.\n  prototype?.constructor?.name === \"Object\";\n  return isObject && isSimple;\n}\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2NvbW1vbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUNOO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxLQUFLO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxjQUFjO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLGNBQWM7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxzQ0FBc0MsY0FBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxjQUFjO0FBQ3BEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9jb21tb24vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBcmdzKGFyZ3MpIHtcbiAgaWYgKGFyZ3MgPT09IHZvaWQgMCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICBpZiAoIWlzU2ltcGxlT2JqZWN0KGFyZ3MpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYFRoZSBhcmd1bWVudHMgdG8gYSBDb252ZXggZnVuY3Rpb24gbXVzdCBiZSBhbiBvYmplY3QuIFJlY2VpdmVkOiAke2FyZ3N9YFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGFyZ3M7XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVEZXBsb3ltZW50VXJsKGRlcGxveW1lbnRVcmwpIHtcbiAgaWYgKHR5cGVvZiBkZXBsb3ltZW50VXJsID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYENsaWVudCBjcmVhdGVkIHdpdGggdW5kZWZpbmVkIGRlcGxveW1lbnQgYWRkcmVzcy4gSWYgeW91IHVzZWQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUsIGNoZWNrIHRoYXQgaXQncyBzZXQuYFxuICAgICk7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXBsb3ltZW50VXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEludmFsaWQgZGVwbG95bWVudCBhZGRyZXNzOiBmb3VuZCAke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbiAgaWYgKCEoZGVwbG95bWVudFVybC5zdGFydHNXaXRoKFwiaHR0cDpcIikgfHwgZGVwbG95bWVudFVybC5zdGFydHNXaXRoKFwiaHR0cHM6XCIpKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogTXVzdCBzdGFydCB3aXRoIFwiaHR0cHM6Ly9cIiBvciBcImh0dHA6Ly9cIi4gRm91bmQgXCIke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbiAgdHJ5IHtcbiAgICBuZXcgVVJMKGRlcGxveW1lbnRVcmwpO1xuICB9IGNhdGNoIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW52YWxpZCBkZXBsb3ltZW50IGFkZHJlc3M6IFwiJHtkZXBsb3ltZW50VXJsfVwiIGlzIG5vdCBhIHZhbGlkIFVSTC4gSWYgeW91IGJlbGlldmUgdGhpcyBVUkwgaXMgY29ycmVjdCwgdXNlIHRoZSBcXGBza2lwQ29udmV4RGVwbG95bWVudFVybENoZWNrXFxgIG9wdGlvbiB0byBieXBhc3MgdGhpcy5gXG4gICAgKTtcbiAgfVxuICBpZiAoZGVwbG95bWVudFVybC5lbmRzV2l0aChcIi5jb252ZXguc2l0ZVwiKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogXCIke2RlcGxveW1lbnRVcmx9XCIgZW5kcyB3aXRoIC5jb252ZXguc2l0ZSwgd2hpY2ggaXMgdXNlZCBmb3IgSFRUUCBBY3Rpb25zLiBDb252ZXggZGVwbG95bWVudCBVUkxzIHR5cGljYWxseSBlbmQgd2l0aCAuY29udmV4LmNsb3VkPyBJZiB5b3UgYmVsaWV2ZSB0aGlzIFVSTCBpcyBjb3JyZWN0LCB1c2UgdGhlIFxcYHNraXBDb252ZXhEZXBsb3ltZW50VXJsQ2hlY2tcXGAgb3B0aW9uIHRvIGJ5cGFzcyB0aGlzLmBcbiAgICApO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTaW1wbGVPYmplY3QodmFsdWUpIHtcbiAgY29uc3QgaXNPYmplY3QgPSB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCI7XG4gIGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XG4gIGNvbnN0IGlzU2ltcGxlID0gcHJvdG90eXBlID09PSBudWxsIHx8IHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZSB8fCAvLyBPYmplY3RzIGdlbmVyYXRlZCBmcm9tIG90aGVyIGNvbnRleHRzIChlLmcuIGFjcm9zcyBOb2RlLmpzIGB2bWAgbW9kdWxlcykgd2lsbCBub3Qgc2F0aXNmeSB0aGUgcHJldmlvdXNcbiAgLy8gY29uZGl0aW9ucyBidXQgYXJlIHN0aWxsIHNpbXBsZSBvYmplY3RzLlxuICBwcm90b3R5cGU/LmNvbnN0cnVjdG9yPy5uYW1lID09PSBcIk9iamVjdFwiO1xuICByZXR1cm4gaXNPYmplY3QgJiYgaXNTaW1wbGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/index.js":
/*!***********************************************!*\
  !*** ./node_modules/convex/dist/esm/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n\nconst version = \"1.24.2\";\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IFwiMS4yNC4yXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/ConvexAuthState.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProviderWithAuth: () => (/* binding */ ConvexProviderWithAuth),\n/* harmony export */   useConvexAuth: () => (/* binding */ useConvexAuth)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\nconst ConvexAuthContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nfunction useConvexAuth() {\n  const authContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConvexAuthContext);\n  if (authContext === void 0) {\n    throw new Error(\n      \"Could not find `ConvexProviderWithAuth` (or `ConvexProviderWithClerk` or `ConvexProviderWithAuth0`) as an ancestor component. This component may be missing, or you might have two instances of the `convex/react` module loaded in your project.\"\n    );\n  }\n  return authContext;\n}\nfunction ConvexProviderWithAuth({\n  children,\n  client,\n  useAuth\n}) {\n  const {\n    isLoading: authProviderLoading,\n    isAuthenticated: authProviderAuthenticated,\n    fetchAccessToken\n  } = useAuth();\n  const [isConvexAuthenticated, setIsConvexAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  if (authProviderLoading && isConvexAuthenticated !== null) {\n    setIsConvexAuthenticated(null);\n  }\n  if (!authProviderLoading && !authProviderAuthenticated && isConvexAuthenticated !== false) {\n    setIsConvexAuthenticated(false);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    ConvexAuthContext.Provider,\n    {\n      value: {\n        isLoading: isConvexAuthenticated === null,\n        isAuthenticated: authProviderAuthenticated && (isConvexAuthenticated ?? false)\n      }\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      ConvexAuthStateFirstEffect,\n      {\n        authProviderAuthenticated,\n        fetchAccessToken,\n        authProviderLoading,\n        client,\n        setIsConvexAuthenticated\n      }\n    ),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexProvider, { client }, children),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      ConvexAuthStateLastEffect,\n      {\n        authProviderAuthenticated,\n        fetchAccessToken,\n        authProviderLoading,\n        client,\n        setIsConvexAuthenticated\n      }\n    )\n  );\n}\nfunction ConvexAuthStateFirstEffect({\n  authProviderAuthenticated,\n  fetchAccessToken,\n  authProviderLoading,\n  client,\n  setIsConvexAuthenticated\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    let isThisEffectRelevant = true;\n    if (authProviderAuthenticated) {\n      client.setAuth(fetchAccessToken, (backendReportsIsAuthenticated) => {\n        if (isThisEffectRelevant) {\n          setIsConvexAuthenticated(() => backendReportsIsAuthenticated);\n        }\n      });\n      return () => {\n        isThisEffectRelevant = false;\n        setIsConvexAuthenticated(\n          (isConvexAuthenticated) => isConvexAuthenticated ? false : null\n        );\n      };\n    }\n  }, [\n    authProviderAuthenticated,\n    fetchAccessToken,\n    authProviderLoading,\n    client,\n    setIsConvexAuthenticated\n  ]);\n  return null;\n}\nfunction ConvexAuthStateLastEffect({\n  authProviderAuthenticated,\n  fetchAccessToken,\n  authProviderLoading,\n  client,\n  setIsConvexAuthenticated\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (authProviderAuthenticated) {\n      return () => {\n        client.clearAuth();\n        setIsConvexAuthenticated(() => null);\n      };\n    }\n  }, [\n    authProviderAuthenticated,\n    fetchAccessToken,\n    authProviderLoading,\n    client,\n    setIsConvexAuthenticated\n  ]);\n  return null;\n}\n//# sourceMappingURL=ConvexAuthState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L0NvbnZleEF1dGhTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFNRTtBQUM4QjtBQUM3QywwQkFBMEIsb0RBQWE7QUFDaEM7QUFDUCxzQkFBc0IsaURBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiw0REFBNEQsK0NBQVE7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdEQUFtQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsb0JBQW9CLGdEQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0RBQW1CLENBQUMsc0RBQWMsSUFBSSxRQUFRO0FBQ2xFLG9CQUFvQixnREFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsRUFBRSxnREFBUztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvQ29udmV4QXV0aFN0YXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IFJlYWN0LCB7XG4gIGNyZWF0ZUNvbnRleHQsXG4gIHVzZUNvbnRleHQsXG4gIHVzZUVmZmVjdCxcbiAgdXNlU3RhdGVcbn0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDb252ZXhQcm92aWRlciB9IGZyb20gXCIuL2NsaWVudC5qc1wiO1xuY29uc3QgQ29udmV4QXV0aENvbnRleHQgPSBjcmVhdGVDb250ZXh0KHZvaWQgMCk7XG5leHBvcnQgZnVuY3Rpb24gdXNlQ29udmV4QXV0aCgpIHtcbiAgY29uc3QgYXV0aENvbnRleHQgPSB1c2VDb250ZXh0KENvbnZleEF1dGhDb250ZXh0KTtcbiAgaWYgKGF1dGhDb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIkNvdWxkIG5vdCBmaW5kIGBDb252ZXhQcm92aWRlcldpdGhBdXRoYCAob3IgYENvbnZleFByb3ZpZGVyV2l0aENsZXJrYCBvciBgQ29udmV4UHJvdmlkZXJXaXRoQXV0aDBgKSBhcyBhbiBhbmNlc3RvciBjb21wb25lbnQuIFRoaXMgY29tcG9uZW50IG1heSBiZSBtaXNzaW5nLCBvciB5b3UgbWlnaHQgaGF2ZSB0d28gaW5zdGFuY2VzIG9mIHRoZSBgY29udmV4L3JlYWN0YCBtb2R1bGUgbG9hZGVkIGluIHlvdXIgcHJvamVjdC5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGF1dGhDb250ZXh0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIENvbnZleFByb3ZpZGVyV2l0aEF1dGgoe1xuICBjaGlsZHJlbixcbiAgY2xpZW50LFxuICB1c2VBdXRoXG59KSB7XG4gIGNvbnN0IHtcbiAgICBpc0xvYWRpbmc6IGF1dGhQcm92aWRlckxvYWRpbmcsXG4gICAgaXNBdXRoZW50aWNhdGVkOiBhdXRoUHJvdmlkZXJBdXRoZW50aWNhdGVkLFxuICAgIGZldGNoQWNjZXNzVG9rZW5cbiAgfSA9IHVzZUF1dGgoKTtcbiAgY29uc3QgW2lzQ29udmV4QXV0aGVudGljYXRlZCwgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXSA9IHVzZVN0YXRlKG51bGwpO1xuICBpZiAoYXV0aFByb3ZpZGVyTG9hZGluZyAmJiBpc0NvbnZleEF1dGhlbnRpY2F0ZWQgIT09IG51bGwpIHtcbiAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQobnVsbCk7XG4gIH1cbiAgaWYgKCFhdXRoUHJvdmlkZXJMb2FkaW5nICYmICFhdXRoUHJvdmlkZXJBdXRoZW50aWNhdGVkICYmIGlzQ29udmV4QXV0aGVudGljYXRlZCAhPT0gZmFsc2UpIHtcbiAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoZmFsc2UpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBDb252ZXhBdXRoQ29udGV4dC5Qcm92aWRlcixcbiAgICB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBpc0xvYWRpbmc6IGlzQ29udmV4QXV0aGVudGljYXRlZCA9PT0gbnVsbCxcbiAgICAgICAgaXNBdXRoZW50aWNhdGVkOiBhdXRoUHJvdmlkZXJBdXRoZW50aWNhdGVkICYmIChpc0NvbnZleEF1dGhlbnRpY2F0ZWQgPz8gZmFsc2UpXG4gICAgICB9XG4gICAgfSxcbiAgICAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIENvbnZleEF1dGhTdGF0ZUZpcnN0RWZmZWN0LFxuICAgICAge1xuICAgICAgICBhdXRoUHJvdmlkZXJBdXRoZW50aWNhdGVkLFxuICAgICAgICBmZXRjaEFjY2Vzc1Rva2VuLFxuICAgICAgICBhdXRoUHJvdmlkZXJMb2FkaW5nLFxuICAgICAgICBjbGllbnQsXG4gICAgICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZFxuICAgICAgfVxuICAgICksXG4gICAgLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udmV4UHJvdmlkZXIsIHsgY2xpZW50IH0sIGNoaWxkcmVuKSxcbiAgICAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIENvbnZleEF1dGhTdGF0ZUxhc3RFZmZlY3QsXG4gICAgICB7XG4gICAgICAgIGF1dGhQcm92aWRlckF1dGhlbnRpY2F0ZWQsXG4gICAgICAgIGZldGNoQWNjZXNzVG9rZW4sXG4gICAgICAgIGF1dGhQcm92aWRlckxvYWRpbmcsXG4gICAgICAgIGNsaWVudCxcbiAgICAgICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXG4gICAgICB9XG4gICAgKVxuICApO1xufVxuZnVuY3Rpb24gQ29udmV4QXV0aFN0YXRlRmlyc3RFZmZlY3Qoe1xuICBhdXRoUHJvdmlkZXJBdXRoZW50aWNhdGVkLFxuICBmZXRjaEFjY2Vzc1Rva2VuLFxuICBhdXRoUHJvdmlkZXJMb2FkaW5nLFxuICBjbGllbnQsXG4gIHNldElzQ29udmV4QXV0aGVudGljYXRlZFxufSkge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBpc1RoaXNFZmZlY3RSZWxldmFudCA9IHRydWU7XG4gICAgaWYgKGF1dGhQcm92aWRlckF1dGhlbnRpY2F0ZWQpIHtcbiAgICAgIGNsaWVudC5zZXRBdXRoKGZldGNoQWNjZXNzVG9rZW4sIChiYWNrZW5kUmVwb3J0c0lzQXV0aGVudGljYXRlZCkgPT4ge1xuICAgICAgICBpZiAoaXNUaGlzRWZmZWN0UmVsZXZhbnQpIHtcbiAgICAgICAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoKCkgPT4gYmFja2VuZFJlcG9ydHNJc0F1dGhlbnRpY2F0ZWQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGlzVGhpc0VmZmVjdFJlbGV2YW50ID0gZmFsc2U7XG4gICAgICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZChcbiAgICAgICAgICAoaXNDb252ZXhBdXRoZW50aWNhdGVkKSA9PiBpc0NvbnZleEF1dGhlbnRpY2F0ZWQgPyBmYWxzZSA6IG51bGxcbiAgICAgICAgKTtcbiAgICAgIH07XG4gICAgfVxuICB9LCBbXG4gICAgYXV0aFByb3ZpZGVyQXV0aGVudGljYXRlZCxcbiAgICBmZXRjaEFjY2Vzc1Rva2VuLFxuICAgIGF1dGhQcm92aWRlckxvYWRpbmcsXG4gICAgY2xpZW50LFxuICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZFxuICBdKTtcbiAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBDb252ZXhBdXRoU3RhdGVMYXN0RWZmZWN0KHtcbiAgYXV0aFByb3ZpZGVyQXV0aGVudGljYXRlZCxcbiAgZmV0Y2hBY2Nlc3NUb2tlbixcbiAgYXV0aFByb3ZpZGVyTG9hZGluZyxcbiAgY2xpZW50LFxuICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWRcbn0pIHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoYXV0aFByb3ZpZGVyQXV0aGVudGljYXRlZCkge1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgY2xpZW50LmNsZWFyQXV0aCgpO1xuICAgICAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoKCkgPT4gbnVsbCk7XG4gICAgICB9O1xuICAgIH1cbiAgfSwgW1xuICAgIGF1dGhQcm92aWRlckF1dGhlbnRpY2F0ZWQsXG4gICAgZmV0Y2hBY2Nlc3NUb2tlbixcbiAgICBhdXRoUHJvdmlkZXJMb2FkaW5nLFxuICAgIGNsaWVudCxcbiAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWRcbiAgXSk7XG4gIHJldHVybiBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmV4QXV0aFN0YXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/auth_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* binding */ AuthLoading),\n/* harmony export */   Authenticated: () => (/* binding */ Authenticated),\n/* harmony export */   Unauthenticated: () => (/* binding */ Unauthenticated)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n\n\n\nfunction Authenticated({ children }) {\n  const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n  if (isLoading || !isAuthenticated) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction Unauthenticated({ children }) {\n  const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n  if (isLoading || isAuthenticated) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction AuthLoading({ children }) {\n  const { isLoading } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n  if (!isLoading) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\n//# sourceMappingURL=auth_helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2F1dGhfaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ2E7QUFDMkI7QUFDOUMseUJBQXlCLFVBQVU7QUFDMUMsVUFBVSw2QkFBNkIsRUFBRSxrRUFBYTtBQUN0RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0RBQW1CLENBQUMsMkNBQWM7QUFDM0Q7QUFDTywyQkFBMkIsVUFBVTtBQUM1QyxVQUFVLDZCQUE2QixFQUFFLGtFQUFhO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnREFBbUIsQ0FBQywyQ0FBYztBQUMzRDtBQUNPLHVCQUF1QixVQUFVO0FBQ3hDLFVBQVUsWUFBWSxFQUFFLGtFQUFhO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnREFBbUIsQ0FBQywyQ0FBYztBQUMzRDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2F1dGhfaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUNvbnZleEF1dGggfSBmcm9tIFwiLi9Db252ZXhBdXRoU3RhdGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBBdXRoZW50aWNhdGVkKHsgY2hpbGRyZW4gfSkge1xuICBjb25zdCB7IGlzTG9hZGluZywgaXNBdXRoZW50aWNhdGVkIH0gPSB1c2VDb252ZXhBdXRoKCk7XG4gIGlmIChpc0xvYWRpbmcgfHwgIWlzQXV0aGVudGljYXRlZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgY2hpbGRyZW4pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIFVuYXV0aGVudGljYXRlZCh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgeyBpc0xvYWRpbmcsIGlzQXV0aGVudGljYXRlZCB9ID0gdXNlQ29udmV4QXV0aCgpO1xuICBpZiAoaXNMb2FkaW5nIHx8IGlzQXV0aGVudGljYXRlZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgY2hpbGRyZW4pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIEF1dGhMb2FkaW5nKHsgY2hpbGRyZW4gfSkge1xuICBjb25zdCB7IGlzTG9hZGluZyB9ID0gdXNlQ29udmV4QXV0aCgpO1xuICBpZiAoIWlzTG9hZGluZykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgY2hpbGRyZW4pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aF9oZWxwZXJzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/client.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/client.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProvider: () => (/* binding */ ConvexProvider),\n/* harmony export */   ConvexReactClient: () => (/* binding */ ConvexReactClient),\n/* harmony export */   createMutation: () => (/* binding */ createMutation),\n/* harmony export */   useAction: () => (/* binding */ useAction),\n/* harmony export */   useConvex: () => (/* binding */ useConvex),\n/* harmony export */   useMutation: () => (/* binding */ useMutation),\n/* harmony export */   useQuery: () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var _browser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../browser/index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _browser_logging_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../browser/logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\nif (typeof react__WEBPACK_IMPORTED_MODULE_1__ === \"undefined\") {\n  throw new Error(\"Required dependency 'react' not found\");\n}\nfunction createMutation(mutationReference, client, update) {\n  function mutation(args) {\n    assertNotAccidentalArgument(args);\n    return client.mutation(mutationReference, args, {\n      optimisticUpdate: update\n    });\n  }\n  mutation.withOptimisticUpdate = function withOptimisticUpdate(optimisticUpdate) {\n    if (update !== void 0) {\n      throw new Error(\n        `Already specified optimistic update for mutation ${(0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(\n          mutationReference\n        )}`\n      );\n    }\n    return createMutation(mutationReference, client, optimisticUpdate);\n  };\n  return mutation;\n}\nfunction createAction(actionReference, client) {\n  return function(args) {\n    return client.action(actionReference, args);\n  };\n}\nclass ConvexReactClient {\n  /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - See {@link ConvexReactClientOptions} for a full description.\n   */\n  constructor(address, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"cachedSync\");\n    __publicField(this, \"listeners\");\n    __publicField(this, \"options\");\n    __publicField(this, \"closed\", false);\n    __publicField(this, \"_logger\");\n    __publicField(this, \"adminAuth\");\n    __publicField(this, \"fakeUserIdentity\");\n    if (address === void 0) {\n      throw new Error(\n        \"No address provided to ConvexReactClient.\\nIf trying to deploy to production, make sure to follow all the instructions found at https://docs.convex.dev/production/hosting/\\nIf running locally, make sure to run `convex dev` and ensure the .env.local file is populated.\"\n      );\n    }\n    if (typeof address !== \"string\") {\n      throw new Error(\n        `ConvexReactClient requires a URL like 'https://happy-otter-123.convex.cloud', received something of type ${typeof address} instead.`\n      );\n    }\n    if (!address.includes(\"://\")) {\n      throw new Error(\"Provided address was not an absolute URL.\");\n    }\n    this.address = address;\n    this.listeners = /* @__PURE__ */ new Map();\n    this._logger = options?.logger === false ? (0,_browser_logging_js__WEBPACK_IMPORTED_MODULE_6__.instantiateNoopLogger)({ verbose: options?.verbose ?? false }) : options?.logger !== true && options?.logger ? options.logger : (0,_browser_logging_js__WEBPACK_IMPORTED_MODULE_6__.instantiateDefaultLogger)({ verbose: options?.verbose ?? false });\n    this.options = { ...options, logger: this._logger };\n  }\n  /**\n   * Lazily instantiate the `BaseConvexClient` so we don't create the WebSocket\n   * when server-side rendering.\n   *\n   * @internal\n   */\n  get sync() {\n    if (this.closed) {\n      throw new Error(\"ConvexReactClient has already been closed.\");\n    }\n    if (this.cachedSync) {\n      return this.cachedSync;\n    }\n    this.cachedSync = new _browser_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient(\n      this.address,\n      (updatedQueries) => this.transition(updatedQueries),\n      this.options\n    );\n    if (this.adminAuth) {\n      this.cachedSync.setAdminAuth(this.adminAuth, this.fakeUserIdentity);\n    }\n    return this.cachedSync;\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    if (typeof fetchToken === \"string\") {\n      throw new Error(\n        \"Passing a string to ConvexReactClient.setAuth is no longer supported, please upgrade to passing in an async function to handle reauthentication.\"\n      );\n    }\n    this.sync.setAuth(\n      fetchToken,\n      onChange ?? (() => {\n      })\n    );\n  }\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.sync.clearAuth();\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, identity) {\n    this.adminAuth = token;\n    this.fakeUserIdentity = identity;\n    if (this.closed) {\n      throw new Error(\"ConvexReactClient has already been closed.\");\n    }\n    if (this.cachedSync) {\n      this.sync.setAdminAuth(token, identity);\n    }\n  }\n  /**\n   * Construct a new {@link Watch} on a Convex query function.\n   *\n   * **Most application code should not call this method directly. Instead use\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link WatchQueryOptions} options object for this query.\n   *\n   * @returns The {@link Watch} object.\n   */\n  watchQuery(query, ...argsAndOptions) {\n    const [args, options] = argsAndOptions;\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(query);\n    return {\n      onUpdate: (callback) => {\n        const { queryToken, unsubscribe } = this.sync.subscribe(\n          name,\n          args,\n          options\n        );\n        const currentListeners = this.listeners.get(queryToken);\n        if (currentListeners !== void 0) {\n          currentListeners.add(callback);\n        } else {\n          this.listeners.set(queryToken, /* @__PURE__ */ new Set([callback]));\n        }\n        return () => {\n          if (this.closed) {\n            return;\n          }\n          const currentListeners2 = this.listeners.get(queryToken);\n          currentListeners2.delete(callback);\n          if (currentListeners2.size === 0) {\n            this.listeners.delete(queryToken);\n          }\n          unsubscribe();\n        };\n      },\n      localQueryResult: () => {\n        if (this.cachedSync) {\n          return this.cachedSync.localQueryResult(name, args);\n        }\n        return void 0;\n      },\n      localQueryLogs: () => {\n        if (this.cachedSync) {\n          return this.cachedSync.localQueryLogs(name, args);\n        }\n        return void 0;\n      },\n      journal: () => {\n        if (this.cachedSync) {\n          return this.cachedSync.queryJournal(name, args);\n        }\n        return void 0;\n      }\n    };\n  }\n  /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */\n  mutation(mutation, ...argsAndOptions) {\n    const [args, options] = argsAndOptions;\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(mutation);\n    return this.sync.mutation(name, args, options);\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  action(action, ...args) {\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(action);\n    return this.sync.action(name, ...args);\n  }\n  /**\n   * Fetch a query result once.\n   *\n   * **Most application code should subscribe to queries instead, using\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */\n  query(query, ...args) {\n    const watch = this.watchQuery(query, ...args);\n    const existingResult = watch.localQueryResult();\n    if (existingResult !== void 0) {\n      return Promise.resolve(existingResult);\n    }\n    return new Promise((resolve, reject) => {\n      const unsubscribe = watch.onUpdate(() => {\n        unsubscribe();\n        try {\n          resolve(watch.localQueryResult());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n  /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */\n  connectionState() {\n    return this.sync.connectionState();\n  }\n  /**\n   * Get the logger for this client.\n   *\n   * @returns The {@link Logger} for this client.\n   */\n  get logger() {\n    return this._logger;\n  }\n  /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with a {@link ConvexReactClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */\n  async close() {\n    this.closed = true;\n    this.listeners = /* @__PURE__ */ new Map();\n    if (this.cachedSync) {\n      const sync = this.cachedSync;\n      this.cachedSync = void 0;\n      await sync.close();\n    }\n  }\n  transition(updatedQueries) {\n    for (const queryToken of updatedQueries) {\n      const callbacks = this.listeners.get(queryToken);\n      if (callbacks) {\n        for (const callback of callbacks) {\n          callback();\n        }\n      }\n    }\n  }\n}\nconst ConvexContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(\n  void 0\n  // in the future this will be a mocked client for testing\n);\nfunction useConvex() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n}\nconst ConvexProvider = ({ client, children }) => {\n  return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n    ConvexContext.Provider,\n    { value: client },\n    children\n  );\n};\nfunction useQuery(query, ...args) {\n  const skip = args[0] === \"skip\";\n  const argsObject = args[0] === \"skip\" ? {} : (0,_common_index_js__WEBPACK_IMPORTED_MODULE_4__.parseArgs)(args[0]);\n  const queryReference = typeof query === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.makeFunctionReference)(query) : query;\n  const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(queryReference);\n  const queries = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => skip ? {} : { query: { query: queryReference, args: argsObject } },\n    // Stringify args so args that are semantically the same don't trigger a\n    // rerender. Saves developers from adding `useMemo` on every args usage.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(argsObject)), queryName, skip]\n  );\n  const results = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_3__.useQueries)(queries);\n  const result = results[\"query\"];\n  if (result instanceof Error) {\n    throw result;\n  }\n  return result;\n}\nfunction useMutation(mutation) {\n  const mutationReference = typeof mutation === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.makeFunctionReference)(mutation) : mutation;\n  const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n  if (convex === void 0) {\n    throw new Error(\n      \"Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\"\n    );\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => createMutation(mutationReference, convex),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convex, (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(mutationReference)]\n  );\n}\nfunction useAction(action) {\n  const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n  const actionReference = typeof action === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.makeFunctionReference)(action) : action;\n  if (convex === void 0) {\n    throw new Error(\n      \"Could not find Convex client! `useAction` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\"\n    );\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => createAction(actionReference, convex),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convex, (0,_server_api_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(actionReference)]\n  );\n}\nfunction assertNotAccidentalArgument(value) {\n  if (typeof value === \"object\" && value !== null && \"bubbles\" in value && \"persist\" in value && \"isDefaultPrevented\" in value) {\n    throw new Error(\n      `Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like \\`const handler = () => myMutation();\\` and using \\`handler\\` in the event handler.`\n    );\n  }\n}\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/hydration.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/hydration.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePreloadedQuery: () => (/* binding */ usePreloadedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../react/client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\n\nfunction usePreloadedQuery(preloadedQuery) {\n  const args = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._argsJSON),\n    [preloadedQuery._argsJSON]\n  );\n  const preloadedResult = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._valueJSON),\n    [preloadedQuery._valueJSON]\n  );\n  const result = (0,_react_client_js__WEBPACK_IMPORTED_MODULE_1__.useQuery)(\n    (0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.makeFunctionReference)(preloadedQuery._name),\n    args\n  );\n  return result === void 0 ? preloadedResult : result;\n}\n//# sourceMappingURL=hydration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2h5ZHJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ21CO0FBQ2M7QUFDVztBQUNQO0FBQzNDO0FBQ1AsZUFBZSw4Q0FBTztBQUN0QixVQUFVLDhEQUFZO0FBQ3RCO0FBQ0E7QUFDQSwwQkFBMEIsOENBQU87QUFDakMsVUFBVSw4REFBWTtBQUN0QjtBQUNBO0FBQ0EsaUJBQWlCLDBEQUFRO0FBQ3pCLElBQUkscUVBQXFCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvaHlkcmF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tIFwiLi4vcmVhY3QvY2xpZW50LmpzXCI7XG5pbXBvcnQgeyBtYWtlRnVuY3Rpb25SZWZlcmVuY2UgfSBmcm9tIFwiLi4vc2VydmVyL2FwaS5qc1wiO1xuaW1wb3J0IHsganNvblRvQ29udmV4IH0gZnJvbSBcIi4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVByZWxvYWRlZFF1ZXJ5KHByZWxvYWRlZFF1ZXJ5KSB7XG4gIGNvbnN0IGFyZ3MgPSB1c2VNZW1vKFxuICAgICgpID0+IGpzb25Ub0NvbnZleChwcmVsb2FkZWRRdWVyeS5fYXJnc0pTT04pLFxuICAgIFtwcmVsb2FkZWRRdWVyeS5fYXJnc0pTT05dXG4gICk7XG4gIGNvbnN0IHByZWxvYWRlZFJlc3VsdCA9IHVzZU1lbW8oXG4gICAgKCkgPT4ganNvblRvQ29udmV4KHByZWxvYWRlZFF1ZXJ5Ll92YWx1ZUpTT04pLFxuICAgIFtwcmVsb2FkZWRRdWVyeS5fdmFsdWVKU09OXVxuICApO1xuICBjb25zdCByZXN1bHQgPSB1c2VRdWVyeShcbiAgICBtYWtlRnVuY3Rpb25SZWZlcmVuY2UocHJlbG9hZGVkUXVlcnkuX25hbWUpLFxuICAgIGFyZ3NcbiAgKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gdm9pZCAwID8gcHJlbG9hZGVkUmVzdWx0IDogcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHlkcmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/hydration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.AuthLoading),\n/* harmony export */   Authenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Authenticated),\n/* harmony export */   ConvexProvider: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexProvider),\n/* harmony export */   ConvexProviderWithAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.ConvexProviderWithAuth),\n/* harmony export */   ConvexReactClient: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexReactClient),\n/* harmony export */   Unauthenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Unauthenticated),\n/* harmony export */   insertAtBottomIfLoaded: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.insertAtBottomIfLoaded),\n/* harmony export */   insertAtPosition: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.insertAtPosition),\n/* harmony export */   insertAtTop: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.insertAtTop),\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.resetPaginationId),\n/* harmony export */   useAction: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useAction),\n/* harmony export */   useConvex: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useConvex),\n/* harmony export */   useConvexAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.useConvexAuth),\n/* harmony export */   useMutation: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useMutation),\n/* harmony export */   usePaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.usePaginatedQuery),\n/* harmony export */   usePreloadedQuery: () => (/* reexport safe */ _hydration_js__WEBPACK_IMPORTED_MODULE_4__.usePreloadedQuery),\n/* harmony export */   useQueries: () => (/* reexport safe */ _use_queries_js__WEBPACK_IMPORTED_MODULE_1__.useQueries),\n/* harmony export */   useQuery: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useQuery),\n/* harmony export */   useSubscription: () => (/* reexport safe */ _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__.useSubscription)\n/* harmony export */ });\n/* harmony import */ var _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./use_paginated_query.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth_helpers.js */ \"(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n/* harmony import */ var _hydration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hydration.js */ \"(ssr)/./node_modules/convex/dist/esm/react/hydration.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQzRCO0FBQ0s7QUFDWjtBQUNHO0FBQ047QUFDeUI7QUFRbkM7QUFDckIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgKiBmcm9tIFwiLi91c2VfcGFnaW5hdGVkX3F1ZXJ5LmpzXCI7XG5leHBvcnQgeyB1c2VRdWVyaWVzIH0gZnJvbSBcIi4vdXNlX3F1ZXJpZXMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2F1dGhfaGVscGVycy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vQ29udmV4QXV0aFN0YXRlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9oeWRyYXRpb24uanNcIjtcbmV4cG9ydCB7IHVzZVN1YnNjcmlwdGlvbiB9IGZyb20gXCIuL3VzZV9zdWJzY3JpcHRpb24uanNcIjtcbmV4cG9ydCB7XG4gIENvbnZleFJlYWN0Q2xpZW50LFxuICB1c2VDb252ZXgsXG4gIENvbnZleFByb3ZpZGVyLFxuICB1c2VRdWVyeSxcbiAgdXNlTXV0YXRpb24sXG4gIHVzZUFjdGlvblxufSBmcm9tIFwiLi9jbGllbnQuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/queries_observer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueriesObserver: () => (/* binding */ QueriesObserver)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass QueriesObserver {\n  constructor(createWatch) {\n    __publicField(this, \"createWatch\");\n    __publicField(this, \"queries\");\n    __publicField(this, \"listeners\");\n    this.createWatch = createWatch;\n    this.queries = {};\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  setQueries(newQueries) {\n    for (const identifier of Object.keys(newQueries)) {\n      const { query, args } = newQueries[identifier];\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n      if (this.queries[identifier] === void 0) {\n        this.addQuery(identifier, query, args);\n      } else {\n        const existingInfo = this.queries[identifier];\n        if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(existingInfo.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(existingInfo.args))) {\n          this.removeQuery(identifier);\n          this.addQuery(identifier, query, args);\n        }\n      }\n    }\n    for (const identifier of Object.keys(this.queries)) {\n      if (newQueries[identifier] === void 0) {\n        this.removeQuery(identifier);\n      }\n    }\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => {\n      this.listeners.delete(listener);\n    };\n  }\n  getLocalResults(queries) {\n    const result = {};\n    for (const identifier of Object.keys(queries)) {\n      const { query, args } = queries[identifier];\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n      const watch = this.createWatch(query, args);\n      let value;\n      try {\n        value = watch.localQueryResult();\n      } catch (e) {\n        if (e instanceof Error) {\n          value = e;\n        } else {\n          throw e;\n        }\n      }\n      result[identifier] = value;\n    }\n    return result;\n  }\n  setCreateWatch(createWatch) {\n    this.createWatch = createWatch;\n    for (const identifier of Object.keys(this.queries)) {\n      const { query, args, watch } = this.queries[identifier];\n      const journal = watch.journal();\n      this.removeQuery(identifier);\n      this.addQuery(identifier, query, args, journal);\n    }\n  }\n  destroy() {\n    for (const identifier of Object.keys(this.queries)) {\n      this.removeQuery(identifier);\n    }\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  addQuery(identifier, query, args, journal) {\n    if (this.queries[identifier] !== void 0) {\n      throw new Error(\n        `Tried to add a new query with identifier ${identifier} when it already exists.`\n      );\n    }\n    const watch = this.createWatch(query, args, journal);\n    const unsubscribe = watch.onUpdate(() => this.notifyListeners());\n    this.queries[identifier] = {\n      query,\n      args,\n      watch,\n      unsubscribe\n    };\n  }\n  removeQuery(identifier) {\n    const info = this.queries[identifier];\n    if (info === void 0) {\n      throw new Error(`No query found with identifier ${identifier}.`);\n    }\n    info.unsubscribe();\n    delete this.queries[identifier];\n  }\n  notifyListeners() {\n    for (const listener of this.listeners) {\n      listener();\n    }\n  }\n}\n//# sourceMappingURL=queries_observer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3F1ZXJpZXNfb2JzZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDa0Q7QUFDQztBQUM1QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxjQUFjO0FBQzVCLE1BQU0sK0RBQWU7QUFDckI7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFlBQVksK0RBQWUsWUFBWSwrREFBZSx1Q0FBdUMsOERBQVksMkJBQTJCLDhEQUFZO0FBQ2hKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGNBQWM7QUFDNUIsTUFBTSwrREFBZTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxZQUFZO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsV0FBVztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3F1ZXJpZXNfb2JzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuaW1wb3J0IHsgY29udmV4VG9Kc29uIH0gZnJvbSBcIi4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25OYW1lIH0gZnJvbSBcIi4uL3NlcnZlci9hcGkuanNcIjtcbmV4cG9ydCBjbGFzcyBRdWVyaWVzT2JzZXJ2ZXIge1xuICBjb25zdHJ1Y3RvcihjcmVhdGVXYXRjaCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjcmVhdGVXYXRjaFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicXVlcmllc1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibGlzdGVuZXJzXCIpO1xuICAgIHRoaXMuY3JlYXRlV2F0Y2ggPSBjcmVhdGVXYXRjaDtcbiAgICB0aGlzLnF1ZXJpZXMgPSB7fTtcbiAgICB0aGlzLmxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gIH1cbiAgc2V0UXVlcmllcyhuZXdRdWVyaWVzKSB7XG4gICAgZm9yIChjb25zdCBpZGVudGlmaWVyIG9mIE9iamVjdC5rZXlzKG5ld1F1ZXJpZXMpKSB7XG4gICAgICBjb25zdCB7IHF1ZXJ5LCBhcmdzIH0gPSBuZXdRdWVyaWVzW2lkZW50aWZpZXJdO1xuICAgICAgZ2V0RnVuY3Rpb25OYW1lKHF1ZXJ5KTtcbiAgICAgIGlmICh0aGlzLnF1ZXJpZXNbaWRlbnRpZmllcl0gPT09IHZvaWQgMCkge1xuICAgICAgICB0aGlzLmFkZFF1ZXJ5KGlkZW50aWZpZXIsIHF1ZXJ5LCBhcmdzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nSW5mbyA9IHRoaXMucXVlcmllc1tpZGVudGlmaWVyXTtcbiAgICAgICAgaWYgKGdldEZ1bmN0aW9uTmFtZShxdWVyeSkgIT09IGdldEZ1bmN0aW9uTmFtZShleGlzdGluZ0luZm8ucXVlcnkpIHx8IEpTT04uc3RyaW5naWZ5KGNvbnZleFRvSnNvbihhcmdzKSkgIT09IEpTT04uc3RyaW5naWZ5KGNvbnZleFRvSnNvbihleGlzdGluZ0luZm8uYXJncykpKSB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVRdWVyeShpZGVudGlmaWVyKTtcbiAgICAgICAgICB0aGlzLmFkZFF1ZXJ5KGlkZW50aWZpZXIsIHF1ZXJ5LCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGNvbnN0IGlkZW50aWZpZXIgb2YgT2JqZWN0LmtleXModGhpcy5xdWVyaWVzKSkge1xuICAgICAgaWYgKG5ld1F1ZXJpZXNbaWRlbnRpZmllcl0gPT09IHZvaWQgMCkge1xuICAgICAgICB0aGlzLnJlbW92ZVF1ZXJ5KGlkZW50aWZpZXIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICB0aGlzLmxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgIH07XG4gIH1cbiAgZ2V0TG9jYWxSZXN1bHRzKHF1ZXJpZXMpIHtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGlkZW50aWZpZXIgb2YgT2JqZWN0LmtleXMocXVlcmllcykpIHtcbiAgICAgIGNvbnN0IHsgcXVlcnksIGFyZ3MgfSA9IHF1ZXJpZXNbaWRlbnRpZmllcl07XG4gICAgICBnZXRGdW5jdGlvbk5hbWUocXVlcnkpO1xuICAgICAgY29uc3Qgd2F0Y2ggPSB0aGlzLmNyZWF0ZVdhdGNoKHF1ZXJ5LCBhcmdzKTtcbiAgICAgIGxldCB2YWx1ZTtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhbHVlID0gd2F0Y2gubG9jYWxRdWVyeVJlc3VsdCgpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgdmFsdWUgPSBlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJlc3VsdFtpZGVudGlmaWVyXSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIHNldENyZWF0ZVdhdGNoKGNyZWF0ZVdhdGNoKSB7XG4gICAgdGhpcy5jcmVhdGVXYXRjaCA9IGNyZWF0ZVdhdGNoO1xuICAgIGZvciAoY29uc3QgaWRlbnRpZmllciBvZiBPYmplY3Qua2V5cyh0aGlzLnF1ZXJpZXMpKSB7XG4gICAgICBjb25zdCB7IHF1ZXJ5LCBhcmdzLCB3YXRjaCB9ID0gdGhpcy5xdWVyaWVzW2lkZW50aWZpZXJdO1xuICAgICAgY29uc3Qgam91cm5hbCA9IHdhdGNoLmpvdXJuYWwoKTtcbiAgICAgIHRoaXMucmVtb3ZlUXVlcnkoaWRlbnRpZmllcik7XG4gICAgICB0aGlzLmFkZFF1ZXJ5KGlkZW50aWZpZXIsIHF1ZXJ5LCBhcmdzLCBqb3VybmFsKTtcbiAgICB9XG4gIH1cbiAgZGVzdHJveSgpIHtcbiAgICBmb3IgKGNvbnN0IGlkZW50aWZpZXIgb2YgT2JqZWN0LmtleXModGhpcy5xdWVyaWVzKSkge1xuICAgICAgdGhpcy5yZW1vdmVRdWVyeShpZGVudGlmaWVyKTtcbiAgICB9XG4gICAgdGhpcy5saXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICB9XG4gIGFkZFF1ZXJ5KGlkZW50aWZpZXIsIHF1ZXJ5LCBhcmdzLCBqb3VybmFsKSB7XG4gICAgaWYgKHRoaXMucXVlcmllc1tpZGVudGlmaWVyXSAhPT0gdm9pZCAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBUcmllZCB0byBhZGQgYSBuZXcgcXVlcnkgd2l0aCBpZGVudGlmaWVyICR7aWRlbnRpZmllcn0gd2hlbiBpdCBhbHJlYWR5IGV4aXN0cy5gXG4gICAgICApO1xuICAgIH1cbiAgICBjb25zdCB3YXRjaCA9IHRoaXMuY3JlYXRlV2F0Y2gocXVlcnksIGFyZ3MsIGpvdXJuYWwpO1xuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gd2F0Y2gub25VcGRhdGUoKCkgPT4gdGhpcy5ub3RpZnlMaXN0ZW5lcnMoKSk7XG4gICAgdGhpcy5xdWVyaWVzW2lkZW50aWZpZXJdID0ge1xuICAgICAgcXVlcnksXG4gICAgICBhcmdzLFxuICAgICAgd2F0Y2gsXG4gICAgICB1bnN1YnNjcmliZVxuICAgIH07XG4gIH1cbiAgcmVtb3ZlUXVlcnkoaWRlbnRpZmllcikge1xuICAgIGNvbnN0IGluZm8gPSB0aGlzLnF1ZXJpZXNbaWRlbnRpZmllcl07XG4gICAgaWYgKGluZm8gPT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBxdWVyeSBmb3VuZCB3aXRoIGlkZW50aWZpZXIgJHtpZGVudGlmaWVyfS5gKTtcbiAgICB9XG4gICAgaW5mby51bnN1YnNjcmliZSgpO1xuICAgIGRlbGV0ZSB0aGlzLnF1ZXJpZXNbaWRlbnRpZmllcl07XG4gIH1cbiAgbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAoY29uc3QgbGlzdGVuZXIgb2YgdGhpcy5saXN0ZW5lcnMpIHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyaWVzX29ic2VydmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_paginated_query.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   insertAtBottomIfLoaded: () => (/* binding */ insertAtBottomIfLoaded),\n/* harmony export */   insertAtPosition: () => (/* binding */ insertAtPosition),\n/* harmony export */   insertAtTop: () => (/* binding */ insertAtTop),\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* binding */ optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* binding */ resetPaginationId),\n/* harmony export */   usePaginatedQuery: () => (/* binding */ usePaginatedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _values_compare_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../values/compare.js */ \"(ssr)/./node_modules/convex/dist/esm/values/compare.js\");\n\n\n\n\n\n\n\nconst splitQuery = (key, splitCursor, continueCursor) => (prevState) => {\n  const queries = { ...prevState.queries };\n  const splitKey1 = prevState.nextPageKey;\n  const splitKey2 = prevState.nextPageKey + 1;\n  const nextPageKey = prevState.nextPageKey + 2;\n  queries[splitKey1] = {\n    query: prevState.query,\n    args: {\n      ...prevState.args,\n      paginationOpts: {\n        ...prevState.queries[key].args.paginationOpts,\n        endCursor: splitCursor\n      }\n    }\n  };\n  queries[splitKey2] = {\n    query: prevState.query,\n    args: {\n      ...prevState.args,\n      paginationOpts: {\n        ...prevState.queries[key].args.paginationOpts,\n        cursor: splitCursor,\n        endCursor: continueCursor\n      }\n    }\n  };\n  const ongoingSplits = { ...prevState.ongoingSplits };\n  ongoingSplits[key] = [splitKey1, splitKey2];\n  return {\n    ...prevState,\n    nextPageKey,\n    queries,\n    ongoingSplits\n  };\n};\nconst completeSplitQuery = (key) => (prevState) => {\n  const completedSplit = prevState.ongoingSplits[key];\n  if (completedSplit === void 0) {\n    return prevState;\n  }\n  const queries = { ...prevState.queries };\n  delete queries[key];\n  const ongoingSplits = { ...prevState.ongoingSplits };\n  delete ongoingSplits[key];\n  let pageKeys = prevState.pageKeys.slice();\n  const pageIndex = prevState.pageKeys.findIndex((v) => v === key);\n  if (pageIndex >= 0) {\n    pageKeys = [\n      ...prevState.pageKeys.slice(0, pageIndex),\n      ...completedSplit,\n      ...prevState.pageKeys.slice(pageIndex + 1)\n    ];\n  }\n  return {\n    ...prevState,\n    queries,\n    pageKeys,\n    ongoingSplits\n  };\n};\nfunction usePaginatedQuery(query, args, options) {\n  if (typeof options?.initialNumItems !== \"number\" || options.initialNumItems < 0) {\n    throw new Error(\n      `\\`options.initialNumItems\\` must be a positive number. Received \\`${options?.initialNumItems}\\`.`\n    );\n  }\n  const skip = args === \"skip\";\n  const argsObject = skip ? {} : args;\n  const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query);\n  const createInitialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return () => {\n      const id = nextPaginationId();\n      return {\n        query,\n        args: argsObject,\n        id,\n        nextPageKey: 1,\n        pageKeys: skip ? [] : [0],\n        queries: skip ? {} : {\n          0: {\n            query,\n            args: {\n              ...argsObject,\n              paginationOpts: {\n                numItems: options.initialNumItems,\n                cursor: null,\n                id\n              }\n            }\n          }\n        },\n        ongoingSplits: {},\n        skip\n      };\n    };\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)),\n    queryName,\n    options.initialNumItems,\n    skip\n  ]);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(createInitialState);\n  let currState = state;\n  if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(state.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(state.args)) || skip !== state.skip) {\n    currState = createInitialState();\n    setState(currState);\n  }\n  const convexClient = (0,_client_js__WEBPACK_IMPORTED_MODULE_4__.useConvex)();\n  const logger = convexClient.logger;\n  const resultsObject = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_2__.useQueries)(currState.queries);\n  const [results, maybeLastResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    let currResult = void 0;\n    const allItems = [];\n    for (const pageKey of currState.pageKeys) {\n      currResult = resultsObject[pageKey];\n      if (currResult === void 0) {\n        break;\n      }\n      if (currResult instanceof Error) {\n        if (currResult.message.includes(\"InvalidCursor\") || currResult instanceof _values_index_js__WEBPACK_IMPORTED_MODULE_1__.ConvexError && typeof currResult.data === \"object\" && currResult.data?.isConvexSystemError === true && currResult.data?.paginationError === \"InvalidCursor\") {\n          logger.warn(\n            \"usePaginatedQuery hit error, resetting pagination state: \" + currResult.message\n          );\n          setState(createInitialState);\n          return [[], void 0];\n        } else {\n          throw currResult;\n        }\n      }\n      const ongoingSplit = currState.ongoingSplits[pageKey];\n      if (ongoingSplit !== void 0) {\n        if (resultsObject[ongoingSplit[0]] !== void 0 && resultsObject[ongoingSplit[1]] !== void 0) {\n          setState(completeSplitQuery(pageKey));\n        }\n      } else if (currResult.splitCursor && (currResult.pageStatus === \"SplitRecommended\" || currResult.pageStatus === \"SplitRequired\" || currResult.page.length > options.initialNumItems * 2)) {\n        setState(\n          splitQuery(\n            pageKey,\n            currResult.splitCursor,\n            currResult.continueCursor\n          )\n        );\n      }\n      if (currResult.pageStatus === \"SplitRequired\") {\n        return [allItems, void 0];\n      }\n      allItems.push(...currResult.page);\n    }\n    return [allItems, currResult];\n  }, [\n    resultsObject,\n    currState.pageKeys,\n    currState.ongoingSplits,\n    options.initialNumItems,\n    createInitialState,\n    logger\n  ]);\n  const statusObject = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (maybeLastResult === void 0) {\n      if (currState.nextPageKey === 1) {\n        return {\n          status: \"LoadingFirstPage\",\n          isLoading: true,\n          loadMore: (_numItems) => {\n          }\n        };\n      } else {\n        return {\n          status: \"LoadingMore\",\n          isLoading: true,\n          loadMore: (_numItems) => {\n          }\n        };\n      }\n    }\n    if (maybeLastResult.isDone) {\n      return {\n        status: \"Exhausted\",\n        isLoading: false,\n        loadMore: (_numItems) => {\n        }\n      };\n    }\n    const continueCursor = maybeLastResult.continueCursor;\n    let alreadyLoadingMore = false;\n    return {\n      status: \"CanLoadMore\",\n      isLoading: false,\n      loadMore: (numItems) => {\n        if (!alreadyLoadingMore) {\n          alreadyLoadingMore = true;\n          setState((prevState) => {\n            const pageKeys = [...prevState.pageKeys, prevState.nextPageKey];\n            const queries = { ...prevState.queries };\n            queries[prevState.nextPageKey] = {\n              query: prevState.query,\n              args: {\n                ...prevState.args,\n                paginationOpts: {\n                  numItems,\n                  cursor: continueCursor,\n                  id: prevState.id\n                }\n              }\n            };\n            return {\n              ...prevState,\n              nextPageKey: prevState.nextPageKey + 1,\n              pageKeys,\n              queries\n            };\n          });\n        }\n      }\n    };\n  }, [maybeLastResult, currState.nextPageKey]);\n  return {\n    results,\n    ...statusObject\n  };\n}\nlet paginationId = 0;\nfunction nextPaginationId() {\n  paginationId++;\n  return paginationId;\n}\nfunction resetPaginationId() {\n  paginationId = 0;\n}\nfunction optimisticallyUpdateValueInPaginatedQuery(localStore, query, args, updateValue) {\n  const expectedArgs = JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(args));\n  for (const queryResult of localStore.getAllQueries(query)) {\n    if (queryResult.value !== void 0) {\n      const { paginationOpts: _, ...innerArgs } = queryResult.args;\n      if (JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(innerArgs)) === expectedArgs) {\n        const value = queryResult.value;\n        if (typeof value === \"object\" && value !== null && Array.isArray(value.page)) {\n          localStore.setQuery(query, queryResult.args, {\n            ...value,\n            page: value.page.map(updateValue)\n          });\n        }\n      }\n    }\n  }\n}\nfunction insertAtTop(options) {\n  const { paginatedQuery, argsToMatch, localQueryStore, item } = options;\n  const queries = localQueryStore.getAllQueries(paginatedQuery);\n  const queriesThatMatch = queries.filter((q) => {\n    if (argsToMatch === void 0) {\n      return true;\n    }\n    return Object.keys(argsToMatch).every(\n      // @ts-expect-error -- This should be safe since both should be plain objects\n      (k) => (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(argsToMatch[k], q.args[k]) === 0\n    );\n  });\n  const firstPage = queriesThatMatch.find(\n    (q) => q.args.paginationOpts.cursor === null\n  );\n  if (firstPage === void 0 || firstPage.value === void 0) {\n    return;\n  }\n  localQueryStore.setQuery(paginatedQuery, firstPage.args, {\n    ...firstPage.value,\n    page: [item, ...firstPage.value.page]\n  });\n}\nfunction insertAtBottomIfLoaded(options) {\n  const { paginatedQuery, localQueryStore, item, argsToMatch } = options;\n  const queries = localQueryStore.getAllQueries(paginatedQuery);\n  const queriesThatMatch = queries.filter((q) => {\n    if (argsToMatch === void 0) {\n      return true;\n    }\n    return Object.keys(argsToMatch).every(\n      // @ts-expect-error -- This should be safe since both should be plain objects\n      (k) => (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(argsToMatch[k], q.args[k]) === 0\n    );\n  });\n  const lastPage = queriesThatMatch.find(\n    (q) => q.value !== void 0 && q.value.isDone\n  );\n  if (lastPage === void 0) {\n    return;\n  }\n  localQueryStore.setQuery(paginatedQuery, lastPage.args, {\n    ...lastPage.value,\n    page: [...lastPage.value.page, item]\n  });\n}\nfunction insertAtPosition(options) {\n  const {\n    paginatedQuery,\n    sortOrder,\n    sortKeyFromItem,\n    localQueryStore,\n    item,\n    argsToMatch\n  } = options;\n  const queries = localQueryStore.getAllQueries(paginatedQuery);\n  const queryGroups = {};\n  for (const query of queries) {\n    if (argsToMatch !== void 0 && !Object.keys(argsToMatch).every(\n      (k) => (\n        // @ts-ignore why is this not working?\n        argsToMatch[k] === query.args[k]\n      )\n    )) {\n      continue;\n    }\n    const key = JSON.stringify(\n      Object.fromEntries(\n        Object.entries(query.args).map(([k, v]) => [\n          k,\n          k === \"paginationOpts\" ? v.id : v\n        ])\n      )\n    );\n    queryGroups[key] ?? (queryGroups[key] = []);\n    queryGroups[key].push(query);\n  }\n  for (const pageQueries of Object.values(queryGroups)) {\n    insertAtPositionInPages({\n      pageQueries,\n      paginatedQuery,\n      sortOrder,\n      sortKeyFromItem,\n      localQueryStore,\n      item\n    });\n  }\n}\nfunction insertAtPositionInPages(options) {\n  const {\n    pageQueries,\n    sortOrder,\n    sortKeyFromItem,\n    localQueryStore,\n    item,\n    paginatedQuery\n  } = options;\n  const insertedKey = sortKeyFromItem(item);\n  const loadedPages = pageQueries.filter(\n    (q) => q.value !== void 0 && q.value.page.length > 0\n  );\n  const sortedPages = loadedPages.sort((a, b) => {\n    const aKey = sortKeyFromItem(a.value.page[0]);\n    const bKey = sortKeyFromItem(b.value.page[0]);\n    if (sortOrder === \"asc\") {\n      return (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(aKey, bKey);\n    } else {\n      return (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(bKey, aKey);\n    }\n  });\n  const firstLoadedPage = sortedPages[0];\n  if (firstLoadedPage === void 0) {\n    return;\n  }\n  const firstPageKey = sortKeyFromItem(firstLoadedPage.value.page[0]);\n  const isBeforeFirstPage = sortOrder === \"asc\" ? (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(insertedKey, firstPageKey) <= 0 : (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(insertedKey, firstPageKey) >= 0;\n  if (isBeforeFirstPage) {\n    if (firstLoadedPage.args.paginationOpts.cursor === null) {\n      localQueryStore.setQuery(paginatedQuery, firstLoadedPage.args, {\n        ...firstLoadedPage.value,\n        page: [item, ...firstLoadedPage.value.page]\n      });\n    } else {\n      return;\n    }\n    return;\n  }\n  const lastLoadedPage = sortedPages[sortedPages.length - 1];\n  if (lastLoadedPage === void 0) {\n    return;\n  }\n  const lastPageKey = sortKeyFromItem(\n    lastLoadedPage.value.page[lastLoadedPage.value.page.length - 1]\n  );\n  const isAfterLastPage = sortOrder === \"asc\" ? (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(insertedKey, lastPageKey) >= 0 : (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(insertedKey, lastPageKey) <= 0;\n  if (isAfterLastPage) {\n    if (lastLoadedPage.value.isDone) {\n      localQueryStore.setQuery(paginatedQuery, lastLoadedPage.args, {\n        ...lastLoadedPage.value,\n        page: [...lastLoadedPage.value.page, item]\n      });\n    }\n    return;\n  }\n  const successorPageIndex = sortedPages.findIndex(\n    (p) => sortOrder === \"asc\" ? (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(sortKeyFromItem(p.value.page[0]), insertedKey) > 0 : (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(sortKeyFromItem(p.value.page[0]), insertedKey) < 0\n  );\n  const pageToUpdate = successorPageIndex === -1 ? sortedPages[sortedPages.length - 1] : sortedPages[successorPageIndex - 1];\n  if (pageToUpdate === void 0) {\n    return;\n  }\n  const indexWithinPage = pageToUpdate.value.page.findIndex(\n    (e) => sortOrder === \"asc\" ? (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(sortKeyFromItem(e), insertedKey) >= 0 : (0,_values_compare_js__WEBPACK_IMPORTED_MODULE_5__.compareValues)(sortKeyFromItem(e), insertedKey) <= 0\n  );\n  const newPage = indexWithinPage === -1 ? [...pageToUpdate.value.page, item] : [\n    ...pageToUpdate.value.page.slice(0, indexWithinPage),\n    item,\n    ...pageToUpdate.value.page.slice(indexWithinPage)\n  ];\n  localQueryStore.setQuery(paginatedQuery, pageToUpdate.args, {\n    ...pageToUpdate.value,\n    page: newPage\n  });\n}\n//# sourceMappingURL=use_paginated_query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_queries.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_queries.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueries: () => (/* binding */ useQueries),\n/* harmony export */   useQueriesHelper: () => (/* binding */ useQueriesHelper)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queries_observer.js */ \"(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n\n\n\n\n\nfunction useQueries(queries) {\n  const convex = (0,_client_js__WEBPACK_IMPORTED_MODULE_1__.useConvex)();\n  if (convex === void 0) {\n    throw new Error(\n      \"Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\"\n    );\n  }\n  const createWatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return (query, args, journal) => {\n      return convex.watchQuery(query, args, { journal });\n    };\n  }, [convex]);\n  return useQueriesHelper(queries, createWatch);\n}\nfunction useQueriesHelper(queries, createWatch) {\n  const [observer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => new _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__.QueriesObserver(createWatch));\n  if (observer.createWatch !== createWatch) {\n    observer.setCreateWatch(createWatch);\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => () => observer.destroy(), [observer]);\n  const subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      getCurrentValue: () => {\n        return observer.getLocalResults(queries);\n      },\n      subscribe: (callback) => {\n        observer.setQueries(queries);\n        return observer.subscribe(callback);\n      }\n    }),\n    [observer, queries]\n  );\n  return (0,_use_subscription_js__WEBPACK_IMPORTED_MODULE_3__.useSubscription)(subscription);\n}\n//# sourceMappingURL=use_queries.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3dDO0FBQ2I7QUFDZ0I7QUFDQTtBQUNqRDtBQUNQLGlCQUFpQixxREFBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDhDQUFPO0FBQzdCO0FBQ0EsOENBQThDLFNBQVM7QUFDdkQ7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLCtDQUFRLFdBQVcsaUVBQWU7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsRUFBRSxnREFBUztBQUNYLHVCQUF1Qiw4Q0FBTztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFNBQVMscUVBQWU7QUFDeEI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC91c2VfcXVlcmllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUNvbnZleCB9IGZyb20gXCIuL2NsaWVudC5qc1wiO1xuaW1wb3J0IHsgUXVlcmllc09ic2VydmVyIH0gZnJvbSBcIi4vcXVlcmllc19vYnNlcnZlci5qc1wiO1xuaW1wb3J0IHsgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSBcIi4vdXNlX3N1YnNjcmlwdGlvbi5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVF1ZXJpZXMocXVlcmllcykge1xuICBjb25zdCBjb252ZXggPSB1c2VDb252ZXgoKTtcbiAgaWYgKGNvbnZleCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJDb3VsZCBub3QgZmluZCBDb252ZXggY2xpZW50ISBgdXNlUXVlcnlgIG11c3QgYmUgdXNlZCBpbiB0aGUgUmVhY3QgY29tcG9uZW50IHRyZWUgdW5kZXIgYENvbnZleFByb3ZpZGVyYC4gRGlkIHlvdSBmb3JnZXQgaXQ/IFNlZSBodHRwczovL2RvY3MuY29udmV4LmRldi9xdWljay1zdGFydCNzZXQtdXAtY29udmV4LWluLXlvdXItcmVhY3QtYXBwXCJcbiAgICApO1xuICB9XG4gIGNvbnN0IGNyZWF0ZVdhdGNoID0gdXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIChxdWVyeSwgYXJncywgam91cm5hbCkgPT4ge1xuICAgICAgcmV0dXJuIGNvbnZleC53YXRjaFF1ZXJ5KHF1ZXJ5LCBhcmdzLCB7IGpvdXJuYWwgfSk7XG4gICAgfTtcbiAgfSwgW2NvbnZleF0pO1xuICByZXR1cm4gdXNlUXVlcmllc0hlbHBlcihxdWVyaWVzLCBjcmVhdGVXYXRjaCk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlUXVlcmllc0hlbHBlcihxdWVyaWVzLCBjcmVhdGVXYXRjaCkge1xuICBjb25zdCBbb2JzZXJ2ZXJdID0gdXNlU3RhdGUoKCkgPT4gbmV3IFF1ZXJpZXNPYnNlcnZlcihjcmVhdGVXYXRjaCkpO1xuICBpZiAob2JzZXJ2ZXIuY3JlYXRlV2F0Y2ggIT09IGNyZWF0ZVdhdGNoKSB7XG4gICAgb2JzZXJ2ZXIuc2V0Q3JlYXRlV2F0Y2goY3JlYXRlV2F0Y2gpO1xuICB9XG4gIHVzZUVmZmVjdCgoKSA9PiAoKSA9PiBvYnNlcnZlci5kZXN0cm95KCksIFtvYnNlcnZlcl0pO1xuICBjb25zdCBzdWJzY3JpcHRpb24gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBnZXRDdXJyZW50VmFsdWU6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIG9ic2VydmVyLmdldExvY2FsUmVzdWx0cyhxdWVyaWVzKTtcbiAgICAgIH0sXG4gICAgICBzdWJzY3JpYmU6IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBvYnNlcnZlci5zZXRRdWVyaWVzKHF1ZXJpZXMpO1xuICAgICAgICByZXR1cm4gb2JzZXJ2ZXIuc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICBbb2JzZXJ2ZXIsIHF1ZXJpZXNdXG4gICk7XG4gIHJldHVybiB1c2VTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZV9xdWVyaWVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_subscription.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSubscription: () => (/* binding */ useSubscription)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction useSubscription({\n  // (Synchronously) returns the current value of our subscription.\n  getCurrentValue,\n  // This function is passed an event handler to attach to the subscription.\n  // It should return an unsubscribe function that removes the handler.\n  subscribe\n}) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => ({\n    getCurrentValue,\n    subscribe,\n    value: getCurrentValue()\n  }));\n  let valueToReturn = state.value;\n  if (state.getCurrentValue !== getCurrentValue || state.subscribe !== subscribe) {\n    valueToReturn = getCurrentValue();\n    setState({\n      getCurrentValue,\n      subscribe,\n      value: valueToReturn\n    });\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    let didUnsubscribe = false;\n    const checkForUpdates = () => {\n      if (didUnsubscribe) {\n        return;\n      }\n      setState((prevState) => {\n        if (prevState.getCurrentValue !== getCurrentValue || prevState.subscribe !== subscribe) {\n          return prevState;\n        }\n        const value = getCurrentValue();\n        if (prevState.value === value) {\n          return prevState;\n        }\n        return { ...prevState, value };\n      });\n    };\n    const unsubscribe = subscribe(checkForUpdates);\n    checkForUpdates();\n    return () => {\n      didUnsubscribe = true;\n      unsubscribe();\n    };\n  }, [getCurrentValue, subscribe]);\n  return valueToReturn;\n}\n//# sourceMappingURL=use_subscription.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9zdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUMrQjtBQUNyQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNEJBQTRCLCtDQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUUsZ0RBQVM7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9zdWJzY3JpcHRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlU3Vic2NyaXB0aW9uKHtcbiAgLy8gKFN5bmNocm9ub3VzbHkpIHJldHVybnMgdGhlIGN1cnJlbnQgdmFsdWUgb2Ygb3VyIHN1YnNjcmlwdGlvbi5cbiAgZ2V0Q3VycmVudFZhbHVlLFxuICAvLyBUaGlzIGZ1bmN0aW9uIGlzIHBhc3NlZCBhbiBldmVudCBoYW5kbGVyIHRvIGF0dGFjaCB0byB0aGUgc3Vic2NyaXB0aW9uLlxuICAvLyBJdCBzaG91bGQgcmV0dXJuIGFuIHVuc3Vic2NyaWJlIGZ1bmN0aW9uIHRoYXQgcmVtb3ZlcyB0aGUgaGFuZGxlci5cbiAgc3Vic2NyaWJlXG59KSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoKCkgPT4gKHtcbiAgICBnZXRDdXJyZW50VmFsdWUsXG4gICAgc3Vic2NyaWJlLFxuICAgIHZhbHVlOiBnZXRDdXJyZW50VmFsdWUoKVxuICB9KSk7XG4gIGxldCB2YWx1ZVRvUmV0dXJuID0gc3RhdGUudmFsdWU7XG4gIGlmIChzdGF0ZS5nZXRDdXJyZW50VmFsdWUgIT09IGdldEN1cnJlbnRWYWx1ZSB8fCBzdGF0ZS5zdWJzY3JpYmUgIT09IHN1YnNjcmliZSkge1xuICAgIHZhbHVlVG9SZXR1cm4gPSBnZXRDdXJyZW50VmFsdWUoKTtcbiAgICBzZXRTdGF0ZSh7XG4gICAgICBnZXRDdXJyZW50VmFsdWUsXG4gICAgICBzdWJzY3JpYmUsXG4gICAgICB2YWx1ZTogdmFsdWVUb1JldHVyblxuICAgIH0pO1xuICB9XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IGRpZFVuc3Vic2NyaWJlID0gZmFsc2U7XG4gICAgY29uc3QgY2hlY2tGb3JVcGRhdGVzID0gKCkgPT4ge1xuICAgICAgaWYgKGRpZFVuc3Vic2NyaWJlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldFN0YXRlKChwcmV2U3RhdGUpID0+IHtcbiAgICAgICAgaWYgKHByZXZTdGF0ZS5nZXRDdXJyZW50VmFsdWUgIT09IGdldEN1cnJlbnRWYWx1ZSB8fCBwcmV2U3RhdGUuc3Vic2NyaWJlICE9PSBzdWJzY3JpYmUpIHtcbiAgICAgICAgICByZXR1cm4gcHJldlN0YXRlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZ2V0Q3VycmVudFZhbHVlKCk7XG4gICAgICAgIGlmIChwcmV2U3RhdGUudmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHByZXZTdGF0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyAuLi5wcmV2U3RhdGUsIHZhbHVlIH07XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gc3Vic2NyaWJlKGNoZWNrRm9yVXBkYXRlcyk7XG4gICAgY2hlY2tGb3JVcGRhdGVzKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRpZFVuc3Vic2NyaWJlID0gdHJ1ZTtcbiAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfSwgW2dldEN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlXSk7XG4gIHJldHVybiB2YWx1ZVRvUmV0dXJuO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlX3N1YnNjcmlwdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/api.js":
/*!****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/api.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anyApi: () => (/* binding */ anyApi),\n/* harmony export */   filterApi: () => (/* binding */ filterApi),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   justActions: () => (/* binding */ justActions),\n/* harmony export */   justInternal: () => (/* binding */ justInternal),\n/* harmony export */   justMutations: () => (/* binding */ justMutations),\n/* harmony export */   justPaginatedQueries: () => (/* binding */ justPaginatedQueries),\n/* harmony export */   justPublic: () => (/* binding */ justPublic),\n/* harmony export */   justQueries: () => (/* binding */ justQueries),\n/* harmony export */   justSchedulable: () => (/* binding */ justSchedulable),\n/* harmony export */   makeFunctionReference: () => (/* binding */ makeFunctionReference)\n/* harmony export */ });\n/* harmony import */ var _functionName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functionName.js */ \"(ssr)/./node_modules/convex/dist/esm/server/functionName.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/paths.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\nfunction getFunctionName(functionReference) {\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionAddress)(functionReference);\n  if (address.name === void 0) {\n    if (address.functionHandle !== void 0) {\n      throw new Error(\n        `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received function handle ${address.functionHandle}`\n      );\n    } else if (address.reference !== void 0) {\n      throw new Error(\n        `Expected function reference in the current component like \"api.file.func\" or \"internal.file.func\", but received reference ${address.reference}`\n      );\n    }\n    throw new Error(\n      `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received ${JSON.stringify(address)}`\n    );\n  }\n  if (typeof functionReference === \"string\") return functionReference;\n  const name = functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName];\n  if (!name) {\n    throw new Error(`${functionReference} is not a functionReference`);\n  }\n  return name;\n}\nfunction makeFunctionReference(name) {\n  return { [_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName]: name };\n}\nfunction createApi(pathParts = []) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createApi(newParts);\n      } else if (prop === _functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName) {\n        if (pathParts.length < 2) {\n          const found = [\"api\", ...pathParts].join(\".\");\n          throw new Error(\n            `API path is expected to be of the form \\`api.moduleName.functionName\\`. Found: \\`${found}\\``\n          );\n        }\n        const path = pathParts.slice(0, -1).join(\"/\");\n        const exportName = pathParts[pathParts.length - 1];\n        if (exportName === \"default\") {\n          return path;\n        } else {\n          return path + \":\" + exportName;\n        }\n      } else if (prop === Symbol.toStringTag) {\n        return \"FunctionReference\";\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nfunction filterApi(api) {\n  return api;\n}\nfunction justInternal(api) {\n  return api;\n}\nfunction justPublic(api) {\n  return api;\n}\nfunction justQueries(api) {\n  return api;\n}\nfunction justMutations(api) {\n  return api;\n}\nfunction justActions(api) {\n  return api;\n}\nfunction justPaginatedQueries(api) {\n  return api;\n}\nfunction justSchedulable(api) {\n  return api;\n}\nconst anyApi = createApi();\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQ29DO0FBQ1U7QUFDcEQ7QUFDUCxrQkFBa0Isd0VBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLGtIQUFrSCx1QkFBdUI7QUFDekk7QUFDQSxNQUFNO0FBQ047QUFDQSxxSUFBcUksa0JBQWtCO0FBQ3ZKO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyx3QkFBd0I7QUFDeEg7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDBEQUFZO0FBQzdDO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsQ0FBQywwREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0JBQWtCLDBEQUFZO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxNQUFNO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgZnVuY3Rpb25OYW1lIH0gZnJvbSBcIi4vZnVuY3Rpb25OYW1lLmpzXCI7XG5pbXBvcnQgeyBnZXRGdW5jdGlvbkFkZHJlc3MgfSBmcm9tIFwiLi9jb21wb25lbnRzL3BhdGhzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVuY3Rpb25OYW1lKGZ1bmN0aW9uUmVmZXJlbmNlKSB7XG4gIGNvbnN0IGFkZHJlc3MgPSBnZXRGdW5jdGlvbkFkZHJlc3MoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICBpZiAoYWRkcmVzcy5uYW1lID09PSB2b2lkIDApIHtcbiAgICBpZiAoYWRkcmVzcy5mdW5jdGlvbkhhbmRsZSAhPT0gdm9pZCAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBFeHBlY3RlZCBmdW5jdGlvbiByZWZlcmVuY2UgbGlrZSBcImFwaS5maWxlLmZ1bmNcIiBvciBcImludGVybmFsLmZpbGUuZnVuY1wiLCBidXQgcmVjZWl2ZWQgZnVuY3Rpb24gaGFuZGxlICR7YWRkcmVzcy5mdW5jdGlvbkhhbmRsZX1gXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoYWRkcmVzcy5yZWZlcmVuY2UgIT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgZnVuY3Rpb24gcmVmZXJlbmNlIGluIHRoZSBjdXJyZW50IGNvbXBvbmVudCBsaWtlIFwiYXBpLmZpbGUuZnVuY1wiIG9yIFwiaW50ZXJuYWwuZmlsZS5mdW5jXCIsIGJ1dCByZWNlaXZlZCByZWZlcmVuY2UgJHthZGRyZXNzLnJlZmVyZW5jZX1gXG4gICAgICApO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgRXhwZWN0ZWQgZnVuY3Rpb24gcmVmZXJlbmNlIGxpa2UgXCJhcGkuZmlsZS5mdW5jXCIgb3IgXCJpbnRlcm5hbC5maWxlLmZ1bmNcIiwgYnV0IHJlY2VpdmVkICR7SlNPTi5zdHJpbmdpZnkoYWRkcmVzcyl9YFxuICAgICk7XG4gIH1cbiAgaWYgKHR5cGVvZiBmdW5jdGlvblJlZmVyZW5jZSA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGZ1bmN0aW9uUmVmZXJlbmNlO1xuICBjb25zdCBuYW1lID0gZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXTtcbiAgaWYgKCFuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2Z1bmN0aW9uUmVmZXJlbmNlfSBpcyBub3QgYSBmdW5jdGlvblJlZmVyZW5jZWApO1xuICB9XG4gIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VGdW5jdGlvblJlZmVyZW5jZShuYW1lKSB7XG4gIHJldHVybiB7IFtmdW5jdGlvbk5hbWVdOiBuYW1lIH07XG59XG5mdW5jdGlvbiBjcmVhdGVBcGkocGF0aFBhcnRzID0gW10pIHtcbiAgY29uc3QgaGFuZGxlciA9IHtcbiAgICBnZXQoXywgcHJvcCkge1xuICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IG5ld1BhcnRzID0gWy4uLnBhdGhQYXJ0cywgcHJvcF07XG4gICAgICAgIHJldHVybiBjcmVhdGVBcGkobmV3UGFydHMpO1xuICAgICAgfSBlbHNlIGlmIChwcm9wID09PSBmdW5jdGlvbk5hbWUpIHtcbiAgICAgICAgaWYgKHBhdGhQYXJ0cy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgY29uc3QgZm91bmQgPSBbXCJhcGlcIiwgLi4ucGF0aFBhcnRzXS5qb2luKFwiLlwiKTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgQVBJIHBhdGggaXMgZXhwZWN0ZWQgdG8gYmUgb2YgdGhlIGZvcm0gXFxgYXBpLm1vZHVsZU5hbWUuZnVuY3Rpb25OYW1lXFxgLiBGb3VuZDogXFxgJHtmb3VuZH1cXGBgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXRoID0gcGF0aFBhcnRzLnNsaWNlKDAsIC0xKS5qb2luKFwiL1wiKTtcbiAgICAgICAgY29uc3QgZXhwb3J0TmFtZSA9IHBhdGhQYXJ0c1twYXRoUGFydHMubGVuZ3RoIC0gMV07XG4gICAgICAgIGlmIChleHBvcnROYW1lID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBwYXRoICsgXCI6XCIgKyBleHBvcnROYW1lO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09IFN5bWJvbC50b1N0cmluZ1RhZykge1xuICAgICAgICByZXR1cm4gXCJGdW5jdGlvblJlZmVyZW5jZVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJldHVybiBuZXcgUHJveHkoe30sIGhhbmRsZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckFwaShhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0SW50ZXJuYWwoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdFB1YmxpYyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0UXVlcmllcyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0TXV0YXRpb25zKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RBY3Rpb25zKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RQYWdpbmF0ZWRRdWVyaWVzKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RTY2hlZHVsYWJsZShhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBjb25zdCBhbnlBcGkgPSBjcmVhdGVBcGkoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/components/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/components/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   componentsGeneric: () => (/* binding */ componentsGeneric),\n/* harmony export */   createFunctionHandle: () => (/* binding */ createFunctionHandle),\n/* harmony export */   currentSystemUdfInComponent: () => (/* binding */ currentSystemUdfInComponent),\n/* harmony export */   defineApp: () => (/* binding */ defineApp),\n/* harmony export */   defineComponent: () => (/* binding */ defineComponent),\n/* harmony export */   getFunctionAddress: () => (/* reexport safe */ _paths_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionAddress)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _impl_syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../impl/syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _paths_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./paths.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nasync function createFunctionHandle(functionReference) {\n  const address = (0,_paths_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionAddress)(functionReference);\n  return await (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/createFunctionHandle\", {\n    ...address,\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n  });\n}\nclass InstalledComponent {\n  constructor(definition, name) {\n    /**\n     * @internal\n     */\n    __publicField(this, \"_definition\");\n    /**\n     * @internal\n     */\n    __publicField(this, \"_name\");\n    this._definition = definition;\n    this._name = name;\n    (0,_paths_js__WEBPACK_IMPORTED_MODULE_3__.setReferencePath)(this, `_reference/childComponent/${name}`);\n  }\n  get exports() {\n    return createExports(this._name, []);\n  }\n}\nfunction createExports(name, pathParts) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createExports(name, newParts);\n      } else if (prop === _paths_js__WEBPACK_IMPORTED_MODULE_3__.toReferencePath) {\n        let reference = `_reference/childComponent/${name}`;\n        for (const part of pathParts) {\n          reference += `/${part}`;\n        }\n        return reference;\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nfunction use(definition, options) {\n  const importedComponentDefinition = definition;\n  if (typeof importedComponentDefinition.componentDefinitionPath !== \"string\") {\n    throw new Error(\n      \"Component definition does not have the required componentDefinitionPath property. This code only works in Convex runtime.\"\n    );\n  }\n  const name = options?.name || // added recently\n  importedComponentDefinition.defaultName || // can be removed once backend is out\n  importedComponentDefinition.componentDefinitionPath.split(\"/\").pop();\n  this._childComponents.push([name, importedComponentDefinition, {}]);\n  return new InstalledComponent(definition, name);\n}\nfunction exportAppForAnalysis() {\n  const definitionType = { type: \"app\" };\n  const childComponents = serializeChildComponents(this._childComponents);\n  return {\n    definitionType,\n    childComponents,\n    httpMounts: {},\n    exports: serializeExportTree(this._exportTree)\n  };\n}\nfunction serializeExportTree(tree) {\n  const branch = [];\n  for (const [key, child] of Object.entries(tree)) {\n    let node;\n    if (typeof child === \"string\") {\n      node = { type: \"leaf\", leaf: child };\n    } else {\n      node = serializeExportTree(child);\n    }\n    branch.push([key, node]);\n  }\n  return { type: \"branch\", branch };\n}\nfunction serializeChildComponents(childComponents) {\n  return childComponents.map(([name, definition, p]) => {\n    let args = null;\n    if (p !== null) {\n      args = [];\n      for (const [name2, value] of Object.entries(p)) {\n        if (value !== void 0) {\n          args.push([\n            name2,\n            { type: \"value\", value: JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)) }\n          ]);\n        }\n      }\n    }\n    const path = definition.componentDefinitionPath;\n    if (!path)\n      throw new Error(\n        \"no .componentPath for component definition \" + JSON.stringify(definition, null, 2)\n      );\n    return {\n      name,\n      path,\n      args\n    };\n  });\n}\nfunction exportComponentForAnalysis() {\n  const args = Object.entries(\n    this._args\n  ).map(([name, validator]) => [\n    name,\n    {\n      type: \"value\",\n      value: JSON.stringify(validator.json)\n    }\n  ]);\n  const definitionType = {\n    type: \"childComponent\",\n    name: this._name,\n    args\n  };\n  const childComponents = serializeChildComponents(this._childComponents);\n  return {\n    name: this._name,\n    definitionType,\n    childComponents,\n    httpMounts: {},\n    exports: serializeExportTree(this._exportTree)\n  };\n}\nfunction defineComponent(name) {\n  const ret = {\n    _isRoot: false,\n    _name: name,\n    _args: {},\n    _childComponents: [],\n    _exportTree: {},\n    _onInitCallbacks: {},\n    export: exportComponentForAnalysis,\n    use,\n    // pretend to conform to ComponentDefinition, which temporarily expects __args\n    ...{}\n  };\n  return ret;\n}\nfunction defineApp() {\n  const ret = {\n    _isRoot: true,\n    _childComponents: [],\n    _exportTree: {},\n    export: exportAppForAnalysis,\n    use\n  };\n  return ret;\n}\nfunction currentSystemUdfInComponent(componentId) {\n  return {\n    [_paths_js__WEBPACK_IMPORTED_MODULE_3__.toReferencePath]: `_reference/currentSystemUdfInComponent/${componentId}`\n  };\n}\nfunction createChildComponents(root, pathParts) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createChildComponents(root, newParts);\n      } else if (prop === _paths_js__WEBPACK_IMPORTED_MODULE_3__.toReferencePath) {\n        if (pathParts.length < 1) {\n          const found = [root, ...pathParts].join(\".\");\n          throw new Error(\n            `API path is expected to be of the form \\`${root}.childComponent.functionName\\`. Found: \\`${found}\\``\n          );\n        }\n        return `_reference/childComponent/` + pathParts.join(\"/\");\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nconst componentsGeneric = () => createChildComponents(\"components\", []);\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/components/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/components/paths.js":
/*!*****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/components/paths.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractReferencePath: () => (/* binding */ extractReferencePath),\n/* harmony export */   getFunctionAddress: () => (/* binding */ getFunctionAddress),\n/* harmony export */   isFunctionHandle: () => (/* binding */ isFunctionHandle),\n/* harmony export */   setReferencePath: () => (/* binding */ setReferencePath),\n/* harmony export */   toReferencePath: () => (/* binding */ toReferencePath)\n/* harmony export */ });\n/* harmony import */ var _functionName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functionName.js */ \"(ssr)/./node_modules/convex/dist/esm/server/functionName.js\");\n\n\nconst toReferencePath = Symbol.for(\"toReferencePath\");\nfunction setReferencePath(obj, value) {\n  obj[toReferencePath] = value;\n}\nfunction extractReferencePath(reference) {\n  return reference[toReferencePath] ?? null;\n}\nfunction isFunctionHandle(s) {\n  return s.startsWith(\"function://\");\n}\nfunction getFunctionAddress(functionReference) {\n  let functionAddress;\n  if (typeof functionReference === \"string\") {\n    if (isFunctionHandle(functionReference)) {\n      functionAddress = { functionHandle: functionReference };\n    } else {\n      functionAddress = { name: functionReference };\n    }\n  } else if (functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName]) {\n    functionAddress = { name: functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName] };\n  } else {\n    const referencePath = extractReferencePath(functionReference);\n    if (!referencePath) {\n      throw new Error(`${functionReference} is not a functionReference`);\n    }\n    functionAddress = { reference: referencePath };\n  }\n  return functionAddress;\n}\n//# sourceMappingURL=paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL3BhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3FDO0FBQzNDO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIsTUFBTTtBQUNOLDBCQUEwQjtBQUMxQjtBQUNBLElBQUksMkJBQTJCLDBEQUFZO0FBQzNDLHdCQUF3Qix3QkFBd0IsMERBQVk7QUFDNUQsSUFBSTtBQUNKO0FBQ0E7QUFDQSx5QkFBeUIsbUJBQW1CO0FBQzVDO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL3BhdGhzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgZnVuY3Rpb25OYW1lIH0gZnJvbSBcIi4uL2Z1bmN0aW9uTmFtZS5qc1wiO1xuZXhwb3J0IGNvbnN0IHRvUmVmZXJlbmNlUGF0aCA9IFN5bWJvbC5mb3IoXCJ0b1JlZmVyZW5jZVBhdGhcIik7XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVmZXJlbmNlUGF0aChvYmosIHZhbHVlKSB7XG4gIG9ialt0b1JlZmVyZW5jZVBhdGhdID0gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFJlZmVyZW5jZVBhdGgocmVmZXJlbmNlKSB7XG4gIHJldHVybiByZWZlcmVuY2VbdG9SZWZlcmVuY2VQYXRoXSA/PyBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb25IYW5kbGUocykge1xuICByZXR1cm4gcy5zdGFydHNXaXRoKFwiZnVuY3Rpb246Ly9cIik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVuY3Rpb25BZGRyZXNzKGZ1bmN0aW9uUmVmZXJlbmNlKSB7XG4gIGxldCBmdW5jdGlvbkFkZHJlc3M7XG4gIGlmICh0eXBlb2YgZnVuY3Rpb25SZWZlcmVuY2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICBpZiAoaXNGdW5jdGlvbkhhbmRsZShmdW5jdGlvblJlZmVyZW5jZSkpIHtcbiAgICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgZnVuY3Rpb25IYW5kbGU6IGZ1bmN0aW9uUmVmZXJlbmNlIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgbmFtZTogZnVuY3Rpb25SZWZlcmVuY2UgfTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXSkge1xuICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgbmFtZTogZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXSB9O1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHJlZmVyZW5jZVBhdGggPSBleHRyYWN0UmVmZXJlbmNlUGF0aChmdW5jdGlvblJlZmVyZW5jZSk7XG4gICAgaWYgKCFyZWZlcmVuY2VQYXRoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZnVuY3Rpb25SZWZlcmVuY2V9IGlzIG5vdCBhIGZ1bmN0aW9uUmVmZXJlbmNlYCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uQWRkcmVzcyA9IHsgcmVmZXJlbmNlOiByZWZlcmVuY2VQYXRoIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uQWRkcmVzcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGhzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/cron.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/cron.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Crons: () => (/* binding */ Crons),\n/* harmony export */   cronJobs: () => (/* binding */ cronJobs)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nconst DAYS_OF_WEEK = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\"\n];\nconst cronJobs = () => new Crons();\nfunction validateIntervalNumber(n) {\n  if (!Number.isInteger(n) || n <= 0) {\n    throw new Error(\"Interval must be an integer greater than 0\");\n  }\n}\nfunction validatedDayOfMonth(n) {\n  if (!Number.isInteger(n) || n < 1 || n > 31) {\n    throw new Error(\"Day of month must be an integer from 1 to 31\");\n  }\n  return n;\n}\nfunction validatedDayOfWeek(s) {\n  if (!DAYS_OF_WEEK.includes(s)) {\n    throw new Error('Day of week must be a string like \"monday\".');\n  }\n  return s;\n}\nfunction validatedHourOfDay(n) {\n  if (!Number.isInteger(n) || n < 0 || n > 23) {\n    throw new Error(\"Hour of day must be an integer from 0 to 23\");\n  }\n  return n;\n}\nfunction validatedMinuteOfHour(n) {\n  if (!Number.isInteger(n) || n < 0 || n > 59) {\n    throw new Error(\"Minute of hour must be an integer from 0 to 59\");\n  }\n  return n;\n}\nfunction validatedCronString(s) {\n  return s;\n}\nfunction validatedCronIdentifier(s) {\n  if (!s.match(/^[ -~]*$/)) {\n    throw new Error(\n      `Invalid cron identifier ${s}: use ASCII letters that are not control characters`\n    );\n  }\n  return s;\n}\nclass Crons {\n  constructor() {\n    __publicField(this, \"crons\");\n    __publicField(this, \"isCrons\");\n    this.isCrons = true;\n    this.crons = {};\n  }\n  /** @internal */\n  schedule(cronIdentifier, schedule, functionReference, args) {\n    const cronArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n    validatedCronIdentifier(cronIdentifier);\n    if (cronIdentifier in this.crons) {\n      throw new Error(`Cron identifier registered twice: ${cronIdentifier}`);\n    }\n    this.crons[cronIdentifier] = {\n      name: (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(functionReference),\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(cronArgs)],\n      schedule\n    };\n  }\n  /**\n   * Schedule a mutation or action to run at some interval.\n   *\n   * ```js\n   * crons.interval(\"Clear presence data\", {seconds: 30}, api.presence.clear);\n   * ```\n   *\n   * @param identifier - A unique name for this scheduled job.\n   * @param schedule - The time between runs for this scheduled job.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  interval(cronIdentifier, schedule, functionReference, ...args) {\n    const s = schedule;\n    const hasSeconds = +(\"seconds\" in s && s.seconds !== void 0);\n    const hasMinutes = +(\"minutes\" in s && s.minutes !== void 0);\n    const hasHours = +(\"hours\" in s && s.hours !== void 0);\n    const total = hasSeconds + hasMinutes + hasHours;\n    if (total !== 1) {\n      throw new Error(\"Must specify one of seconds, minutes, or hours\");\n    }\n    if (hasSeconds) {\n      validateIntervalNumber(schedule.seconds);\n    } else if (hasMinutes) {\n      validateIntervalNumber(schedule.minutes);\n    } else if (hasHours) {\n      validateIntervalNumber(schedule.hours);\n    }\n    this.schedule(\n      cronIdentifier,\n      { ...schedule, type: \"interval\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on an hourly basis.\n   *\n   * ```js\n   * crons.hourly(\n   *   \"Reset high scores\",\n   *   {\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  hourly(cronIdentifier, schedule, functionReference, ...args) {\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { minuteUTC, type: \"hourly\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a daily basis.\n   *\n   * ```js\n   * crons.daily(\n   *   \"Reset high scores\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  daily(cronIdentifier, schedule, functionReference, ...args) {\n    const hourUTC = validatedHourOfDay(schedule.hourUTC);\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { hourUTC, minuteUTC, type: \"daily\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a weekly basis.\n   *\n   * ```js\n   * crons.weekly(\n   *   \"Weekly re-engagement email\",\n   *   {\n   *     dayOfWeek: \"Tuesday\",\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.emails.send\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each week to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   */\n  weekly(cronIdentifier, schedule, functionReference, ...args) {\n    const dayOfWeek = validatedDayOfWeek(schedule.dayOfWeek);\n    const hourUTC = validatedHourOfDay(schedule.hourUTC);\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { dayOfWeek, hourUTC, minuteUTC, type: \"weekly\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a monthly basis.\n   *\n   * Note that some months have fewer days than others, so e.g. a function\n   * scheduled to run on the 30th will not run in February.\n   *\n   * ```js\n   * crons.monthly(\n   *   \"Bill customers at \",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *     day: 1,\n   *   },\n   *   api.billing.billCustomers\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each month to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  monthly(cronIdentifier, schedule, functionReference, ...args) {\n    const day = validatedDayOfMonth(schedule.day);\n    const hourUTC = validatedHourOfDay(schedule.hourUTC);\n    const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n    this.schedule(\n      cronIdentifier,\n      { day, hourUTC, minuteUTC, type: \"monthly\" },\n      functionReference,\n      ...args\n    );\n  }\n  /**\n   * Schedule a mutation or action to run on a recurring basis.\n   *\n   * Like the unix command `cron`, Sunday is 0, Monday is 1, etc.\n   *\n   * ```\n   *  ┌─ minute (0 - 59)\n   *  │ ┌─ hour (0 - 23)\n   *  │ │ ┌─ day of the month (1 - 31)\n   *  │ │ │ ┌─ month (1 - 12)\n   *  │ │ │ │ ┌─ day of the week (0 - 6) (Sunday to Saturday)\n   * \"* * * * *\"\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param cron - Cron string like `\"15 7 * * *\"` (Every day at 7:15 UTC)\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */\n  cron(cronIdentifier, cron, functionReference, ...args) {\n    const c = validatedCronString(cron);\n    this.schedule(\n      cronIdentifier,\n      { cron: c, type: \"cron\" },\n      functionReference,\n      ...args\n    );\n  }\n  /** @internal */\n  export() {\n    return JSON.stringify(this.crons);\n  }\n}\n//# sourceMappingURL=cron.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/cron.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/database.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/database.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=database.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9kYXRhYmFzZS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvZGF0YWJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhYmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/database.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/filter_builder.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Expression: () => (/* binding */ Expression)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass Expression {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isExpression\");\n    // Property to distinguish expressions by the type they resolve to.\n    __publicField(this, \"_value\");\n  }\n}\n//# sourceMappingURL=filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9maWx0ZXJfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ZpbHRlcl9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gUHJvcGVydHkgZm9yIG5vbWluYWwgdHlwZSBzdXBwb3J0LlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaXNFeHByZXNzaW9uXCIpO1xuICAgIC8vIFByb3BlcnR5IHRvIGRpc3Rpbmd1aXNoIGV4cHJlc3Npb25zIGJ5IHRoZSB0eXBlIHRoZXkgcmVzb2x2ZSB0by5cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3ZhbHVlXCIpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWx0ZXJfYnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/functionName.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/functionName.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   functionName: () => (/* binding */ functionName)\n/* harmony export */ });\n\nconst functionName = Symbol.for(\"functionName\");\n//# sourceMappingURL=functionName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9mdW5jdGlvbk5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ047QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvZnVuY3Rpb25OYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNvbnN0IGZ1bmN0aW9uTmFtZSA9IFN5bWJvbC5mb3IoXCJmdW5jdGlvbk5hbWVcIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mdW5jdGlvbk5hbWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/functionName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/actions_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionCalls: () => (/* binding */ setupActionCalls)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/paths.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\n\n\n\nfunction syscallArgs(requestId, functionReference, args) {\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionAddress)(functionReference);\n  return {\n    ...address,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)((0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args)),\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n    requestId\n  };\n}\nfunction setupActionCalls(requestId) {\n  return {\n    runQuery: async (query, args) => {\n      const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\n        \"1.0/actions/query\",\n        syscallArgs(requestId, query, args)\n      );\n      return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n    },\n    runMutation: async (mutation, args) => {\n      const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\n        \"1.0/actions/mutation\",\n        syscallArgs(requestId, mutation, args)\n      );\n      return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n    },\n    runAction: async (action, args) => {\n      const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\n        \"1.0/actions/action\",\n        syscallArgs(requestId, action, args)\n      );\n      return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n    }\n  };\n}\n//# sourceMappingURL=actions_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2FjdGlvbnNfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNzRDtBQUMxQjtBQUNVO0FBQ0Q7QUFDVTtBQUM1RDtBQUNBLGtCQUFrQix3RUFBa0I7QUFDcEM7QUFDQTtBQUNBLFVBQVUsOERBQVksQ0FBQywyREFBUztBQUNoQyxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsMkJBQTJCLGdFQUFtQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxhQUFhLDhEQUFZO0FBQ3pCLEtBQUs7QUFDTDtBQUNBLDJCQUEyQixnRUFBbUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4REFBWTtBQUN6QixLQUFLO0FBQ0w7QUFDQSwyQkFBMkIsZ0VBQW1CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOERBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvYWN0aW9uc19pbXBsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29udmV4VG9Kc29uLCBqc29uVG9Db252ZXggfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgcGFyc2VBcmdzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25BZGRyZXNzIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvcGF0aHMuanNcIjtcbmZ1bmN0aW9uIHN5c2NhbGxBcmdzKHJlcXVlc3RJZCwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpIHtcbiAgY29uc3QgYWRkcmVzcyA9IGdldEZ1bmN0aW9uQWRkcmVzcyhmdW5jdGlvblJlZmVyZW5jZSk7XG4gIHJldHVybiB7XG4gICAgLi4uYWRkcmVzcyxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24ocGFyc2VBcmdzKGFyZ3MpKSxcbiAgICB2ZXJzaW9uLFxuICAgIHJlcXVlc3RJZFxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQWN0aW9uQ2FsbHMocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgcnVuUXVlcnk6IGFzeW5jIChxdWVyeSwgYXJncykgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcbiAgICAgICAgXCIxLjAvYWN0aW9ucy9xdWVyeVwiLFxuICAgICAgICBzeXNjYWxsQXJncyhyZXF1ZXN0SWQsIHF1ZXJ5LCBhcmdzKVxuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0KTtcbiAgICB9LFxuICAgIHJ1bk11dGF0aW9uOiBhc3luYyAobXV0YXRpb24sIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXG4gICAgICAgIFwiMS4wL2FjdGlvbnMvbXV0YXRpb25cIixcbiAgICAgICAgc3lzY2FsbEFyZ3MocmVxdWVzdElkLCBtdXRhdGlvbiwgYXJncylcbiAgICAgICk7XG4gICAgICByZXR1cm4ganNvblRvQ29udmV4KHJlc3VsdCk7XG4gICAgfSxcbiAgICBydW5BY3Rpb246IGFzeW5jIChhY3Rpb24sIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXG4gICAgICAgIFwiMS4wL2FjdGlvbnMvYWN0aW9uXCIsXG4gICAgICAgIHN5c2NhbGxBcmdzKHJlcXVlc3RJZCwgYWN0aW9uLCBhcmdzKVxuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0KTtcbiAgICB9XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb25zX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/authentication_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupAuth: () => (/* binding */ setupAuth)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\n\nfunction setupAuth(requestId) {\n  return {\n    getUserIdentity: async () => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/getUserIdentity\", {\n        requestId\n      });\n    }\n  };\n}\n//# sourceMappingURL=authentication_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNzQztBQUM1QztBQUNQO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQW1CO0FBQ3RDO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQXV0aChyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRVc2VySWRlbnRpdHk6IGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2dldFVzZXJJZGVudGl0eVwiLCB7XG4gICAgICAgIHJlcXVlc3RJZFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aGVudGljYXRpb25faW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/database_impl.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupReader: () => (/* binding */ setupReader),\n/* harmony export */   setupWriter: () => (/* binding */ setupWriter)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\n\n\n\n\nasync function get(id, isSystem) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"get\", \"id\");\n  if (typeof id !== \"string\") {\n    throw new Error(\n      `Invalid argument \\`id\\` for \\`db.get\\`, expected string but got '${typeof id}': ${id}`\n    );\n  }\n  const args = {\n    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n    isSystem,\n    version: _index_js__WEBPACK_IMPORTED_MODULE_4__.version\n  };\n  const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/get\", args);\n  return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n}\nfunction setupReader() {\n  const reader = (isSystem = false) => {\n    return {\n      get: async (id) => {\n        return await get(id, isSystem);\n      },\n      query: (tableName) => {\n        return new TableReader(tableName, isSystem).query();\n      },\n      normalizeId: (tableName, id) => {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"normalizeId\", \"tableName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 2, \"normalizeId\", \"id\");\n        const accessingSystemTable = tableName.startsWith(\"_\");\n        if (accessingSystemTable !== isSystem) {\n          throw new Error(\n            `${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${isSystem ? \"\" : \"system.\"}normalizeId().`\n          );\n        }\n        const syscallJSON = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/db/normalizeId\", {\n          table: tableName,\n          idString: id\n        });\n        const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n        return syscallResult.id;\n      },\n      // We set the system reader on the next line\n      system: null,\n      table: (tableName) => {\n        return new TableReader(tableName, isSystem);\n      }\n    };\n  };\n  const { system: _, ...rest } = reader(true);\n  const r = reader();\n  r.system = rest;\n  return r;\n}\nasync function insert(tableName, value) {\n  if (tableName.startsWith(\"_\")) {\n    throw new Error(\"System tables (prefixed with `_`) are read-only.\");\n  }\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"insert\", \"table\");\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"insert\", \"value\");\n  const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/insert\", {\n    table: tableName,\n    value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n  });\n  const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n  return syscallResult._id;\n}\nasync function patch(id, value) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"patch\", \"id\");\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"patch\", \"value\");\n  await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/shallowMerge\", {\n    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n    value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_5__.patchValueToJson)(value)\n  });\n}\nasync function replace(id, value) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"replace\", \"id\");\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"replace\", \"value\");\n  await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/replace\", {\n    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n    value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n  });\n}\nasync function delete_(id) {\n  (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"delete\", \"id\");\n  await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/remove\", { id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id) });\n}\nfunction setupWriter() {\n  const reader = setupReader();\n  return {\n    get: reader.get,\n    query: reader.query,\n    normalizeId: reader.normalizeId,\n    system: reader.system,\n    insert: async (table, value) => {\n      return await insert(table, value);\n    },\n    patch: async (id, value) => {\n      return await patch(id, value);\n    },\n    replace: async (id, value) => {\n      return await replace(id, value);\n    },\n    delete: async (id) => {\n      return await delete_(id);\n    },\n    table: (tableName) => {\n      return new TableWriter(tableName, false);\n    }\n  };\n}\nclass TableReader {\n  constructor(tableName, isSystem) {\n    this.tableName = tableName;\n    this.isSystem = isSystem;\n  }\n  async get(id) {\n    return get(id, this.isSystem);\n  }\n  query() {\n    const accessingSystemTable = this.tableName.startsWith(\"_\");\n    if (accessingSystemTable !== this.isSystem) {\n      throw new Error(\n        `${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${this.isSystem ? \"\" : \"system.\"}query().`\n      );\n    }\n    return new _query_impl_js__WEBPACK_IMPORTED_MODULE_2__.QueryInitializerImpl(this.tableName);\n  }\n}\nclass TableWriter extends TableReader {\n  async insert(value) {\n    return insert(this.tableName, value);\n  }\n  async patch(id, value) {\n    return patch(id, value);\n  }\n  async replace(id, value) {\n    return replace(id, value);\n  }\n  async delete(id) {\n    return delete_(id);\n  }\n}\n//# sourceMappingURL=database_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass ExpressionImpl extends _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.Expression {\n  constructor(inner) {\n    super();\n    __publicField(this, \"inner\");\n    this.inner = inner;\n  }\n  serialize() {\n    return this.inner;\n  }\n}\nfunction serializeExpression(expr) {\n  if (expr instanceof ExpressionImpl) {\n    return expr.serialize();\n  } else {\n    return { $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(expr) };\n  }\n}\nconst filterBuilderImpl = {\n  //  Comparisons  /////////////////////////////////////////////////////////////\n  eq(l, r) {\n    return new ExpressionImpl({\n      $eq: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  neq(l, r) {\n    return new ExpressionImpl({\n      $neq: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  lt(l, r) {\n    return new ExpressionImpl({\n      $lt: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  lte(l, r) {\n    return new ExpressionImpl({\n      $lte: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  gt(l, r) {\n    return new ExpressionImpl({\n      $gt: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  gte(l, r) {\n    return new ExpressionImpl({\n      $gte: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  //  Arithmetic  //////////////////////////////////////////////////////////////\n  add(l, r) {\n    return new ExpressionImpl({\n      $add: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  sub(l, r) {\n    return new ExpressionImpl({\n      $sub: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  mul(l, r) {\n    return new ExpressionImpl({\n      $mul: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  div(l, r) {\n    return new ExpressionImpl({\n      $div: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  mod(l, r) {\n    return new ExpressionImpl({\n      $mod: [serializeExpression(l), serializeExpression(r)]\n    });\n  },\n  neg(x) {\n    return new ExpressionImpl({ $neg: serializeExpression(x) });\n  },\n  //  Logic  ///////////////////////////////////////////////////////////////////\n  and(...exprs) {\n    return new ExpressionImpl({ $and: exprs.map(serializeExpression) });\n  },\n  or(...exprs) {\n    return new ExpressionImpl({ $or: exprs.map(serializeExpression) });\n  },\n  not(x) {\n    return new ExpressionImpl({ $not: serializeExpression(x) });\n  },\n  //  Other  ///////////////////////////////////////////////////////////////////\n  field(fieldPath) {\n    return new ExpressionImpl({ $field: fieldPath });\n  }\n};\n//# sourceMappingURL=filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNnRTtBQUdsQztBQUN2Qiw2QkFBNkIsMERBQVU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSTtBQUNKLGFBQWEsVUFBVSx5RUFBdUI7QUFDOUM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLGdDQUFnQyw4QkFBOEI7QUFDOUQsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0Msc0NBQXNDO0FBQ3RFLEdBQUc7QUFDSDtBQUNBLGdDQUFnQyxxQ0FBcUM7QUFDckUsR0FBRztBQUNIO0FBQ0EsZ0NBQWdDLDhCQUE4QjtBQUM5RCxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxtQkFBbUI7QUFDbkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuaW1wb3J0IHsgY29udmV4T3JVbmRlZmluZWRUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5pbXBvcnQge1xuICBFeHByZXNzaW9uXG59IGZyb20gXCIuLi9maWx0ZXJfYnVpbGRlci5qc1wiO1xuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25JbXBsIGV4dGVuZHMgRXhwcmVzc2lvbiB7XG4gIGNvbnN0cnVjdG9yKGlubmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaW5uZXJcIik7XG4gICAgdGhpcy5pbm5lciA9IGlubmVyO1xuICB9XG4gIHNlcmlhbGl6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lcjtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUV4cHJlc3Npb24oZXhwcikge1xuICBpZiAoZXhwciBpbnN0YW5jZW9mIEV4cHJlc3Npb25JbXBsKSB7XG4gICAgcmV0dXJuIGV4cHIuc2VyaWFsaXplKCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgJGxpdGVyYWw6IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uKGV4cHIpIH07XG4gIH1cbn1cbmV4cG9ydCBjb25zdCBmaWx0ZXJCdWlsZGVySW1wbCA9IHtcbiAgLy8gIENvbXBhcmlzb25zICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGVxKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRlcTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG5lcShsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbmVxOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbHQobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGx0OiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbHRlKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRsdGU6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBndChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkZ3Q6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBndGUobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGd0ZTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIC8vICBBcml0aG1ldGljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBhZGQobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGFkZDogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIHN1YihsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkc3ViOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbXVsKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRtdWw6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBkaXYobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGRpdjogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG1vZChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbW9kOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbmVnKHgpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHsgJG5lZzogc2VyaWFsaXplRXhwcmVzc2lvbih4KSB9KTtcbiAgfSxcbiAgLy8gIExvZ2ljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGFuZCguLi5leHBycykge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkYW5kOiBleHBycy5tYXAoc2VyaWFsaXplRXhwcmVzc2lvbikgfSk7XG4gIH0sXG4gIG9yKC4uLmV4cHJzKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRvcjogZXhwcnMubWFwKHNlcmlhbGl6ZUV4cHJlc3Npb24pIH0pO1xuICB9LFxuICBub3QoeCkge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkbm90OiBzZXJpYWxpemVFeHByZXNzaW9uKHgpIH0pO1xuICB9LFxuICAvLyAgT3RoZXIgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgZmllbGQoZmllbGRQYXRoKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRmaWVsZDogZmllbGRQYXRoIH0pO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyX2J1aWxkZXJfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRangeBuilderImpl: () => (/* binding */ IndexRangeBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index_range_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass IndexRangeBuilderImpl extends _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__.IndexRange {\n  constructor(rangeExpressions) {\n    super();\n    __publicField(this, \"rangeExpressions\");\n    __publicField(this, \"isConsumed\");\n    this.rangeExpressions = rangeExpressions;\n    this.isConsumed = false;\n  }\n  static new() {\n    return new IndexRangeBuilderImpl([]);\n  }\n  consume() {\n    if (this.isConsumed) {\n      throw new Error(\n        \"IndexRangeBuilder has already been used! Chain your method calls like `q => q.eq(...).eq(...)`. See https://docs.convex.dev/using/indexes\"\n      );\n    }\n    this.isConsumed = true;\n  }\n  eq(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Eq\",\n        fieldPath: fieldName,\n        value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_1__.convexOrUndefinedToJson)(value)\n      })\n    );\n  }\n  gt(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Gt\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  gte(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Gte\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  lt(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Lt\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  lte(fieldName, value) {\n    this.consume();\n    return new IndexRangeBuilderImpl(\n      this.rangeExpressions.concat({\n        type: \"Lte\",\n        fieldPath: fieldName,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n      })\n    );\n  }\n  export() {\n    this.consume();\n    return this.rangeExpressions;\n  }\n}\n//# sourceMappingURL=index_range_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDcUQ7QUFDVztBQUc3QjtBQUM1QixvQ0FBb0MsK0RBQVU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5RUFBdUI7QUFDdEMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFZO0FBQzNCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4REFBWTtBQUMzQixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQVk7QUFDM0IsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFZO0FBQzNCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmltcG9ydCB7XG4gIEluZGV4UmFuZ2Vcbn0gZnJvbSBcIi4uL2luZGV4X3JhbmdlX2J1aWxkZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBJbmRleFJhbmdlQnVpbGRlckltcGwgZXh0ZW5kcyBJbmRleFJhbmdlIHtcbiAgY29uc3RydWN0b3IocmFuZ2VFeHByZXNzaW9ucykge1xuICAgIHN1cGVyKCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJhbmdlRXhwcmVzc2lvbnNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzQ29uc3VtZWRcIik7XG4gICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zID0gcmFuZ2VFeHByZXNzaW9ucztcbiAgICB0aGlzLmlzQ29uc3VtZWQgPSBmYWxzZTtcbiAgfVxuICBzdGF0aWMgbmV3KCkge1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFtdKTtcbiAgfVxuICBjb25zdW1lKCkge1xuICAgIGlmICh0aGlzLmlzQ29uc3VtZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJJbmRleFJhbmdlQnVpbGRlciBoYXMgYWxyZWFkeSBiZWVuIHVzZWQhIENoYWluIHlvdXIgbWV0aG9kIGNhbGxzIGxpa2UgYHEgPT4gcS5lcSguLi4pLmVxKC4uLilgLiBTZWUgaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdXNpbmcvaW5kZXhlc1wiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmlzQ29uc3VtZWQgPSB0cnVlO1xuICB9XG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkVxXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4T3JVbmRlZmluZWRUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZ3QoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiR3RcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZ3RlKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkd0ZVwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBsdChmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIG5ldyBJbmRleFJhbmdlQnVpbGRlckltcGwoXG4gICAgICB0aGlzLnJhbmdlRXhwcmVzc2lvbnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJMdFwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBsdGUoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiTHRlXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4VG9Kc29uKHZhbHVlKVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGV4cG9ydCgpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gdGhpcy5yYW5nZUV4cHJlc3Npb25zO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleF9yYW5nZV9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/query_impl.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryImpl: () => (/* binding */ QueryImpl),\n/* harmony export */   QueryInitializerImpl: () => (/* binding */ QueryInitializerImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\");\n/* harmony import */ var _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index_range_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\");\n/* harmony import */ var _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search_filter_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\nconst MAX_QUERY_OPERATORS = 256;\nclass QueryInitializerImpl {\n  constructor(tableName) {\n    __publicField(this, \"tableName\");\n    this.tableName = tableName;\n  }\n  withIndex(indexName, indexRange) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withIndex\", \"indexName\");\n    let rangeBuilder = _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__.IndexRangeBuilderImpl.new();\n    if (indexRange !== void 0) {\n      rangeBuilder = indexRange(rangeBuilder);\n    }\n    return new QueryImpl({\n      source: {\n        type: \"IndexRange\",\n        indexName: this.tableName + \".\" + indexName,\n        range: rangeBuilder.export(),\n        order: null\n      },\n      operators: []\n    });\n  }\n  withSearchIndex(indexName, searchFilter) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withSearchIndex\", \"indexName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(searchFilter, 2, \"withSearchIndex\", \"searchFilter\");\n    const searchFilterBuilder = _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__.SearchFilterBuilderImpl.new();\n    return new QueryImpl({\n      source: {\n        type: \"Search\",\n        indexName: this.tableName + \".\" + indexName,\n        filters: searchFilter(searchFilterBuilder).export()\n      },\n      operators: []\n    });\n  }\n  fullTableScan() {\n    return new QueryImpl({\n      source: {\n        type: \"FullTableScan\",\n        tableName: this.tableName,\n        order: null\n      },\n      operators: []\n    });\n  }\n  order(order) {\n    return this.fullTableScan().order(order);\n  }\n  // This is internal API and should not be exposed to developers yet.\n  async count() {\n    const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/count\", {\n      table: this.tableName\n    });\n    const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON);\n    return syscallResult;\n  }\n  filter(predicate) {\n    return this.fullTableScan().filter(predicate);\n  }\n  limit(n) {\n    return this.fullTableScan().limit(n);\n  }\n  collect() {\n    return this.fullTableScan().collect();\n  }\n  take(n) {\n    return this.fullTableScan().take(n);\n  }\n  paginate(paginationOpts) {\n    return this.fullTableScan().paginate(paginationOpts);\n  }\n  first() {\n    return this.fullTableScan().first();\n  }\n  unique() {\n    return this.fullTableScan().unique();\n  }\n  [Symbol.asyncIterator]() {\n    return this.fullTableScan()[Symbol.asyncIterator]();\n  }\n}\nfunction throwClosedError(type) {\n  throw new Error(\n    type === \"consumed\" ? \"This query is closed and can't emit any more values.\" : \"This query has been chained with another operator and can't be reused.\"\n  );\n}\nclass QueryImpl {\n  constructor(query) {\n    __publicField(this, \"state\");\n    this.state = { type: \"preparing\", query };\n  }\n  takeQuery() {\n    if (this.state.type !== \"preparing\") {\n      throw new Error(\n        \"A query can only be chained once and can't be chained after iteration begins.\"\n      );\n    }\n    const query = this.state.query;\n    this.state = { type: \"closed\" };\n    return query;\n  }\n  startQuery() {\n    if (this.state.type === \"executing\") {\n      throw new Error(\"Iteration can only begin on a query once.\");\n    }\n    if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n      throwClosedError(this.state.type);\n    }\n    const query = this.state.query;\n    const { queryId } = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryStream\", { query, version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version });\n    this.state = { type: \"executing\", queryId };\n    return queryId;\n  }\n  closeQuery() {\n    if (this.state.type === \"executing\") {\n      const queryId = this.state.queryId;\n      (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryCleanup\", { queryId });\n    }\n    this.state = { type: \"consumed\" };\n  }\n  order(order) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(order, 1, \"order\", \"order\");\n    const query = this.takeQuery();\n    if (query.source.type === \"Search\") {\n      throw new Error(\n        \"Search queries must always be in relevance order. Can not set order manually.\"\n      );\n    }\n    if (query.source.order !== null) {\n      throw new Error(\"Queries may only specify order at most once\");\n    }\n    query.source.order = order;\n    return new QueryImpl(query);\n  }\n  filter(predicate) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(predicate, 1, \"filter\", \"predicate\");\n    const query = this.takeQuery();\n    if (query.operators.length >= MAX_QUERY_OPERATORS) {\n      throw new Error(\n        `Can't construct query with more than ${MAX_QUERY_OPERATORS} operators`\n      );\n    }\n    query.operators.push({\n      filter: (0,_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.serializeExpression)(predicate(_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.filterBuilderImpl))\n    });\n    return new QueryImpl(query);\n  }\n  limit(n) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"limit\", \"n\");\n    const query = this.takeQuery();\n    query.operators.push({ limit: n });\n    return new QueryImpl(query);\n  }\n  [Symbol.asyncIterator]() {\n    this.startQuery();\n    return this;\n  }\n  async next() {\n    if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n      throwClosedError(this.state.type);\n    }\n    const queryId = this.state.type === \"preparing\" ? this.startQuery() : this.state.queryId;\n    const { value, done } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryStreamNext\", {\n      queryId\n    });\n    if (done) {\n      this.closeQuery();\n    }\n    const convexValue = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(value);\n    return { value: convexValue, done };\n  }\n  return() {\n    this.closeQuery();\n    return Promise.resolve({ done: true, value: void 0 });\n  }\n  async paginate(paginationOpts) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(paginationOpts, 1, \"paginate\", \"options\");\n    if (typeof paginationOpts?.numItems !== \"number\" || paginationOpts.numItems < 0) {\n      throw new Error(\n        `\\`options.numItems\\` must be a positive number. Received \\`${paginationOpts?.numItems}\\`.`\n      );\n    }\n    const query = this.takeQuery();\n    const pageSize = paginationOpts.numItems;\n    const cursor = paginationOpts.cursor;\n    const endCursor = paginationOpts?.endCursor ?? null;\n    const maximumRowsRead = paginationOpts.maximumRowsRead ?? null;\n    const { page, isDone, continueCursor, splitCursor, pageStatus } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryPage\", {\n      query,\n      cursor,\n      endCursor,\n      pageSize,\n      maximumRowsRead,\n      maximumBytesRead: paginationOpts.maximumBytesRead,\n      version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version\n    });\n    return {\n      page: page.map((json) => (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(json)),\n      isDone,\n      continueCursor,\n      splitCursor,\n      pageStatus\n    };\n  }\n  async collect() {\n    const out = [];\n    for await (const item of this) {\n      out.push(item);\n    }\n    return out;\n  }\n  async take(n) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"take\", \"n\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArgIsNonNegativeInteger)(n, 1, \"take\", \"n\");\n    return this.limit(n).collect();\n  }\n  async first() {\n    const first_array = await this.take(1);\n    return first_array.length === 0 ? null : first_array[0];\n  }\n  async unique() {\n    const first_two_array = await this.take(2);\n    if (first_two_array.length === 0) {\n      return null;\n    }\n    if (first_two_array.length === 2) {\n      throw new Error(`unique() query returned more than one result: \n [${first_two_array[0]._id}, ${first_two_array[1]._id}, ...]`);\n    }\n    return first_two_array[0];\n  }\n}\n//# sourceMappingURL=query_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/registration_impl.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionGeneric: () => (/* binding */ actionGeneric),\n/* harmony export */   httpActionGeneric: () => (/* binding */ httpActionGeneric),\n/* harmony export */   internalActionGeneric: () => (/* binding */ internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* binding */ internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* binding */ internalQueryGeneric),\n/* harmony export */   invokeFunction: () => (/* binding */ invokeFunction),\n/* harmony export */   mutationGeneric: () => (/* binding */ mutationGeneric),\n/* harmony export */   queryGeneric: () => (/* binding */ queryGeneric),\n/* harmony export */   validateReturnValue: () => (/* binding */ validateReturnValue)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _actions_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\");\n/* harmony import */ var _vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vector_search_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\");\n/* harmony import */ var _authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\");\n/* harmony import */ var _database_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./database_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./query_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\");\n/* harmony import */ var _storage_impl_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./storage_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/paths.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function invokeMutation(func, argsStr) {\n  const requestId = \"\";\n  const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr));\n  const mutationCtx = {\n    db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupWriter)(),\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageWriter)(requestId),\n    scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupMutationScheduler)(),\n    runQuery: (reference, args2) => runUdf(\"query\", reference, args2),\n    runMutation: (reference, args2) => runUdf(\"mutation\", reference, args2)\n  };\n  const result = await invokeFunction(func, mutationCtx, args);\n  validateReturnValue(result);\n  return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nfunction validateReturnValue(v2) {\n  if (v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryInitializerImpl || v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryImpl) {\n    throw new Error(\n      \"Return value is a Query. Results must be retrieved with `.collect()`, `.take(n), `.unique()`, or `.first()`.\"\n    );\n  }\n}\nasync function invokeFunction(func, ctx, args) {\n  let result;\n  try {\n    result = await Promise.resolve(func(ctx, ...args));\n  } catch (thrown) {\n    throw serializeConvexErrorData(thrown);\n  }\n  return result;\n}\nfunction dontCallDirectly(funcType, handler) {\n  return (ctx, args) => {\n    globalThis.console.warn(\n      `Convex functions should not directly call other Convex functions. Consider calling a helper function instead. e.g. \\`export const foo = ${funcType}(...); await foo(ctx);\\` is not supported. See https://docs.convex.dev/production/best-practices/#use-helper-functions-to-write-shared-code`\n    );\n    return handler(ctx, args);\n  };\n}\nfunction serializeConvexErrorData(thrown) {\n  if (typeof thrown === \"object\" && thrown !== null && Symbol.for(\"ConvexError\") in thrown) {\n    const error = thrown;\n    error.data = JSON.stringify(\n      (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(error.data === void 0 ? null : error.data)\n    );\n    error.ConvexErrorSymbol = Symbol.for(\"ConvexError\");\n    return error;\n  } else {\n    return thrown;\n  }\n}\nfunction assertNotBrowser() {\n  if (typeof window === \"undefined\" || !window.__convexAllowFunctionsInBrowser) {\n    return;\n  }\n  const isRealBrowser = Object.getOwnPropertyDescriptor(globalThis, \"window\")?.get?.toString().includes(\"[native code]\") ?? false;\n  if (isRealBrowser) {\n    throw new Error(\"Convex functions should not be imported in the browser.\");\n  }\n}\nfunction exportArgs(functionDefinition) {\n  return () => {\n    let args = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.v.any();\n    if (typeof functionDefinition === \"object\" && functionDefinition.args !== void 0) {\n      args = (0,_values_validator_js__WEBPACK_IMPORTED_MODULE_10__.asObjectValidator)(functionDefinition.args);\n    }\n    return JSON.stringify(args.json);\n  };\n}\nfunction exportReturns(functionDefinition) {\n  return () => {\n    let returns;\n    if (typeof functionDefinition === \"object\" && functionDefinition.returns !== void 0) {\n      returns = (0,_values_validator_js__WEBPACK_IMPORTED_MODULE_10__.asObjectValidator)(functionDefinition.returns);\n    }\n    return JSON.stringify(returns ? returns.json : null);\n  };\n}\nconst mutationGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"mutation\", handler);\n  assertNotBrowser();\n  func.isMutation = true;\n  func.isPublic = true;\n  func.invokeMutation = (argsStr) => invokeMutation(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nconst internalMutationGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\n    \"internalMutation\",\n    handler\n  );\n  assertNotBrowser();\n  func.isMutation = true;\n  func.isInternal = true;\n  func.invokeMutation = (argsStr) => invokeMutation(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nasync function invokeQuery(func, argsStr) {\n  const requestId = \"\";\n  const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr));\n  const queryCtx = {\n    db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupReader)(),\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageReader)(requestId),\n    runQuery: (reference, args2) => runUdf(\"query\", reference, args2)\n  };\n  const result = await invokeFunction(func, queryCtx, args);\n  validateReturnValue(result);\n  return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nconst queryGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"query\", handler);\n  assertNotBrowser();\n  func.isQuery = true;\n  func.isPublic = true;\n  func.invokeQuery = (argsStr) => invokeQuery(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nconst internalQueryGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"internalQuery\", handler);\n  assertNotBrowser();\n  func.isQuery = true;\n  func.isInternal = true;\n  func.invokeQuery = (argsStr) => invokeQuery(handler, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nasync function invokeAction(func, requestId, argsStr) {\n  const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr));\n  const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n  const ctx = {\n    ...calls,\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n    vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n  };\n  const result = await invokeFunction(func, ctx, args);\n  return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nconst actionGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"action\", handler);\n  assertNotBrowser();\n  func.isAction = true;\n  func.isPublic = true;\n  func.invokeAction = (requestId, argsStr) => invokeAction(handler, requestId, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nconst internalActionGeneric = (functionDefinition) => {\n  const handler = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n  const func = dontCallDirectly(\"internalAction\", handler);\n  assertNotBrowser();\n  func.isAction = true;\n  func.isInternal = true;\n  func.invokeAction = (requestId, argsStr) => invokeAction(handler, requestId, argsStr);\n  func.exportArgs = exportArgs(functionDefinition);\n  func.exportReturns = exportReturns(functionDefinition);\n  func._handler = handler;\n  return func;\n};\nasync function invokeHttpAction(func, request) {\n  const requestId = \"\";\n  const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n  const ctx = {\n    ...calls,\n    auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n    storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n    scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n    vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n  };\n  return await invokeFunction(func, ctx, [request]);\n}\nconst httpActionGeneric = (func) => {\n  const q = dontCallDirectly(\"httpAction\", func);\n  assertNotBrowser();\n  q.isHttp = true;\n  q.invokeHttpAction = (request) => invokeHttpAction(func, request);\n  q._handler = func;\n  return q;\n};\nasync function runUdf(udfType, f, args) {\n  const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_8__.parseArgs)(args);\n  const syscallArgs = {\n    udfType,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(queryArgs),\n    ...(0,_components_paths_js__WEBPACK_IMPORTED_MODULE_11__.getFunctionAddress)(f)\n  };\n  const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_9__.performAsyncSyscall)(\"1.0/runUdf\", syscallArgs);\n  return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result);\n}\n//# sourceMappingURL=registration_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/scheduler_impl.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionScheduler: () => (/* binding */ setupActionScheduler),\n/* harmony export */   setupMutationScheduler: () => (/* binding */ setupMutationScheduler)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/paths.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\n\n\n\n\nfunction setupMutationScheduler() {\n  return {\n    runAfter: async (delayMs, functionReference, args) => {\n      const syscallArgs = runAfterSyscallArgs(delayMs, functionReference, args);\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n    },\n    runAt: async (ms_since_epoch_or_date, functionReference, args) => {\n      const syscallArgs = runAtSyscallArgs(\n        ms_since_epoch_or_date,\n        functionReference,\n        args\n      );\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n    },\n    cancel: async (id) => {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateArg)(id, 1, \"cancel\", \"id\");\n      const args = { id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id) };\n      await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/cancel_job\", args);\n    }\n  };\n}\nfunction setupActionScheduler(requestId) {\n  return {\n    runAfter: async (delayMs, functionReference, args) => {\n      const syscallArgs = {\n        requestId,\n        ...runAfterSyscallArgs(delayMs, functionReference, args)\n      };\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n    },\n    runAt: async (ms_since_epoch_or_date, functionReference, args) => {\n      const syscallArgs = {\n        requestId,\n        ...runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args)\n      };\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n    },\n    cancel: async (id) => {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateArg)(id, 1, \"cancel\", \"id\");\n      const syscallArgs = { id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id) };\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/cancel_job\", syscallArgs);\n    }\n  };\n}\nfunction runAfterSyscallArgs(delayMs, functionReference, args) {\n  if (typeof delayMs !== \"number\") {\n    throw new Error(\"`delayMs` must be a number\");\n  }\n  if (!isFinite(delayMs)) {\n    throw new Error(\"`delayMs` must be a finite number\");\n  }\n  if (delayMs < 0) {\n    throw new Error(\"`delayMs` must be non-negative\");\n  }\n  const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionAddress)(functionReference);\n  const ts = (Date.now() + delayMs) / 1e3;\n  return {\n    ...address,\n    ts,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n  };\n}\nfunction runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args) {\n  let ts;\n  if (ms_since_epoch_or_date instanceof Date) {\n    ts = ms_since_epoch_or_date.valueOf() / 1e3;\n  } else if (typeof ms_since_epoch_or_date === \"number\") {\n    ts = ms_since_epoch_or_date / 1e3;\n  } else {\n    throw new Error(\"The invoke time must a Date or a timestamp\");\n  }\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_5__.getFunctionAddress)(functionReference);\n  const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n  return {\n    ...address,\n    ts,\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n    version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n  };\n}\n//# sourceMappingURL=scheduler_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NjaGVkdWxlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWE7QUFDd0M7QUFDWjtBQUNVO0FBQ0Q7QUFDTjtBQUNnQjtBQUNyRDtBQUNQO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEMsS0FBSztBQUNMO0FBQ0EsTUFBTSx5REFBVztBQUNqQixxQkFBcUIsSUFBSSw4REFBWTtBQUNyQyxZQUFZLGdFQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQW1CO0FBQ3RDLEtBQUs7QUFDTDtBQUNBLE1BQU0seURBQVc7QUFDakIsNEJBQTRCLElBQUksOERBQVk7QUFDNUMsbUJBQW1CLGdFQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBUztBQUNoQyxrQkFBa0Isd0VBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw4REFBWTtBQUN0QixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxrQkFBa0Isd0VBQWtCO0FBQ3BDLHVCQUF1QiwyREFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQSxVQUFVLDhEQUFZO0FBQ3RCLFdBQVc7QUFDWDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc2NoZWR1bGVyX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgcGFyc2VBcmdzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25BZGRyZXNzIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvcGF0aHMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cE11dGF0aW9uU2NoZWR1bGVyKCkge1xuICByZXR1cm4ge1xuICAgIHJ1bkFmdGVyOiBhc3luYyAoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0gcnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncyk7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBydW5BdDogYXN5bmMgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHJ1bkF0U3lzY2FsbEFyZ3MoXG4gICAgICAgIG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsXG4gICAgICAgIGZ1bmN0aW9uUmVmZXJlbmNlLFxuICAgICAgICBhcmdzXG4gICAgICApO1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc2NoZWR1bGVcIiwgc3lzY2FsbEFyZ3MpO1xuICAgIH0sXG4gICAgY2FuY2VsOiBhc3luYyAoaWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKGlkLCAxLCBcImNhbmNlbFwiLCBcImlkXCIpO1xuICAgICAgY29uc3QgYXJncyA9IHsgaWQ6IGNvbnZleFRvSnNvbihpZCkgfTtcbiAgICAgIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvY2FuY2VsX2pvYlwiLCBhcmdzKTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBBY3Rpb25TY2hlZHVsZXIocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgcnVuQWZ0ZXI6IGFzeW5jIChkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykgPT4ge1xuICAgICAgY29uc3Qgc3lzY2FsbEFyZ3MgPSB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgLi4ucnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncylcbiAgICAgIH07XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL3NjaGVkdWxlXCIsIHN5c2NhbGxBcmdzKTtcbiAgICB9LFxuICAgIHJ1bkF0OiBhc3luYyAobXNfc2luY2VfZXBvY2hfb3JfZGF0ZSwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0ge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIC4uLnJ1bkF0U3lzY2FsbEFyZ3MobXNfc2luY2VfZXBvY2hfb3JfZGF0ZSwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvYWN0aW9ucy9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBjYW5jZWw6IGFzeW5jIChpZCkgPT4ge1xuICAgICAgdmFsaWRhdGVBcmcoaWQsIDEsIFwiY2FuY2VsXCIsIFwiaWRcIik7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHsgaWQ6IGNvbnZleFRvSnNvbihpZCkgfTtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2FjdGlvbnMvY2FuY2VsX2pvYlwiLCBzeXNjYWxsQXJncyk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gcnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykge1xuICBpZiAodHlwZW9mIGRlbGF5TXMgIT09IFwibnVtYmVyXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJgZGVsYXlNc2AgbXVzdCBiZSBhIG51bWJlclwiKTtcbiAgfVxuICBpZiAoIWlzRmluaXRlKGRlbGF5TXMpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYGRlbGF5TXNgIG11c3QgYmUgYSBmaW5pdGUgbnVtYmVyXCIpO1xuICB9XG4gIGlmIChkZWxheU1zIDwgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImBkZWxheU1zYCBtdXN0IGJlIG5vbi1uZWdhdGl2ZVwiKTtcbiAgfVxuICBjb25zdCBmdW5jdGlvbkFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gIGNvbnN0IGFkZHJlc3MgPSBnZXRGdW5jdGlvbkFkZHJlc3MoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICBjb25zdCB0cyA9IChEYXRlLm5vdygpICsgZGVsYXlNcykgLyAxZTM7XG4gIHJldHVybiB7XG4gICAgLi4uYWRkcmVzcyxcbiAgICB0cyxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24oZnVuY3Rpb25BcmdzKSxcbiAgICB2ZXJzaW9uXG4gIH07XG59XG5mdW5jdGlvbiBydW5BdFN5c2NhbGxBcmdzKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSB7XG4gIGxldCB0cztcbiAgaWYgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgdHMgPSBtc19zaW5jZV9lcG9jaF9vcl9kYXRlLnZhbHVlT2YoKSAvIDFlMztcbiAgfSBlbHNlIGlmICh0eXBlb2YgbXNfc2luY2VfZXBvY2hfb3JfZGF0ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHRzID0gbXNfc2luY2VfZXBvY2hfb3JfZGF0ZSAvIDFlMztcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgaW52b2tlIHRpbWUgbXVzdCBhIERhdGUgb3IgYSB0aW1lc3RhbXBcIik7XG4gIH1cbiAgY29uc3QgYWRkcmVzcyA9IGdldEZ1bmN0aW9uQWRkcmVzcyhmdW5jdGlvblJlZmVyZW5jZSk7XG4gIGNvbnN0IGZ1bmN0aW9uQXJncyA9IHBhcnNlQXJncyhhcmdzKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5hZGRyZXNzLFxuICAgIHRzLFxuICAgIGFyZ3M6IGNvbnZleFRvSnNvbihmdW5jdGlvbkFyZ3MpLFxuICAgIHZlcnNpb25cbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVkdWxlcl9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilterBuilderImpl: () => (/* binding */ SearchFilterBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search_filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass SearchFilterBuilderImpl extends _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.SearchFilter {\n  constructor(filters) {\n    super();\n    __publicField(this, \"filters\");\n    __publicField(this, \"isConsumed\");\n    this.filters = filters;\n    this.isConsumed = false;\n  }\n  static new() {\n    return new SearchFilterBuilderImpl([]);\n  }\n  consume() {\n    if (this.isConsumed) {\n      throw new Error(\n        \"SearchFilterBuilder has already been used! Chain your method calls like `q => q.search(...).eq(...)`.\"\n      );\n    }\n    this.isConsumed = true;\n  }\n  search(fieldName, query) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"search\", \"fieldName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(query, 2, \"search\", \"query\");\n    this.consume();\n    return new SearchFilterBuilderImpl(\n      this.filters.concat({\n        type: \"Search\",\n        fieldPath: fieldName,\n        value: query\n      })\n    );\n  }\n  eq(fieldName, value) {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"eq\", \"fieldName\");\n    if (arguments.length !== 2) {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(value, 2, \"search\", \"value\");\n    }\n    this.consume();\n    return new SearchFilterBuilderImpl(\n      this.filters.concat({\n        type: \"Eq\",\n        fieldPath: fieldName,\n        value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(value)\n      })\n    );\n  }\n  export() {\n    this.consume();\n    return this.filters;\n  }\n}\n//# sourceMappingURL=search_filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NlYXJjaF9maWx0ZXJfYnVpbGRlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNnRTtBQUczQjtBQUNPO0FBQ3JDLHNDQUFzQyxtRUFBWTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkseURBQVc7QUFDZixJQUFJLHlEQUFXO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLElBQUkseURBQVc7QUFDZjtBQUNBLE1BQU0seURBQVc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5RUFBdUI7QUFDdEMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc2VhcmNoX2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuaW1wb3J0IHsgY29udmV4T3JVbmRlZmluZWRUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5pbXBvcnQge1xuICBTZWFyY2hGaWx0ZXJcbn0gZnJvbSBcIi4uL3NlYXJjaF9maWx0ZXJfYnVpbGRlci5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGNsYXNzIFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsIGV4dGVuZHMgU2VhcmNoRmlsdGVyIHtcbiAgY29uc3RydWN0b3IoZmlsdGVycykge1xuICAgIHN1cGVyKCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImZpbHRlcnNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzQ29uc3VtZWRcIik7XG4gICAgdGhpcy5maWx0ZXJzID0gZmlsdGVycztcbiAgICB0aGlzLmlzQ29uc3VtZWQgPSBmYWxzZTtcbiAgfVxuICBzdGF0aWMgbmV3KCkge1xuICAgIHJldHVybiBuZXcgU2VhcmNoRmlsdGVyQnVpbGRlckltcGwoW10pO1xuICB9XG4gIGNvbnN1bWUoKSB7XG4gICAgaWYgKHRoaXMuaXNDb25zdW1lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlNlYXJjaEZpbHRlckJ1aWxkZXIgaGFzIGFscmVhZHkgYmVlbiB1c2VkISBDaGFpbiB5b3VyIG1ldGhvZCBjYWxscyBsaWtlIGBxID0+IHEuc2VhcmNoKC4uLikuZXEoLi4uKWAuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMuaXNDb25zdW1lZCA9IHRydWU7XG4gIH1cbiAgc2VhcmNoKGZpZWxkTmFtZSwgcXVlcnkpIHtcbiAgICB2YWxpZGF0ZUFyZyhmaWVsZE5hbWUsIDEsIFwic2VhcmNoXCIsIFwiZmllbGROYW1lXCIpO1xuICAgIHZhbGlkYXRlQXJnKHF1ZXJ5LCAyLCBcInNlYXJjaFwiLCBcInF1ZXJ5XCIpO1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgU2VhcmNoRmlsdGVyQnVpbGRlckltcGwoXG4gICAgICB0aGlzLmZpbHRlcnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJTZWFyY2hcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBxdWVyeVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB2YWxpZGF0ZUFyZyhmaWVsZE5hbWUsIDEsIFwiZXFcIiwgXCJmaWVsZE5hbWVcIik7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggIT09IDIpIHtcbiAgICAgIHZhbGlkYXRlQXJnKHZhbHVlLCAyLCBcInNlYXJjaFwiLCBcInZhbHVlXCIpO1xuICAgIH1cbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5maWx0ZXJzLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiRXFcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhPclVuZGVmaW5lZFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBleHBvcnQoKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIHRoaXMuZmlsdGVycztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoX2ZpbHRlcl9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/storage_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupStorageActionWriter: () => (/* binding */ setupStorageActionWriter),\n/* harmony export */   setupStorageReader: () => (/* binding */ setupStorageReader),\n/* harmony export */   setupStorageWriter: () => (/* binding */ setupStorageWriter)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\nfunction setupStorageReader(requestId) {\n  return {\n    getUrl: async (storageId) => {\n      (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(storageId, 1, \"getUrl\", \"storageId\");\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetUrl\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    },\n    getMetadata: async (storageId) => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetMetadata\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    }\n  };\n}\nfunction setupStorageWriter(requestId) {\n  const reader = setupStorageReader(requestId);\n  return {\n    generateUploadUrl: async () => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGenerateUploadUrl\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version\n      });\n    },\n    delete: async (storageId) => {\n      await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageDelete\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    },\n    getUrl: reader.getUrl,\n    getMetadata: reader.getMetadata\n  };\n}\nfunction setupStorageActionWriter(requestId) {\n  const writer = setupStorageWriter(requestId);\n  return {\n    ...writer,\n    store: async (blob, options) => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/storeBlob\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        blob,\n        options\n      });\n    },\n    get: async (storageId) => {\n      return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/getBlob\", {\n        requestId,\n        version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n        storageId\n      });\n    }\n  };\n}\n//# sourceMappingURL=storage_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N0b3JhZ2VfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUM0QjtBQUM0QjtBQUN6QjtBQUNyQztBQUNQO0FBQ0E7QUFDQSxNQUFNLHlEQUFXO0FBQ2pCLG1CQUFtQixnRUFBbUI7QUFDdEM7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsbUJBQW1CLGdFQUFtQjtBQUN0QztBQUNBLGVBQWU7QUFDZjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBbUI7QUFDdEM7QUFDQSxlQUFlO0FBQ2YsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLFlBQVksZ0VBQW1CO0FBQy9CO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNkRBQWdCO0FBQ25DO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsbUJBQW1CLDZEQUFnQjtBQUNuQztBQUNBLGVBQWU7QUFDZjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9zdG9yYWdlX2ltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsLCBwZXJmb3JtSnNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwU3RvcmFnZVJlYWRlcihyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRVcmw6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKHN0b3JhZ2VJZCwgMSwgXCJnZXRVcmxcIiwgXCJzdG9yYWdlSWRcIik7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlR2V0VXJsXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBzdG9yYWdlSWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0TWV0YWRhdGE6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL3N0b3JhZ2VHZXRNZXRhZGF0YVwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTdG9yYWdlV3JpdGVyKHJlcXVlc3RJZCkge1xuICBjb25zdCByZWFkZXIgPSBzZXR1cFN0b3JhZ2VSZWFkZXIocmVxdWVzdElkKTtcbiAgcmV0dXJuIHtcbiAgICBnZW5lcmF0ZVVwbG9hZFVybDogYXN5bmMgKCkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc3RvcmFnZUdlbmVyYXRlVXBsb2FkVXJsXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRlbGV0ZTogYXN5bmMgKHN0b3JhZ2VJZCkgPT4ge1xuICAgICAgYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlRGVsZXRlXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBzdG9yYWdlSWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VXJsOiByZWFkZXIuZ2V0VXJsLFxuICAgIGdldE1ldGFkYXRhOiByZWFkZXIuZ2V0TWV0YWRhdGFcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0b3JhZ2VBY3Rpb25Xcml0ZXIocmVxdWVzdElkKSB7XG4gIGNvbnN0IHdyaXRlciA9IHNldHVwU3RvcmFnZVdyaXRlcihyZXF1ZXN0SWQpO1xuICByZXR1cm4ge1xuICAgIC4uLndyaXRlcixcbiAgICBzdG9yZTogYXN5bmMgKGJsb2IsIG9wdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtSnNTeXNjYWxsKFwic3RvcmFnZS9zdG9yZUJsb2JcIiwge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIGJsb2IsXG4gICAgICAgIG9wdGlvbnNcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBhc3luYyAoc3RvcmFnZUlkKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUpzU3lzY2FsbChcInN0b3JhZ2UvZ2V0QmxvYlwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yYWdlX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/syscall.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   performAsyncSyscall: () => (/* binding */ performAsyncSyscall),\n/* harmony export */   performJsSyscall: () => (/* binding */ performJsSyscall),\n/* harmony export */   performSyscall: () => (/* binding */ performSyscall)\n/* harmony export */ });\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\nfunction performSyscall(op, arg) {\n  if (typeof Convex === \"undefined\" || Convex.syscall === void 0) {\n    throw new Error(\n      \"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\"\n    );\n  }\n  const resultStr = Convex.syscall(op, JSON.stringify(arg));\n  return JSON.parse(resultStr);\n}\nasync function performAsyncSyscall(op, arg) {\n  if (typeof Convex === \"undefined\" || Convex.asyncSyscall === void 0) {\n    throw new Error(\n      \"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\"\n    );\n  }\n  let resultStr;\n  try {\n    resultStr = await Convex.asyncSyscall(op, JSON.stringify(arg));\n  } catch (e) {\n    if (e.data !== void 0) {\n      const rethrown = new _values_errors_js__WEBPACK_IMPORTED_MODULE_0__.ConvexError(e.message);\n      rethrown.data = (0,_values_value_js__WEBPACK_IMPORTED_MODULE_1__.jsonToConvex)(e.data);\n      throw rethrown;\n    }\n    throw new Error(e.message);\n  }\n  return JSON.parse(resultStr);\n}\nfunction performJsSyscall(op, arg) {\n  if (typeof Convex === \"undefined\" || Convex.jsSyscall === void 0) {\n    throw new Error(\n      \"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\"\n    );\n  }\n  return Convex.jsSyscall(op, arg);\n}\n//# sourceMappingURL=syscall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N5c2NhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUN3QztBQUNBO0FBQzlDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLDJCQUEyQiwwREFBVztBQUN0QyxzQkFBc0IsOERBQVk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N5c2NhbGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBDb252ZXhFcnJvciB9IGZyb20gXCIuLi8uLi92YWx1ZXMvZXJyb3JzLmpzXCI7XG5pbXBvcnQgeyBqc29uVG9Db252ZXggfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGVyZm9ybVN5c2NhbGwob3AsIGFyZykge1xuICBpZiAodHlwZW9mIENvbnZleCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBDb252ZXguc3lzY2FsbCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJUaGUgQ29udmV4IGRhdGFiYXNlIGFuZCBhdXRoIG9iamVjdHMgYXJlIGJlaW5nIHVzZWQgb3V0c2lkZSBvZiBhIENvbnZleCBiYWNrZW5kLiBEaWQgeW91IG1lYW4gdG8gdXNlIGB1c2VRdWVyeWAgb3IgYHVzZU11dGF0aW9uYCB0byBjYWxsIGEgQ29udmV4IGZ1bmN0aW9uP1wiXG4gICAgKTtcbiAgfVxuICBjb25zdCByZXN1bHRTdHIgPSBDb252ZXguc3lzY2FsbChvcCwgSlNPTi5zdHJpbmdpZnkoYXJnKSk7XG4gIHJldHVybiBKU09OLnBhcnNlKHJlc3VsdFN0cik7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGVyZm9ybUFzeW5jU3lzY2FsbChvcCwgYXJnKSB7XG4gIGlmICh0eXBlb2YgQ29udmV4ID09PSBcInVuZGVmaW5lZFwiIHx8IENvbnZleC5hc3luY1N5c2NhbGwgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiVGhlIENvbnZleCBkYXRhYmFzZSBhbmQgYXV0aCBvYmplY3RzIGFyZSBiZWluZyB1c2VkIG91dHNpZGUgb2YgYSBDb252ZXggYmFja2VuZC4gRGlkIHlvdSBtZWFuIHRvIHVzZSBgdXNlUXVlcnlgIG9yIGB1c2VNdXRhdGlvbmAgdG8gY2FsbCBhIENvbnZleCBmdW5jdGlvbj9cIlxuICAgICk7XG4gIH1cbiAgbGV0IHJlc3VsdFN0cjtcbiAgdHJ5IHtcbiAgICByZXN1bHRTdHIgPSBhd2FpdCBDb252ZXguYXN5bmNTeXNjYWxsKG9wLCBKU09OLnN0cmluZ2lmeShhcmcpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlLmRhdGEgIT09IHZvaWQgMCkge1xuICAgICAgY29uc3QgcmV0aHJvd24gPSBuZXcgQ29udmV4RXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgIHJldGhyb3duLmRhdGEgPSBqc29uVG9Db252ZXgoZS5kYXRhKTtcbiAgICAgIHRocm93IHJldGhyb3duO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoZS5tZXNzYWdlKTtcbiAgfVxuICByZXR1cm4gSlNPTi5wYXJzZShyZXN1bHRTdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBlcmZvcm1Kc1N5c2NhbGwob3AsIGFyZykge1xuICBpZiAodHlwZW9mIENvbnZleCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBDb252ZXguanNTeXNjYWxsID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlRoZSBDb252ZXggZGF0YWJhc2UgYW5kIGF1dGggb2JqZWN0cyBhcmUgYmVpbmcgdXNlZCBvdXRzaWRlIG9mIGEgQ29udmV4IGJhY2tlbmQuIERpZCB5b3UgbWVhbiB0byB1c2UgYHVzZVF1ZXJ5YCBvciBgdXNlTXV0YXRpb25gIHRvIGNhbGwgYSBDb252ZXggZnVuY3Rpb24/XCJcbiAgICApO1xuICB9XG4gIHJldHVybiBDb252ZXguanNTeXNjYWxsKG9wLCBhcmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3lzY2FsbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/validate.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateArg: () => (/* binding */ validateArg),\n/* harmony export */   validateArgIsInteger: () => (/* binding */ validateArgIsInteger),\n/* harmony export */   validateArgIsNonNegativeInteger: () => (/* binding */ validateArgIsNonNegativeInteger)\n/* harmony export */ });\n\nfunction validateArg(arg, idx, method, argName) {\n  if (arg === void 0) {\n    throw new TypeError(\n      `Must provide arg ${idx} \\`${argName}\\` to \\`${method}\\``\n    );\n  }\n}\nfunction validateArgIsInteger(arg, idx, method, argName) {\n  if (!Number.isInteger(arg)) {\n    throw new TypeError(\n      `Arg ${idx} \\`${argName}\\` to \\`${method}\\` must be an integer`\n    );\n  }\n}\nfunction validateArgIsNonNegativeInteger(arg, idx, method, argName) {\n  if (!Number.isInteger(arg) || arg < 0) {\n    throw new TypeError(\n      `Arg ${idx} \\`${argName}\\` to \\`${method}\\` must be a non-negative integer`\n    );\n  }\n}\n//# sourceMappingURL=validate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZhbGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhO0FBQ047QUFDUDtBQUNBO0FBQ0EsMEJBQTBCLEtBQUssSUFBSSxRQUFRLFVBQVUsT0FBTztBQUM1RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLEtBQUssSUFBSSxRQUFRLFVBQVUsT0FBTztBQUMvQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxhQUFhLEtBQUssSUFBSSxRQUFRLFVBQVUsT0FBTztBQUMvQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC92YWxpZGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFyZyhhcmcsIGlkeCwgbWV0aG9kLCBhcmdOYW1lKSB7XG4gIGlmIChhcmcgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICBgTXVzdCBwcm92aWRlIGFyZyAke2lkeH0gXFxgJHthcmdOYW1lfVxcYCB0byBcXGAke21ldGhvZH1cXGBgXG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQXJnSXNJbnRlZ2VyKGFyZywgaWR4LCBtZXRob2QsIGFyZ05hbWUpIHtcbiAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgYEFyZyAke2lkeH0gXFxgJHthcmdOYW1lfVxcYCB0byBcXGAke21ldGhvZH1cXGAgbXVzdCBiZSBhbiBpbnRlZ2VyYFxuICAgICk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFyZ0lzTm9uTmVnYXRpdmVJbnRlZ2VyKGFyZywgaWR4LCBtZXRob2QsIGFyZ05hbWUpIHtcbiAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykgfHwgYXJnIDwgMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICBgQXJnICR7aWR4fSBcXGAke2FyZ05hbWV9XFxgIHRvIFxcYCR7bWV0aG9kfVxcYCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIGludGVnZXJgXG4gICAgKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js":
/*!************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/vector_search_impl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   VectorQueryImpl: () => (/* binding */ VectorQueryImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression),\n/* harmony export */   setupActionVectorSearch: () => (/* binding */ setupActionVectorSearch)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _vector_search_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vector_search.js */ \"(ssr)/./node_modules/convex/dist/esm/server/vector_search.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nfunction setupActionVectorSearch(requestId) {\n  return async (tableName, indexName, query) => {\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"vectorSearch\", \"tableName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(indexName, 2, \"vectorSearch\", \"indexName\");\n    (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(query, 3, \"vectorSearch\", \"query\");\n    if (!query.vector || !Array.isArray(query.vector) || query.vector.length === 0) {\n      throw Error(\"`vector` must be a non-empty Array in vectorSearch\");\n    }\n    return await new VectorQueryImpl(\n      requestId,\n      tableName + \".\" + indexName,\n      query\n    ).collect();\n  };\n}\nclass VectorQueryImpl {\n  constructor(requestId, indexName, query) {\n    __publicField(this, \"requestId\");\n    __publicField(this, \"state\");\n    this.requestId = requestId;\n    const filters = query.filter ? serializeExpression(query.filter(filterBuilderImpl)) : null;\n    this.state = {\n      type: \"preparing\",\n      query: {\n        indexName,\n        limit: query.limit,\n        vector: query.vector,\n        expressions: filters\n      }\n    };\n  }\n  async collect() {\n    if (this.state.type === \"consumed\") {\n      throw new Error(\"This query is closed and can't emit any more values.\");\n    }\n    const query = this.state.query;\n    this.state = { type: \"consumed\" };\n    const { results } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/actions/vectorSearch\", {\n      requestId: this.requestId,\n      version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n      query\n    });\n    return results;\n  }\n}\nclass ExpressionImpl extends _vector_search_js__WEBPACK_IMPORTED_MODULE_2__.FilterExpression {\n  constructor(inner) {\n    super();\n    __publicField(this, \"inner\");\n    this.inner = inner;\n  }\n  serialize() {\n    return this.inner;\n  }\n}\nfunction serializeExpression(expr) {\n  if (expr instanceof ExpressionImpl) {\n    return expr.serialize();\n  } else {\n    return { $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_4__.convexOrUndefinedToJson)(expr) };\n  }\n}\nconst filterBuilderImpl = {\n  //  Comparisons  /////////////////////////////////////////////////////////////\n  eq(fieldName, value) {\n    if (typeof fieldName !== \"string\") {\n      throw new Error(\"The first argument to `q.eq` must be a field name.\");\n    }\n    return new ExpressionImpl({\n      $eq: [\n        serializeExpression(new ExpressionImpl({ $field: fieldName })),\n        serializeExpression(value)\n      ]\n    });\n  },\n  //  Logic  ///////////////////////////////////////////////////////////////////\n  or(...exprs) {\n    return new ExpressionImpl({ $or: exprs.map(serializeExpression) });\n  }\n};\n//# sourceMappingURL=vector_search_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZlY3Rvcl9zZWFyY2hfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDbUQ7QUFDVjtBQUdaO0FBQ2U7QUFDb0I7QUFDekQ7QUFDUDtBQUNBLElBQUkseURBQVc7QUFDZixJQUFJLHlEQUFXO0FBQ2YsSUFBSSx5REFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLFlBQVksVUFBVSxRQUFRLGdFQUFtQjtBQUNqRDtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDTyw2QkFBNkIsK0RBQWdCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUk7QUFDSixhQUFhLFVBQVUseUVBQXVCO0FBQzlDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELG1CQUFtQjtBQUNwRTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLHFDQUFxQztBQUNyRTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvdmVjdG9yX3NlYXJjaF9pbXBsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IHBlcmZvcm1Bc3luY1N5c2NhbGwgfSBmcm9tIFwiLi9zeXNjYWxsLmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQge1xuICBGaWx0ZXJFeHByZXNzaW9uXG59IGZyb20gXCIuLi92ZWN0b3Jfc2VhcmNoLmpzXCI7XG5pbXBvcnQgeyB2YWxpZGF0ZUFyZyB9IGZyb20gXCIuL3ZhbGlkYXRlLmpzXCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cEFjdGlvblZlY3RvclNlYXJjaChyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIGFzeW5jICh0YWJsZU5hbWUsIGluZGV4TmFtZSwgcXVlcnkpID0+IHtcbiAgICB2YWxpZGF0ZUFyZyh0YWJsZU5hbWUsIDEsIFwidmVjdG9yU2VhcmNoXCIsIFwidGFibGVOYW1lXCIpO1xuICAgIHZhbGlkYXRlQXJnKGluZGV4TmFtZSwgMiwgXCJ2ZWN0b3JTZWFyY2hcIiwgXCJpbmRleE5hbWVcIik7XG4gICAgdmFsaWRhdGVBcmcocXVlcnksIDMsIFwidmVjdG9yU2VhcmNoXCIsIFwicXVlcnlcIik7XG4gICAgaWYgKCFxdWVyeS52ZWN0b3IgfHwgIUFycmF5LmlzQXJyYXkocXVlcnkudmVjdG9yKSB8fCBxdWVyeS52ZWN0b3IubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBFcnJvcihcImB2ZWN0b3JgIG11c3QgYmUgYSBub24tZW1wdHkgQXJyYXkgaW4gdmVjdG9yU2VhcmNoXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgbmV3IFZlY3RvclF1ZXJ5SW1wbChcbiAgICAgIHJlcXVlc3RJZCxcbiAgICAgIHRhYmxlTmFtZSArIFwiLlwiICsgaW5kZXhOYW1lLFxuICAgICAgcXVlcnlcbiAgICApLmNvbGxlY3QoKTtcbiAgfTtcbn1cbmV4cG9ydCBjbGFzcyBWZWN0b3JRdWVyeUltcGwge1xuICBjb25zdHJ1Y3RvcihyZXF1ZXN0SWQsIGluZGV4TmFtZSwgcXVlcnkpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVxdWVzdElkXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGF0ZVwiKTtcbiAgICB0aGlzLnJlcXVlc3RJZCA9IHJlcXVlc3RJZDtcbiAgICBjb25zdCBmaWx0ZXJzID0gcXVlcnkuZmlsdGVyID8gc2VyaWFsaXplRXhwcmVzc2lvbihxdWVyeS5maWx0ZXIoZmlsdGVyQnVpbGRlckltcGwpKSA6IG51bGw7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHR5cGU6IFwicHJlcGFyaW5nXCIsXG4gICAgICBxdWVyeToge1xuICAgICAgICBpbmRleE5hbWUsXG4gICAgICAgIGxpbWl0OiBxdWVyeS5saW1pdCxcbiAgICAgICAgdmVjdG9yOiBxdWVyeS52ZWN0b3IsXG4gICAgICAgIGV4cHJlc3Npb25zOiBmaWx0ZXJzXG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBhc3luYyBjb2xsZWN0KCkge1xuICAgIGlmICh0aGlzLnN0YXRlLnR5cGUgPT09IFwiY29uc3VtZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBxdWVyeSBpcyBjbG9zZWQgYW5kIGNhbid0IGVtaXQgYW55IG1vcmUgdmFsdWVzLlwiKTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLnN0YXRlLnF1ZXJ5O1xuICAgIHRoaXMuc3RhdGUgPSB7IHR5cGU6IFwiY29uc3VtZWRcIiB9O1xuICAgIGNvbnN0IHsgcmVzdWx0cyB9ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL3ZlY3RvclNlYXJjaFwiLCB7XG4gICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElkLFxuICAgICAgdmVyc2lvbixcbiAgICAgIHF1ZXJ5XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cbn1cbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uSW1wbCBleHRlbmRzIEZpbHRlckV4cHJlc3Npb24ge1xuICBjb25zdHJ1Y3Rvcihpbm5lcikge1xuICAgIHN1cGVyKCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlubmVyXCIpO1xuICAgIHRoaXMuaW5uZXIgPSBpbm5lcjtcbiAgfVxuICBzZXJpYWxpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5uZXI7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVFeHByZXNzaW9uKGV4cHIpIHtcbiAgaWYgKGV4cHIgaW5zdGFuY2VvZiBFeHByZXNzaW9uSW1wbCkge1xuICAgIHJldHVybiBleHByLnNlcmlhbGl6ZSgpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7ICRsaXRlcmFsOiBjb252ZXhPclVuZGVmaW5lZFRvSnNvbihleHByKSB9O1xuICB9XG59XG5leHBvcnQgY29uc3QgZmlsdGVyQnVpbGRlckltcGwgPSB7XG4gIC8vICBDb21wYXJpc29ucyAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBlcShmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiBmaWVsZE5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCB0byBgcS5lcWAgbXVzdCBiZSBhIGZpZWxkIG5hbWUuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRlcTogW1xuICAgICAgICBzZXJpYWxpemVFeHByZXNzaW9uKG5ldyBFeHByZXNzaW9uSW1wbCh7ICRmaWVsZDogZmllbGROYW1lIH0pKSxcbiAgICAgICAgc2VyaWFsaXplRXhwcmVzc2lvbih2YWx1ZSlcbiAgICAgIF1cbiAgICB9KTtcbiAgfSxcbiAgLy8gIExvZ2ljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIG9yKC4uLmV4cHJzKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRvcjogZXhwcnMubWFwKHNlcmlhbGl6ZUV4cHJlc3Npb24pIH0pO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yX3NlYXJjaF9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.ROUTABLE_HTTP_METHODS),\n/* harmony export */   SearchFilter: () => (/* reexport safe */ _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__.SearchFilter),\n/* harmony export */   actionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.actionGeneric),\n/* harmony export */   anyApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.anyApi),\n/* harmony export */   componentsGeneric: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.componentsGeneric),\n/* harmony export */   createFunctionHandle: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.createFunctionHandle),\n/* harmony export */   cronJobs: () => (/* reexport safe */ _cron_js__WEBPACK_IMPORTED_MODULE_5__.cronJobs),\n/* harmony export */   currentSystemUdfInComponent: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.currentSystemUdfInComponent),\n/* harmony export */   defineApp: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.defineApp),\n/* harmony export */   defineComponent: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.defineComponent),\n/* harmony export */   defineSchema: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_9__.defineSchema),\n/* harmony export */   defineTable: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_9__.defineTable),\n/* harmony export */   filterApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.filterApi),\n/* harmony export */   getFunctionAddress: () => (/* reexport safe */ _components_index_js__WEBPACK_IMPORTED_MODULE_8__.getFunctionAddress),\n/* harmony export */   getFunctionName: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.getFunctionName),\n/* harmony export */   httpActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.httpActionGeneric),\n/* harmony export */   httpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.httpRouter),\n/* harmony export */   internalActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalQueryGeneric),\n/* harmony export */   makeFunctionReference: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.makeFunctionReference),\n/* harmony export */   mutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.mutationGeneric),\n/* harmony export */   paginationOptsValidator: () => (/* reexport safe */ _pagination_js__WEBPACK_IMPORTED_MODULE_2__.paginationOptsValidator),\n/* harmony export */   queryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.queryGeneric)\n/* harmony export */ });\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database.js */ \"(ssr)/./node_modules/convex/dist/esm/server/database.js\");\n/* harmony import */ var _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./impl/registration_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\");\n/* harmony import */ var _pagination_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pagination.js */ \"(ssr)/./node_modules/convex/dist/esm/server/pagination.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search_filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage.js */ \"(ssr)/./node_modules/convex/dist/esm/server/storage.js\");\n/* harmony import */ var _cron_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cron.js */ \"(ssr)/./node_modules/convex/dist/esm/server/cron.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./router.js */ \"(ssr)/./node_modules/convex/dist/esm/server/router.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/index.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/index.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/convex/dist/esm/server/schema.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQ2lCO0FBU087QUFDTDtBQUNXO0FBQ2Q7QUFDUTtBQUN1QztBQU0xRDtBQU1hO0FBQ3FDO0FBQ1Q7QUFDSDtBQUN4RCIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRhYmFzZS5qc1wiO1xuZXhwb3J0IHtcbiAgYWN0aW9uR2VuZXJpYyxcbiAgaHR0cEFjdGlvbkdlbmVyaWMsXG4gIG11dGF0aW9uR2VuZXJpYyxcbiAgcXVlcnlHZW5lcmljLFxuICBpbnRlcm5hbEFjdGlvbkdlbmVyaWMsXG4gIGludGVybmFsTXV0YXRpb25HZW5lcmljLFxuICBpbnRlcm5hbFF1ZXJ5R2VuZXJpY1xufSBmcm9tIFwiLi9pbXBsL3JlZ2lzdHJhdGlvbl9pbXBsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYWdpbmF0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0b3JhZ2UuanNcIjtcbmV4cG9ydCB7IGNyb25Kb2JzIH0gZnJvbSBcIi4vY3Jvbi5qc1wiO1xuZXhwb3J0IHsgaHR0cFJvdXRlciwgSHR0cFJvdXRlciwgUk9VVEFCTEVfSFRUUF9NRVRIT0RTIH0gZnJvbSBcIi4vcm91dGVyLmpzXCI7XG5leHBvcnQge1xuICBhbnlBcGksXG4gIGdldEZ1bmN0aW9uTmFtZSxcbiAgbWFrZUZ1bmN0aW9uUmVmZXJlbmNlLFxuICBmaWx0ZXJBcGlcbn0gZnJvbSBcIi4vYXBpLmpzXCI7XG5leHBvcnQge1xuICBkZWZpbmVBcHAsXG4gIGRlZmluZUNvbXBvbmVudCxcbiAgY29tcG9uZW50c0dlbmVyaWMsXG4gIGNyZWF0ZUZ1bmN0aW9uSGFuZGxlXG59IGZyb20gXCIuL2NvbXBvbmVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGN1cnJlbnRTeXN0ZW1VZGZJbkNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGdldEZ1bmN0aW9uQWRkcmVzcyB9IGZyb20gXCIuL2NvbXBvbmVudHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGRlZmluZVRhYmxlLCBkZWZpbmVTY2hlbWEgfSBmcm9tIFwiLi9zY2hlbWEuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index_range_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRange: () => (/* binding */ IndexRange)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass IndexRange {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isIndexRange\");\n  }\n}\n//# sourceMappingURL=index_range_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmV4cG9ydCBjbGFzcyBJbmRleFJhbmdlIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gUHJvcGVydHkgZm9yIG5vbWluYWwgdHlwZSBzdXBwb3J0LlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaXNJbmRleFJhbmdlXCIpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleF9yYW5nZV9idWlsZGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/pagination.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/pagination.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paginationOptsValidator: () => (/* binding */ paginationOptsValidator)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n\n\nconst paginationOptsValidator = _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n  numItems: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number(),\n  cursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null()),\n  endCursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null())),\n  id: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n  maximumRowsRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n  maximumBytesRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number())\n});\n//# sourceMappingURL=pagination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9wYWdpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDOEI7QUFDcEMsZ0NBQWdDLG1EQUFDO0FBQ3hDLFlBQVksbURBQUM7QUFDYixVQUFVLG1EQUFDLE9BQU8sbURBQUMsV0FBVyxtREFBQztBQUMvQixhQUFhLG1EQUFDLFVBQVUsbURBQUMsT0FBTyxtREFBQyxXQUFXLG1EQUFDO0FBQzdDLE1BQU0sbURBQUMsVUFBVSxtREFBQztBQUNsQixtQkFBbUIsbURBQUMsVUFBVSxtREFBQztBQUMvQixvQkFBb0IsbURBQUMsVUFBVSxtREFBQztBQUNoQyxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3BhZ2luYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB2IH0gZnJvbSBcIi4uL3ZhbHVlcy92YWxpZGF0b3IuanNcIjtcbmV4cG9ydCBjb25zdCBwYWdpbmF0aW9uT3B0c1ZhbGlkYXRvciA9IHYub2JqZWN0KHtcbiAgbnVtSXRlbXM6IHYubnVtYmVyKCksXG4gIGN1cnNvcjogdi51bmlvbih2LnN0cmluZygpLCB2Lm51bGwoKSksXG4gIGVuZEN1cnNvcjogdi5vcHRpb25hbCh2LnVuaW9uKHYuc3RyaW5nKCksIHYubnVsbCgpKSksXG4gIGlkOiB2Lm9wdGlvbmFsKHYubnVtYmVyKCkpLFxuICBtYXhpbXVtUm93c1JlYWQ6IHYub3B0aW9uYWwodi5udW1iZXIoKSksXG4gIG1heGltdW1CeXRlc1JlYWQ6IHYub3B0aW9uYWwodi5udW1iZXIoKSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnaW5hdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/pagination.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/router.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* binding */ HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* binding */ ROUTABLE_HTTP_METHODS),\n/* harmony export */   httpRouter: () => (/* binding */ httpRouter),\n/* harmony export */   normalizeMethod: () => (/* binding */ normalizeMethod)\n/* harmony export */ });\n/* harmony import */ var _impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./impl/syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst ROUTABLE_HTTP_METHODS = [\n  \"GET\",\n  \"POST\",\n  \"PUT\",\n  \"DELETE\",\n  \"OPTIONS\",\n  \"PATCH\"\n];\nfunction normalizeMethod(method) {\n  if (method === \"HEAD\") return \"GET\";\n  return method;\n}\nconst httpRouter = () => new HttpRouter();\nclass HttpRouter {\n  constructor() {\n    __publicField(this, \"exactRoutes\", /* @__PURE__ */ new Map());\n    __publicField(this, \"prefixRoutes\", /* @__PURE__ */ new Map());\n    __publicField(this, \"isRouter\", true);\n    /**\n     * Specify an HttpAction to be used to respond to requests\n     * for an HTTP method (e.g. \"GET\") and a path or pathPrefix.\n     *\n     * Paths must begin with a slash. Path prefixes must also end in a slash.\n     *\n     * ```js\n     * // matches `/profile` (but not `/profile/`)\n     * http.route({ path: \"/profile\", method: \"GET\", handler: getProfile})\n     *\n     * // matches `/profiles/`, `/profiles/abc`, and `/profiles/a/c/b` (but not `/profile`)\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile})\n     * ```\n     */\n    __publicField(this, \"route\", (spec) => {\n      if (!spec.handler) throw new Error(`route requires handler`);\n      if (!spec.method) throw new Error(`route requires method`);\n      const { method, handler } = spec;\n      if (!ROUTABLE_HTTP_METHODS.includes(method)) {\n        throw new Error(\n          `'${method}' is not an allowed HTTP method (like GET, POST, PUT etc.)`\n        );\n      }\n      if (\"path\" in spec) {\n        if (\"pathPrefix\" in spec) {\n          throw new Error(\n            `Invalid httpRouter route: cannot contain both 'path' and 'pathPrefix'`\n          );\n        }\n        if (!spec.path.startsWith(\"/\")) {\n          throw new Error(`path '${spec.path}' does not start with a /`);\n        }\n        const methods = this.exactRoutes.has(spec.path) ? this.exactRoutes.get(spec.path) : /* @__PURE__ */ new Map();\n        if (methods.has(method)) {\n          throw new Error(\n            `Path '${spec.path}' for method ${method} already in use`\n          );\n        }\n        methods.set(method, handler);\n        this.exactRoutes.set(spec.path, methods);\n      } else if (\"pathPrefix\" in spec) {\n        if (!spec.pathPrefix.startsWith(\"/\")) {\n          throw new Error(\n            `pathPrefix '${spec.pathPrefix}' does not start with a /`\n          );\n        }\n        if (!spec.pathPrefix.endsWith(\"/\")) {\n          throw new Error(`pathPrefix ${spec.pathPrefix} must end with a /`);\n        }\n        const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n        if (prefixes.has(spec.pathPrefix)) {\n          throw new Error(\n            `${spec.method} pathPrefix ${spec.pathPrefix} is already defined`\n          );\n        }\n        prefixes.set(spec.pathPrefix, handler);\n        this.prefixRoutes.set(method, prefixes);\n      } else {\n        throw new Error(\n          `Invalid httpRouter route entry: must contain either field 'path' or 'pathPrefix'`\n        );\n      }\n    });\n    /**\n     * Returns a list of routed HTTP actions.\n     *\n     * These are used to populate the list of routes shown in the Functions page of the Convex dashboard.\n     *\n     * @returns - an array of [path, method, endpoint] tuples.\n     */\n    __publicField(this, \"getRoutes\", () => {\n      const exactPaths = [...this.exactRoutes.keys()].sort();\n      const exact = exactPaths.flatMap(\n        (path) => [...this.exactRoutes.get(path).keys()].sort().map(\n          (method) => [path, method, this.exactRoutes.get(path).get(method)]\n        )\n      );\n      const prefixPathMethods = [...this.prefixRoutes.keys()].sort();\n      const prefixes = prefixPathMethods.flatMap(\n        (method) => [...this.prefixRoutes.get(method).keys()].sort().map(\n          (pathPrefix) => [\n            `${pathPrefix}*`,\n            method,\n            this.prefixRoutes.get(method).get(pathPrefix)\n          ]\n        )\n      );\n      return [...exact, ...prefixes];\n    });\n    /**\n     * Returns the appropriate HTTP action and its routed request path and method.\n     *\n     * The path and method returned are used for logging and metrics, and should\n     * match up with one of the routes returned by `getRoutes`.\n     *\n     * For example,\n     *\n     * ```js\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile});\n     *\n     * http.lookup(\"/profile/abc\", \"GET\") // returns [getProfile, \"GET\", \"/profile/*\"]\n     *```\n     *\n     * @returns - a tuple [{@link PublicHttpAction}, method, path] or null.\n     */\n    __publicField(this, \"lookup\", (path, method) => {\n      method = normalizeMethod(method);\n      const exactMatch = this.exactRoutes.get(path)?.get(method);\n      if (exactMatch) return [exactMatch, method, path];\n      const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n      const prefixesSorted = [...prefixes.entries()].sort(\n        ([prefixA, _a], [prefixB, _b]) => prefixB.length - prefixA.length\n      );\n      for (const [pathPrefix, endpoint] of prefixesSorted) {\n        if (path.startsWith(pathPrefix)) {\n          return [endpoint, method, `${pathPrefix}*`];\n        }\n      }\n      return null;\n    });\n    /**\n     * Given a JSON string representation of a Request object, return a Response\n     * by routing the request and running the appropriate endpoint or returning\n     * a 404 Response.\n     *\n     * @param argsStr - a JSON string representing a Request object.\n     *\n     * @returns - a Response object.\n     */\n    __publicField(this, \"runRequest\", async (argsStr, requestRoute) => {\n      const request = (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"requestFromConvexJson\", {\n        convexJson: JSON.parse(argsStr)\n      });\n      let pathname = requestRoute;\n      if (!pathname || typeof pathname !== \"string\") {\n        pathname = new URL(request.url).pathname;\n      }\n      const method = request.method;\n      const match = this.lookup(pathname, method);\n      if (!match) {\n        const response2 = new Response(`No HttpAction routed for ${pathname}`, {\n          status: 404\n        });\n        return JSON.stringify(\n          (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", { response: response2 })\n        );\n      }\n      const [endpoint, _method, _path] = match;\n      const response = await endpoint.invokeHttpAction(request);\n      return JSON.stringify(\n        (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", { response })\n      );\n    });\n  }\n}\n//# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/router.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/schema.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/schema.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaDefinition: () => (/* binding */ SchemaDefinition),\n/* harmony export */   TableDefinition: () => (/* binding */ TableDefinition),\n/* harmony export */   defineSchema: () => (/* binding */ defineSchema),\n/* harmony export */   defineTable: () => (/* binding */ defineTable)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nclass TableDefinition {\n  /**\n   * @internal\n   */\n  constructor(documentType) {\n    __publicField(this, \"indexes\");\n    __publicField(this, \"searchIndexes\");\n    __publicField(this, \"vectorIndexes\");\n    // The type of documents stored in this table.\n    __publicField(this, \"validator\");\n    this.indexes = [];\n    this.searchIndexes = [];\n    this.vectorIndexes = [];\n    this.validator = documentType;\n  }\n  /**\n   * Define an index on this table.\n   *\n   * To learn about indexes, see [Defining Indexes](https://docs.convex.dev/using/indexes).\n   *\n   * @param name - The name of the index.\n   * @param fields - The fields to index, in order. Must specify at least one\n   * field.\n   * @returns A {@link TableDefinition} with this index included.\n   */\n  index(name, fields) {\n    this.indexes.push({ indexDescriptor: name, fields });\n    return this;\n  }\n  /**\n   * Define a search index on this table.\n   *\n   * To learn about search indexes, see [Search](https://docs.convex.dev/text-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The search index configuration object.\n   * @returns A {@link TableDefinition} with this search index included.\n   */\n  searchIndex(name, indexConfig) {\n    this.searchIndexes.push({\n      indexDescriptor: name,\n      searchField: indexConfig.searchField,\n      filterFields: indexConfig.filterFields || []\n    });\n    return this;\n  }\n  /**\n   * Define a vector index on this table.\n   *\n   * To learn about vector indexes, see [Vector Search](https://docs.convex.dev/vector-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The vector index configuration object.\n   * @returns A {@link TableDefinition} with this vector index included.\n   */\n  vectorIndex(name, indexConfig) {\n    this.vectorIndexes.push({\n      indexDescriptor: name,\n      vectorField: indexConfig.vectorField,\n      dimensions: indexConfig.dimensions,\n      filterFields: indexConfig.filterFields || []\n    });\n    return this;\n  }\n  /**\n   * Work around for https://github.com/microsoft/TypeScript/issues/57035\n   */\n  self() {\n    return this;\n  }\n  /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */\n  export() {\n    return {\n      indexes: this.indexes,\n      searchIndexes: this.searchIndexes,\n      vectorIndexes: this.vectorIndexes,\n      documentType: this.validator.json\n    };\n  }\n}\nfunction defineTable(documentSchema) {\n  if ((0,_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.isValidator)(documentSchema)) {\n    return new TableDefinition(documentSchema);\n  } else {\n    return new TableDefinition(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object(documentSchema));\n  }\n}\nclass SchemaDefinition {\n  /**\n   * @internal\n   */\n  constructor(tables, options) {\n    __publicField(this, \"tables\");\n    __publicField(this, \"strictTableNameTypes\");\n    __publicField(this, \"schemaValidation\");\n    this.tables = tables;\n    this.schemaValidation = options?.schemaValidation === void 0 ? true : options.schemaValidation;\n  }\n  /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */\n  export() {\n    return JSON.stringify({\n      tables: Object.entries(this.tables).map(([tableName, definition]) => {\n        const { indexes, searchIndexes, vectorIndexes, documentType } = definition.export();\n        return {\n          tableName,\n          indexes,\n          searchIndexes,\n          vectorIndexes,\n          documentType\n        };\n      }),\n      schemaValidation: this.schemaValidation\n    });\n  }\n}\nfunction defineSchema(schema, options) {\n  return new SchemaDefinition(schema, options);\n}\nconst _systemSchema = defineSchema({\n  _scheduled_functions: defineTable({\n    name: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n    args: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.array(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.any()),\n    scheduledTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n    completedTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64()),\n    state: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"pending\") }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"inProgress\") }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"success\") }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"failed\"), error: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string() }),\n      _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({ kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"canceled\") })\n    )\n  }),\n  _storage: defineTable({\n    sha256: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n    size: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n    contentType: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string())\n  })\n});\n//# sourceMappingURL=schema.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUlnQztBQUN6QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHVCQUF1QjtBQUN4QztBQUNBO0FBQ0Esd0JBQXdCLCtCQUErQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLE1BQU0saUVBQVc7QUFDakI7QUFDQSxJQUFJO0FBQ0osK0JBQStCLG1EQUFDO0FBQ2hDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFzRDtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsbURBQUM7QUFDWCxVQUFVLG1EQUFDLE9BQU8sbURBQUM7QUFDbkIsbUJBQW1CLG1EQUFDO0FBQ3BCLG1CQUFtQixtREFBQyxVQUFVLG1EQUFDO0FBQy9CLFdBQVcsbURBQUM7QUFDWixNQUFNLG1EQUFDLFVBQVUsTUFBTSxtREFBQyxxQkFBcUI7QUFDN0MsTUFBTSxtREFBQyxVQUFVLE1BQU0sbURBQUMsd0JBQXdCO0FBQ2hELE1BQU0sbURBQUMsVUFBVSxNQUFNLG1EQUFDLHFCQUFxQjtBQUM3QyxNQUFNLG1EQUFDLFVBQVUsTUFBTSxtREFBQywyQkFBMkIsbURBQUMsV0FBVztBQUMvRCxNQUFNLG1EQUFDLFVBQVUsTUFBTSxtREFBQyxzQkFBc0I7QUFDOUM7QUFDQSxHQUFHO0FBQ0g7QUFDQSxZQUFZLG1EQUFDO0FBQ2IsVUFBVSxtREFBQztBQUNYLGlCQUFpQixtREFBQyxVQUFVLG1EQUFDO0FBQzdCLEdBQUc7QUFDSCxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3NjaGVtYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5pbXBvcnQge1xuICBpc1ZhbGlkYXRvcixcbiAgdlxufSBmcm9tIFwiLi4vdmFsdWVzL3ZhbGlkYXRvci5qc1wiO1xuZXhwb3J0IGNsYXNzIFRhYmxlRGVmaW5pdGlvbiB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKGRvY3VtZW50VHlwZSkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpbmRleGVzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZWFyY2hJbmRleGVzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ2ZWN0b3JJbmRleGVzXCIpO1xuICAgIC8vIFRoZSB0eXBlIG9mIGRvY3VtZW50cyBzdG9yZWQgaW4gdGhpcyB0YWJsZS5cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidmFsaWRhdG9yXCIpO1xuICAgIHRoaXMuaW5kZXhlcyA9IFtdO1xuICAgIHRoaXMuc2VhcmNoSW5kZXhlcyA9IFtdO1xuICAgIHRoaXMudmVjdG9ySW5kZXhlcyA9IFtdO1xuICAgIHRoaXMudmFsaWRhdG9yID0gZG9jdW1lbnRUeXBlO1xuICB9XG4gIC8qKlxuICAgKiBEZWZpbmUgYW4gaW5kZXggb24gdGhpcyB0YWJsZS5cbiAgICpcbiAgICogVG8gbGVhcm4gYWJvdXQgaW5kZXhlcywgc2VlIFtEZWZpbmluZyBJbmRleGVzXShodHRwczovL2RvY3MuY29udmV4LmRldi91c2luZy9pbmRleGVzKS5cbiAgICpcbiAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaW5kZXguXG4gICAqIEBwYXJhbSBmaWVsZHMgLSBUaGUgZmllbGRzIHRvIGluZGV4LCBpbiBvcmRlci4gTXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZVxuICAgKiBmaWVsZC5cbiAgICogQHJldHVybnMgQSB7QGxpbmsgVGFibGVEZWZpbml0aW9ufSB3aXRoIHRoaXMgaW5kZXggaW5jbHVkZWQuXG4gICAqL1xuICBpbmRleChuYW1lLCBmaWVsZHMpIHtcbiAgICB0aGlzLmluZGV4ZXMucHVzaCh7IGluZGV4RGVzY3JpcHRvcjogbmFtZSwgZmllbGRzIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBEZWZpbmUgYSBzZWFyY2ggaW5kZXggb24gdGhpcyB0YWJsZS5cbiAgICpcbiAgICogVG8gbGVhcm4gYWJvdXQgc2VhcmNoIGluZGV4ZXMsIHNlZSBbU2VhcmNoXShodHRwczovL2RvY3MuY29udmV4LmRldi90ZXh0LXNlYXJjaCkuXG4gICAqXG4gICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGluZGV4LlxuICAgKiBAcGFyYW0gaW5kZXhDb25maWcgLSBUaGUgc2VhcmNoIGluZGV4IGNvbmZpZ3VyYXRpb24gb2JqZWN0LlxuICAgKiBAcmV0dXJucyBBIHtAbGluayBUYWJsZURlZmluaXRpb259IHdpdGggdGhpcyBzZWFyY2ggaW5kZXggaW5jbHVkZWQuXG4gICAqL1xuICBzZWFyY2hJbmRleChuYW1lLCBpbmRleENvbmZpZykge1xuICAgIHRoaXMuc2VhcmNoSW5kZXhlcy5wdXNoKHtcbiAgICAgIGluZGV4RGVzY3JpcHRvcjogbmFtZSxcbiAgICAgIHNlYXJjaEZpZWxkOiBpbmRleENvbmZpZy5zZWFyY2hGaWVsZCxcbiAgICAgIGZpbHRlckZpZWxkczogaW5kZXhDb25maWcuZmlsdGVyRmllbGRzIHx8IFtdXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIERlZmluZSBhIHZlY3RvciBpbmRleCBvbiB0aGlzIHRhYmxlLlxuICAgKlxuICAgKiBUbyBsZWFybiBhYm91dCB2ZWN0b3IgaW5kZXhlcywgc2VlIFtWZWN0b3IgU2VhcmNoXShodHRwczovL2RvY3MuY29udmV4LmRldi92ZWN0b3Itc2VhcmNoKS5cbiAgICpcbiAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaW5kZXguXG4gICAqIEBwYXJhbSBpbmRleENvbmZpZyAtIFRoZSB2ZWN0b3IgaW5kZXggY29uZmlndXJhdGlvbiBvYmplY3QuXG4gICAqIEByZXR1cm5zIEEge0BsaW5rIFRhYmxlRGVmaW5pdGlvbn0gd2l0aCB0aGlzIHZlY3RvciBpbmRleCBpbmNsdWRlZC5cbiAgICovXG4gIHZlY3RvckluZGV4KG5hbWUsIGluZGV4Q29uZmlnKSB7XG4gICAgdGhpcy52ZWN0b3JJbmRleGVzLnB1c2goe1xuICAgICAgaW5kZXhEZXNjcmlwdG9yOiBuYW1lLFxuICAgICAgdmVjdG9yRmllbGQ6IGluZGV4Q29uZmlnLnZlY3RvckZpZWxkLFxuICAgICAgZGltZW5zaW9uczogaW5kZXhDb25maWcuZGltZW5zaW9ucyxcbiAgICAgIGZpbHRlckZpZWxkczogaW5kZXhDb25maWcuZmlsdGVyRmllbGRzIHx8IFtdXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIFdvcmsgYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzU3MDM1XG4gICAqL1xuICBzZWxmKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBFeHBvcnQgdGhlIGNvbnRlbnRzIG9mIHRoaXMgZGVmaW5pdGlvbi5cbiAgICpcbiAgICogVGhpcyBpcyBjYWxsZWQgaW50ZXJuYWxseSBieSB0aGUgQ29udmV4IGZyYW1ld29yay5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBleHBvcnQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGluZGV4ZXM6IHRoaXMuaW5kZXhlcyxcbiAgICAgIHNlYXJjaEluZGV4ZXM6IHRoaXMuc2VhcmNoSW5kZXhlcyxcbiAgICAgIHZlY3RvckluZGV4ZXM6IHRoaXMudmVjdG9ySW5kZXhlcyxcbiAgICAgIGRvY3VtZW50VHlwZTogdGhpcy52YWxpZGF0b3IuanNvblxuICAgIH07XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVUYWJsZShkb2N1bWVudFNjaGVtYSkge1xuICBpZiAoaXNWYWxpZGF0b3IoZG9jdW1lbnRTY2hlbWEpKSB7XG4gICAgcmV0dXJuIG5ldyBUYWJsZURlZmluaXRpb24oZG9jdW1lbnRTY2hlbWEpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgVGFibGVEZWZpbml0aW9uKHYub2JqZWN0KGRvY3VtZW50U2NoZW1hKSk7XG4gIH1cbn1cbmV4cG9ydCBjbGFzcyBTY2hlbWFEZWZpbml0aW9uIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IodGFibGVzLCBvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRhYmxlc1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RyaWN0VGFibGVOYW1lVHlwZXNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNjaGVtYVZhbGlkYXRpb25cIik7XG4gICAgdGhpcy50YWJsZXMgPSB0YWJsZXM7XG4gICAgdGhpcy5zY2hlbWFWYWxpZGF0aW9uID0gb3B0aW9ucz8uc2NoZW1hVmFsaWRhdGlvbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IG9wdGlvbnMuc2NoZW1hVmFsaWRhdGlvbjtcbiAgfVxuICAvKipcbiAgICogRXhwb3J0IHRoZSBjb250ZW50cyBvZiB0aGlzIGRlZmluaXRpb24uXG4gICAqXG4gICAqIFRoaXMgaXMgY2FsbGVkIGludGVybmFsbHkgYnkgdGhlIENvbnZleCBmcmFtZXdvcmsuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgZXhwb3J0KCkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICB0YWJsZXM6IE9iamVjdC5lbnRyaWVzKHRoaXMudGFibGVzKS5tYXAoKFt0YWJsZU5hbWUsIGRlZmluaXRpb25dKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgaW5kZXhlcywgc2VhcmNoSW5kZXhlcywgdmVjdG9ySW5kZXhlcywgZG9jdW1lbnRUeXBlIH0gPSBkZWZpbml0aW9uLmV4cG9ydCgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRhYmxlTmFtZSxcbiAgICAgICAgICBpbmRleGVzLFxuICAgICAgICAgIHNlYXJjaEluZGV4ZXMsXG4gICAgICAgICAgdmVjdG9ySW5kZXhlcyxcbiAgICAgICAgICBkb2N1bWVudFR5cGVcbiAgICAgICAgfTtcbiAgICAgIH0pLFxuICAgICAgc2NoZW1hVmFsaWRhdGlvbjogdGhpcy5zY2hlbWFWYWxpZGF0aW9uXG4gICAgfSk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVTY2hlbWEoc2NoZW1hLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgU2NoZW1hRGVmaW5pdGlvbihzY2hlbWEsIG9wdGlvbnMpO1xufVxuY29uc3QgX3N5c3RlbVNjaGVtYSA9IGRlZmluZVNjaGVtYSh7XG4gIF9zY2hlZHVsZWRfZnVuY3Rpb25zOiBkZWZpbmVUYWJsZSh7XG4gICAgbmFtZTogdi5zdHJpbmcoKSxcbiAgICBhcmdzOiB2LmFycmF5KHYuYW55KCkpLFxuICAgIHNjaGVkdWxlZFRpbWU6IHYuZmxvYXQ2NCgpLFxuICAgIGNvbXBsZXRlZFRpbWU6IHYub3B0aW9uYWwodi5mbG9hdDY0KCkpLFxuICAgIHN0YXRlOiB2LnVuaW9uKFxuICAgICAgdi5vYmplY3QoeyBraW5kOiB2LmxpdGVyYWwoXCJwZW5kaW5nXCIpIH0pLFxuICAgICAgdi5vYmplY3QoeyBraW5kOiB2LmxpdGVyYWwoXCJpblByb2dyZXNzXCIpIH0pLFxuICAgICAgdi5vYmplY3QoeyBraW5kOiB2LmxpdGVyYWwoXCJzdWNjZXNzXCIpIH0pLFxuICAgICAgdi5vYmplY3QoeyBraW5kOiB2LmxpdGVyYWwoXCJmYWlsZWRcIiksIGVycm9yOiB2LnN0cmluZygpIH0pLFxuICAgICAgdi5vYmplY3QoeyBraW5kOiB2LmxpdGVyYWwoXCJjYW5jZWxlZFwiKSB9KVxuICAgIClcbiAgfSksXG4gIF9zdG9yYWdlOiBkZWZpbmVUYWJsZSh7XG4gICAgc2hhMjU2OiB2LnN0cmluZygpLFxuICAgIHNpemU6IHYuZmxvYXQ2NCgpLFxuICAgIGNvbnRlbnRUeXBlOiB2Lm9wdGlvbmFsKHYuc3RyaW5nKCkpXG4gIH0pXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVtYS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/search_filter_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilter: () => (/* binding */ SearchFilter)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass SearchFilter {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isSearchFilter\");\n  }\n}\n//# sourceMappingURL=search_filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ2I7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3NlYXJjaF9maWx0ZXJfYnVpbGRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5leHBvcnQgY2xhc3MgU2VhcmNoRmlsdGVyIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gUHJvcGVydHkgZm9yIG5vbWluYWwgdHlwZSBzdXBwb3J0LlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaXNTZWFyY2hGaWx0ZXJcIik7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaF9maWx0ZXJfYnVpbGRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/storage.js":
/*!********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/storage.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmFnZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/vector_search.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/vector_search.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterExpression: () => (/* binding */ FilterExpression)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass FilterExpression {\n  /**\n   * @internal\n   */\n  constructor() {\n    // Property for nominal type support.\n    __publicField(this, \"_isExpression\");\n    // Property to distinguish expressions by the type they resolve to.\n    __publicField(this, \"_value\");\n  }\n}\n//# sourceMappingURL=vector_search.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci92ZWN0b3Jfc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvRGVza3RvcC9DaGVmIENWIEJ1aWxkZXIvbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvdmVjdG9yX3NlYXJjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5leHBvcnQgY2xhc3MgRmlsdGVyRXhwcmVzc2lvbiB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIC8vIFByb3BlcnR5IGZvciBub21pbmFsIHR5cGUgc3VwcG9ydC5cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX2lzRXhwcmVzc2lvblwiKTtcbiAgICAvLyBQcm9wZXJ0eSB0byBkaXN0aW5ndWlzaCBleHByZXNzaW9ucyBieSB0aGUgdHlwZSB0aGV5IHJlc29sdmUgdG8uXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl92YWx1ZVwiKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yX3NlYXJjaC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/vector_search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/base64.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   fromByteArray: () => (/* binding */ fromByteArray),\n/* harmony export */   toByteArray: () => (/* binding */ toByteArray)\n/* harmony export */ });\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = Uint8Array;\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\nfunction getLens(b64) {\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  }\n  var validLen = b64.indexOf(\"=\");\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(_b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0;\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 255;\n    arr[curByte++] = tmp >> 8 & 255;\n    arr[curByte++] = tmp & 255;\n  }\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 255;\n  }\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 255;\n    arr[curByte++] = tmp & 255;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3;\n  var parts = [];\n  var maxChunkLength = 16383;\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(\n      encodeChunk(\n        uint8,\n        i,\n        i + maxChunkLength > len2 ? len2 : i + maxChunkLength\n      )\n    );\n  }\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\"\n    );\n  }\n  return parts.join(\"\");\n}\n//# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2Jhc2U2NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBsb29rdXAgPSBbXTtcbnZhciByZXZMb29rdXAgPSBbXTtcbnZhciBBcnIgPSBVaW50OEFycmF5O1xudmFyIGNvZGUgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIjtcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV07XG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaTtcbn1cbnJldkxvb2t1cFtcIi1cIi5jaGFyQ29kZUF0KDApXSA9IDYyO1xucmV2TG9va3VwW1wiX1wiLmNoYXJDb2RlQXQoMCldID0gNjM7XG5mdW5jdGlvbiBnZXRMZW5zKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aDtcbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNFwiKTtcbiAgfVxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZihcIj1cIik7XG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuO1xuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gdmFsaWRMZW4gPT09IGxlbiA/IDAgOiA0IC0gdmFsaWRMZW4gJSA0O1xuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVMZW5ndGgoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpO1xuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdO1xuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXTtcbiAgcmV0dXJuICh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCAtIHBsYWNlSG9sZGVyc0xlbjtcbn1cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoKF9iNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCAtIHBsYWNlSG9sZGVyc0xlbjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVBcnJheShiNjQpIHtcbiAgdmFyIHRtcDtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NCk7XG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF07XG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdO1xuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKTtcbiAgdmFyIGN1ckJ5dGUgPSAwO1xuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMCA/IHZhbGlkTGVuIC0gNCA6IHZhbGlkTGVuO1xuICB2YXIgaTtcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID0gcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyIHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPDwgNiB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldO1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wID4+IDE2ICYgMjU1O1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wID4+IDggJiAyNTU7XG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAyNTU7XG4gIH1cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMiB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQ7XG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAyNTU7XG4gIH1cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTAgfCByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0IHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMjtcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCA+PiA4ICYgMjU1O1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMjU1O1xuICB9XG4gIHJldHVybiBhcnI7XG59XG5mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgNjNdICsgbG9va3VwW251bSA+PiAxMiAmIDYzXSArIGxvb2t1cFtudW0gPj4gNiAmIDYzXSArIGxvb2t1cFtudW0gJiA2M107XG59XG5mdW5jdGlvbiBlbmNvZGVDaHVuayh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wO1xuICB2YXIgb3V0cHV0ID0gW107XG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSAzKSB7XG4gICAgdG1wID0gKHVpbnQ4W2ldIDw8IDE2ICYgMTY3MTE2ODApICsgKHVpbnQ4W2kgKyAxXSA8PCA4ICYgNjUyODApICsgKHVpbnQ4W2kgKyAyXSAmIDI1NSk7XG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpO1xuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbihcIlwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQnl0ZUFycmF5KHVpbnQ4KSB7XG4gIHZhciB0bXA7XG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGg7XG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMztcbiAgdmFyIHBhcnRzID0gW107XG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzO1xuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XG4gICAgcGFydHMucHVzaChcbiAgICAgIGVuY29kZUNodW5rKFxuICAgICAgICB1aW50OCxcbiAgICAgICAgaSxcbiAgICAgICAgaSArIG1heENodW5rTGVuZ3RoID4gbGVuMiA/IGxlbjIgOiBpICsgbWF4Q2h1bmtMZW5ndGhcbiAgICAgIClcbiAgICApO1xuICB9XG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV07XG4gICAgcGFydHMucHVzaChsb29rdXBbdG1wID4+IDJdICsgbG9va3VwW3RtcCA8PCA0ICYgNjNdICsgXCI9PVwiKTtcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV07XG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICsgbG9va3VwW3RtcCA+PiA0ICYgNjNdICsgbG9va3VwW3RtcCA8PCAyICYgNjNdICsgXCI9XCJcbiAgICApO1xuICB9XG4gIHJldHVybiBwYXJ0cy5qb2luKFwiXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/compare.js":
/*!********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/compare.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareValues: () => (/* binding */ compareValues)\n/* harmony export */ });\n/* harmony import */ var _compare_utf8_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare_utf8.js */ \"(ssr)/./node_modules/convex/dist/esm/values/compare_utf8.js\");\n\n\nfunction compareValues(k1, k2) {\n  return compareAsTuples(makeComparable(k1), makeComparable(k2));\n}\nfunction compareAsTuples(a, b) {\n  if (a[0] === b[0]) {\n    return compareSameTypeValues(a[1], b[1]);\n  } else if (a[0] < b[0]) {\n    return -1;\n  }\n  return 1;\n}\nfunction compareSameTypeValues(v1, v2) {\n  if (v1 === void 0 || v1 === null) {\n    return 0;\n  }\n  if (typeof v1 === \"number\") {\n    if (typeof v2 !== \"number\") {\n      throw new Error(`Unexpected type ${v2}`);\n    }\n    return compareNumbers(v1, v2);\n  }\n  if (typeof v1 === \"string\") {\n    if (typeof v2 !== \"string\") {\n      throw new Error(`Unexpected type ${v2}`);\n    }\n    return (0,_compare_utf8_js__WEBPACK_IMPORTED_MODULE_0__.compareUTF8)(v1, v2);\n  }\n  if (typeof v1 === \"bigint\" || typeof v1 === \"boolean\" || typeof v1 === \"string\") {\n    return v1 < v2 ? -1 : v1 === v2 ? 0 : 1;\n  }\n  if (!Array.isArray(v1) || !Array.isArray(v2)) {\n    throw new Error(`Unexpected type ${v1}`);\n  }\n  for (let i = 0; i < v1.length && i < v2.length; i++) {\n    const cmp = compareAsTuples(v1[i], v2[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (v1.length < v2.length) {\n    return -1;\n  }\n  if (v1.length > v2.length) {\n    return 1;\n  }\n  return 0;\n}\nfunction compareNumbers(v1, v2) {\n  if (isNaN(v1) || isNaN(v2)) {\n    const buffer1 = new ArrayBuffer(8);\n    const buffer2 = new ArrayBuffer(8);\n    new DataView(buffer1).setFloat64(\n      0,\n      v1,\n      /* little-endian */\n      true\n    );\n    new DataView(buffer2).setFloat64(\n      0,\n      v2,\n      /* little-endian */\n      true\n    );\n    const v1Bits = BigInt(\n      new DataView(buffer1).getBigInt64(\n        0,\n        /* little-endian */\n        true\n      )\n    );\n    const v2Bits = BigInt(\n      new DataView(buffer2).getBigInt64(\n        0,\n        /* little-endian */\n        true\n      )\n    );\n    const v1Sign = (v1Bits & 0x8000000000000000n) !== 0n;\n    const v2Sign = (v2Bits & 0x8000000000000000n) !== 0n;\n    if (isNaN(v1) !== isNaN(v2)) {\n      if (isNaN(v1)) {\n        return v1Sign ? -1 : 1;\n      }\n      return v2Sign ? 1 : -1;\n    }\n    if (v1Sign !== v2Sign) {\n      return v1Sign ? -1 : 1;\n    }\n    return v1Bits < v2Bits ? -1 : v1Bits === v2Bits ? 0 : 1;\n  }\n  if (Object.is(v1, v2)) {\n    return 0;\n  }\n  if (Object.is(v1, -0)) {\n    return Object.is(v2, 0) ? -1 : -Math.sign(v2);\n  }\n  if (Object.is(v2, -0)) {\n    return Object.is(v1, 0) ? 1 : Math.sign(v1);\n  }\n  return v1 < v2 ? -1 : 1;\n}\nfunction makeComparable(v) {\n  if (v === void 0) {\n    return [0, void 0];\n  }\n  if (v === null) {\n    return [1, null];\n  }\n  if (typeof v === \"bigint\") {\n    return [2, v];\n  }\n  if (typeof v === \"number\") {\n    return [3, v];\n  }\n  if (typeof v === \"boolean\") {\n    return [4, v];\n  }\n  if (typeof v === \"string\") {\n    return [5, v];\n  }\n  if (v instanceof ArrayBuffer) {\n    return [6, Array.from(new Uint8Array(v)).map(makeComparable)];\n  }\n  if (Array.isArray(v)) {\n    return [7, v.map(makeComparable)];\n  }\n  const keys = Object.keys(v).sort();\n  const pojo = keys.map((k) => [k, v[k]]);\n  return [8, pojo.map(makeComparable)];\n}\n//# sourceMappingURL=compare.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDbUM7QUFDekM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLEdBQUc7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxHQUFHO0FBQzVDO0FBQ0EsV0FBVyw2REFBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLEdBQUc7QUFDMUM7QUFDQSxrQkFBa0IsZ0NBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29tcGFyZVVURjggfSBmcm9tIFwiLi9jb21wYXJlX3V0ZjguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlVmFsdWVzKGsxLCBrMikge1xuICByZXR1cm4gY29tcGFyZUFzVHVwbGVzKG1ha2VDb21wYXJhYmxlKGsxKSwgbWFrZUNvbXBhcmFibGUoazIpKTtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVBc1R1cGxlcyhhLCBiKSB7XG4gIGlmIChhWzBdID09PSBiWzBdKSB7XG4gICAgcmV0dXJuIGNvbXBhcmVTYW1lVHlwZVZhbHVlcyhhWzFdLCBiWzFdKTtcbiAgfSBlbHNlIGlmIChhWzBdIDwgYlswXSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gMTtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVTYW1lVHlwZVZhbHVlcyh2MSwgdjIpIHtcbiAgaWYgKHYxID09PSB2b2lkIDAgfHwgdjEgPT09IG51bGwpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBpZiAodHlwZW9mIHYxID09PSBcIm51bWJlclwiKSB7XG4gICAgaWYgKHR5cGVvZiB2MiAhPT0gXCJudW1iZXJcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHR5cGUgJHt2Mn1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVOdW1iZXJzKHYxLCB2Mik7XG4gIH1cbiAgaWYgKHR5cGVvZiB2MSA9PT0gXCJzdHJpbmdcIikge1xuICAgIGlmICh0eXBlb2YgdjIgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCB0eXBlICR7djJ9YCk7XG4gICAgfVxuICAgIHJldHVybiBjb21wYXJlVVRGOCh2MSwgdjIpO1xuICB9XG4gIGlmICh0eXBlb2YgdjEgPT09IFwiYmlnaW50XCIgfHwgdHlwZW9mIHYxID09PSBcImJvb2xlYW5cIiB8fCB0eXBlb2YgdjEgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gdjEgPCB2MiA/IC0xIDogdjEgPT09IHYyID8gMCA6IDE7XG4gIH1cbiAgaWYgKCFBcnJheS5pc0FycmF5KHYxKSB8fCAhQXJyYXkuaXNBcnJheSh2MikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdHlwZSAke3YxfWApO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdjEubGVuZ3RoICYmIGkgPCB2Mi5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNtcCA9IGNvbXBhcmVBc1R1cGxlcyh2MVtpXSwgdjJbaV0pO1xuICAgIGlmIChjbXAgIT09IDApIHtcbiAgICAgIHJldHVybiBjbXA7XG4gICAgfVxuICB9XG4gIGlmICh2MS5sZW5ndGggPCB2Mi5sZW5ndGgpIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cbiAgaWYgKHYxLmxlbmd0aCA+IHYyLmxlbmd0aCkge1xuICAgIHJldHVybiAxO1xuICB9XG4gIHJldHVybiAwO1xufVxuZnVuY3Rpb24gY29tcGFyZU51bWJlcnModjEsIHYyKSB7XG4gIGlmIChpc05hTih2MSkgfHwgaXNOYU4odjIpKSB7XG4gICAgY29uc3QgYnVmZmVyMSA9IG5ldyBBcnJheUJ1ZmZlcig4KTtcbiAgICBjb25zdCBidWZmZXIyID0gbmV3IEFycmF5QnVmZmVyKDgpO1xuICAgIG5ldyBEYXRhVmlldyhidWZmZXIxKS5zZXRGbG9hdDY0KFxuICAgICAgMCxcbiAgICAgIHYxLFxuICAgICAgLyogbGl0dGxlLWVuZGlhbiAqL1xuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgbmV3IERhdGFWaWV3KGJ1ZmZlcjIpLnNldEZsb2F0NjQoXG4gICAgICAwLFxuICAgICAgdjIsXG4gICAgICAvKiBsaXR0bGUtZW5kaWFuICovXG4gICAgICB0cnVlXG4gICAgKTtcbiAgICBjb25zdCB2MUJpdHMgPSBCaWdJbnQoXG4gICAgICBuZXcgRGF0YVZpZXcoYnVmZmVyMSkuZ2V0QmlnSW50NjQoXG4gICAgICAgIDAsXG4gICAgICAgIC8qIGxpdHRsZS1lbmRpYW4gKi9cbiAgICAgICAgdHJ1ZVxuICAgICAgKVxuICAgICk7XG4gICAgY29uc3QgdjJCaXRzID0gQmlnSW50KFxuICAgICAgbmV3IERhdGFWaWV3KGJ1ZmZlcjIpLmdldEJpZ0ludDY0KFxuICAgICAgICAwLFxuICAgICAgICAvKiBsaXR0bGUtZW5kaWFuICovXG4gICAgICAgIHRydWVcbiAgICAgIClcbiAgICApO1xuICAgIGNvbnN0IHYxU2lnbiA9ICh2MUJpdHMgJiAweDgwMDAwMDAwMDAwMDAwMDBuKSAhPT0gMG47XG4gICAgY29uc3QgdjJTaWduID0gKHYyQml0cyAmIDB4ODAwMDAwMDAwMDAwMDAwMG4pICE9PSAwbjtcbiAgICBpZiAoaXNOYU4odjEpICE9PSBpc05hTih2MikpIHtcbiAgICAgIGlmIChpc05hTih2MSkpIHtcbiAgICAgICAgcmV0dXJuIHYxU2lnbiA/IC0xIDogMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2MlNpZ24gPyAxIDogLTE7XG4gICAgfVxuICAgIGlmICh2MVNpZ24gIT09IHYyU2lnbikge1xuICAgICAgcmV0dXJuIHYxU2lnbiA/IC0xIDogMTtcbiAgICB9XG4gICAgcmV0dXJuIHYxQml0cyA8IHYyQml0cyA/IC0xIDogdjFCaXRzID09PSB2MkJpdHMgPyAwIDogMTtcbiAgfVxuICBpZiAoT2JqZWN0LmlzKHYxLCB2MikpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBpZiAoT2JqZWN0LmlzKHYxLCAtMCkpIHtcbiAgICByZXR1cm4gT2JqZWN0LmlzKHYyLCAwKSA/IC0xIDogLU1hdGguc2lnbih2Mik7XG4gIH1cbiAgaWYgKE9iamVjdC5pcyh2MiwgLTApKSB7XG4gICAgcmV0dXJuIE9iamVjdC5pcyh2MSwgMCkgPyAxIDogTWF0aC5zaWduKHYxKTtcbiAgfVxuICByZXR1cm4gdjEgPCB2MiA/IC0xIDogMTtcbn1cbmZ1bmN0aW9uIG1ha2VDb21wYXJhYmxlKHYpIHtcbiAgaWYgKHYgPT09IHZvaWQgMCkge1xuICAgIHJldHVybiBbMCwgdm9pZCAwXTtcbiAgfVxuICBpZiAodiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBbMSwgbnVsbF07XG4gIH1cbiAgaWYgKHR5cGVvZiB2ID09PSBcImJpZ2ludFwiKSB7XG4gICAgcmV0dXJuIFsyLCB2XTtcbiAgfVxuICBpZiAodHlwZW9mIHYgPT09IFwibnVtYmVyXCIpIHtcbiAgICByZXR1cm4gWzMsIHZdO1xuICB9XG4gIGlmICh0eXBlb2YgdiA9PT0gXCJib29sZWFuXCIpIHtcbiAgICByZXR1cm4gWzQsIHZdO1xuICB9XG4gIGlmICh0eXBlb2YgdiA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBbNSwgdl07XG4gIH1cbiAgaWYgKHYgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBbNiwgQXJyYXkuZnJvbShuZXcgVWludDhBcnJheSh2KSkubWFwKG1ha2VDb21wYXJhYmxlKV07XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodikpIHtcbiAgICByZXR1cm4gWzcsIHYubWFwKG1ha2VDb21wYXJhYmxlKV07XG4gIH1cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHYpLnNvcnQoKTtcbiAgY29uc3QgcG9qbyA9IGtleXMubWFwKChrKSA9PiBbaywgdltrXV0pO1xuICByZXR1cm4gWzgsIHBvam8ubWFwKG1ha2VDb21wYXJhYmxlKV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wYXJlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/compare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/compare_utf8.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/compare_utf8.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareUTF8: () => (/* binding */ compareUTF8),\n/* harmony export */   greaterThan: () => (/* binding */ greaterThan),\n/* harmony export */   greaterThanEq: () => (/* binding */ greaterThanEq),\n/* harmony export */   lessThan: () => (/* binding */ lessThan),\n/* harmony export */   lessThanEq: () => (/* binding */ lessThanEq),\n/* harmony export */   utf16LengthForCodePoint: () => (/* binding */ utf16LengthForCodePoint)\n/* harmony export */ });\n\nfunction compareUTF8(a, b) {\n  const aLength = a.length;\n  const bLength = b.length;\n  const length = Math.min(aLength, bLength);\n  for (let i = 0; i < length; ) {\n    const aCodePoint = a.codePointAt(i);\n    const bCodePoint = b.codePointAt(i);\n    if (aCodePoint !== bCodePoint) {\n      if (aCodePoint < 128 && bCodePoint < 128) {\n        return aCodePoint - bCodePoint;\n      }\n      const aLength2 = utf8Bytes(aCodePoint, aBytes);\n      const bLength2 = utf8Bytes(bCodePoint, bBytes);\n      return compareArrays(aBytes, aLength2, bBytes, bLength2);\n    }\n    i += utf16LengthForCodePoint(aCodePoint);\n  }\n  return aLength - bLength;\n}\nfunction compareArrays(a, aLength, b, bLength) {\n  const length = Math.min(aLength, bLength);\n  for (let i = 0; i < length; i++) {\n    const aValue = a[i];\n    const bValue = b[i];\n    if (aValue !== bValue) {\n      return aValue - bValue;\n    }\n  }\n  return aLength - bLength;\n}\nfunction utf16LengthForCodePoint(aCodePoint) {\n  return aCodePoint > 65535 ? 2 : 1;\n}\nconst arr = () => Array.from({ length: 4 }, () => 0);\nconst aBytes = arr();\nconst bBytes = arr();\nfunction utf8Bytes(codePoint, bytes) {\n  if (codePoint < 128) {\n    bytes[0] = codePoint;\n    return 1;\n  }\n  let count;\n  let offset;\n  if (codePoint <= 2047) {\n    count = 1;\n    offset = 192;\n  } else if (codePoint <= 65535) {\n    count = 2;\n    offset = 224;\n  } else if (codePoint <= 1114111) {\n    count = 3;\n    offset = 240;\n  } else {\n    throw new Error(\"Invalid code point\");\n  }\n  bytes[0] = (codePoint >> 6 * count) + offset;\n  let i = 1;\n  for (; count > 0; count--) {\n    const temp = codePoint >> 6 * (count - 1);\n    bytes[i++] = 128 | temp & 63;\n  }\n  return i;\n}\nfunction greaterThan(a, b) {\n  return compareUTF8(a, b) > 0;\n}\nfunction greaterThanEq(a, b) {\n  return compareUTF8(a, b) >= 0;\n}\nfunction lessThan(a, b) {\n  return compareUTF8(a, b) < 0;\n}\nfunction lessThanEq(a, b) {\n  return compareUTF8(a, b) <= 0;\n}\n//# sourceMappingURL=compare_utf8.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlX3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDTjtBQUNQO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLCtCQUErQixXQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9jb21wYXJlX3V0ZjguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVVURjgoYSwgYikge1xuICBjb25zdCBhTGVuZ3RoID0gYS5sZW5ndGg7XG4gIGNvbnN0IGJMZW5ndGggPSBiLmxlbmd0aDtcbiAgY29uc3QgbGVuZ3RoID0gTWF0aC5taW4oYUxlbmd0aCwgYkxlbmd0aCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyApIHtcbiAgICBjb25zdCBhQ29kZVBvaW50ID0gYS5jb2RlUG9pbnRBdChpKTtcbiAgICBjb25zdCBiQ29kZVBvaW50ID0gYi5jb2RlUG9pbnRBdChpKTtcbiAgICBpZiAoYUNvZGVQb2ludCAhPT0gYkNvZGVQb2ludCkge1xuICAgICAgaWYgKGFDb2RlUG9pbnQgPCAxMjggJiYgYkNvZGVQb2ludCA8IDEyOCkge1xuICAgICAgICByZXR1cm4gYUNvZGVQb2ludCAtIGJDb2RlUG9pbnQ7XG4gICAgICB9XG4gICAgICBjb25zdCBhTGVuZ3RoMiA9IHV0ZjhCeXRlcyhhQ29kZVBvaW50LCBhQnl0ZXMpO1xuICAgICAgY29uc3QgYkxlbmd0aDIgPSB1dGY4Qnl0ZXMoYkNvZGVQb2ludCwgYkJ5dGVzKTtcbiAgICAgIHJldHVybiBjb21wYXJlQXJyYXlzKGFCeXRlcywgYUxlbmd0aDIsIGJCeXRlcywgYkxlbmd0aDIpO1xuICAgIH1cbiAgICBpICs9IHV0ZjE2TGVuZ3RoRm9yQ29kZVBvaW50KGFDb2RlUG9pbnQpO1xuICB9XG4gIHJldHVybiBhTGVuZ3RoIC0gYkxlbmd0aDtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVBcnJheXMoYSwgYUxlbmd0aCwgYiwgYkxlbmd0aCkge1xuICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihhTGVuZ3RoLCBiTGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGFWYWx1ZSA9IGFbaV07XG4gICAgY29uc3QgYlZhbHVlID0gYltpXTtcbiAgICBpZiAoYVZhbHVlICE9PSBiVmFsdWUpIHtcbiAgICAgIHJldHVybiBhVmFsdWUgLSBiVmFsdWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBhTGVuZ3RoIC0gYkxlbmd0aDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1dGYxNkxlbmd0aEZvckNvZGVQb2ludChhQ29kZVBvaW50KSB7XG4gIHJldHVybiBhQ29kZVBvaW50ID4gNjU1MzUgPyAyIDogMTtcbn1cbmNvbnN0IGFyciA9ICgpID0+IEFycmF5LmZyb20oeyBsZW5ndGg6IDQgfSwgKCkgPT4gMCk7XG5jb25zdCBhQnl0ZXMgPSBhcnIoKTtcbmNvbnN0IGJCeXRlcyA9IGFycigpO1xuZnVuY3Rpb24gdXRmOEJ5dGVzKGNvZGVQb2ludCwgYnl0ZXMpIHtcbiAgaWYgKGNvZGVQb2ludCA8IDEyOCkge1xuICAgIGJ5dGVzWzBdID0gY29kZVBvaW50O1xuICAgIHJldHVybiAxO1xuICB9XG4gIGxldCBjb3VudDtcbiAgbGV0IG9mZnNldDtcbiAgaWYgKGNvZGVQb2ludCA8PSAyMDQ3KSB7XG4gICAgY291bnQgPSAxO1xuICAgIG9mZnNldCA9IDE5MjtcbiAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPD0gNjU1MzUpIHtcbiAgICBjb3VudCA9IDI7XG4gICAgb2Zmc2V0ID0gMjI0O1xuICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8PSAxMTE0MTExKSB7XG4gICAgY291bnQgPSAzO1xuICAgIG9mZnNldCA9IDI0MDtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvZGUgcG9pbnRcIik7XG4gIH1cbiAgYnl0ZXNbMF0gPSAoY29kZVBvaW50ID4+IDYgKiBjb3VudCkgKyBvZmZzZXQ7XG4gIGxldCBpID0gMTtcbiAgZm9yICg7IGNvdW50ID4gMDsgY291bnQtLSkge1xuICAgIGNvbnN0IHRlbXAgPSBjb2RlUG9pbnQgPj4gNiAqIChjb3VudCAtIDEpO1xuICAgIGJ5dGVzW2krK10gPSAxMjggfCB0ZW1wICYgNjM7XG4gIH1cbiAgcmV0dXJuIGk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ3JlYXRlclRoYW4oYSwgYikge1xuICByZXR1cm4gY29tcGFyZVVURjgoYSwgYikgPiAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdyZWF0ZXJUaGFuRXEoYSwgYikge1xuICByZXR1cm4gY29tcGFyZVVURjgoYSwgYikgPj0gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsZXNzVGhhbihhLCBiKSB7XG4gIHJldHVybiBjb21wYXJlVVRGOChhLCBiKSA8IDA7XG59XG5leHBvcnQgZnVuY3Rpb24gbGVzc1RoYW5FcShhLCBiKSB7XG4gIHJldHVybiBjb21wYXJlVVRGOChhLCBiKSA8PSAwO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcGFyZV91dGY4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/compare_utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexError: () => (/* binding */ ConvexError)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar _a, _b;\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\nclass ConvexError extends (_b = Error, _a = IDENTIFYING_FIELD, _b) {\n  constructor(data) {\n    super(typeof data === \"string\" ? data : (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.stringifyValueForError)(data));\n    __publicField(this, \"name\", \"ConvexError\");\n    __publicField(this, \"data\");\n    __publicField(this, _a, true);\n    this.data = data;\n  }\n}\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBO0FBQ29EO0FBQ3BEO0FBQ087QUFDUDtBQUNBLDRDQUE0QyxpRUFBc0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG52YXIgX2EsIF9iO1xuaW1wb3J0IHsgc3RyaW5naWZ5VmFsdWVGb3JFcnJvciB9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5jb25zdCBJREVOVElGWUlOR19GSUVMRCA9IFN5bWJvbC5mb3IoXCJDb252ZXhFcnJvclwiKTtcbmV4cG9ydCBjbGFzcyBDb252ZXhFcnJvciBleHRlbmRzIChfYiA9IEVycm9yLCBfYSA9IElERU5USUZZSU5HX0ZJRUxELCBfYikge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgc3VwZXIodHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgPyBkYXRhIDogc3RyaW5naWZ5VmFsdWVGb3JFcnJvcihkYXRhKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm5hbWVcIiwgXCJDb252ZXhFcnJvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZGF0YVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIF9hLCB0cnVlKTtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   ConvexError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError),\n/* harmony export */   asObjectValidator: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.asObjectValidator),\n/* harmony export */   compareValues: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_4__.compareValues),\n/* harmony export */   convexToJson: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson),\n/* harmony export */   jsonToConvex: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex),\n/* harmony export */   v: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compare.js */ \"(ssr)/./node_modules/convex/dist/esm/values/compare.js\");\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBYTtBQUMyQztBQUNGO0FBQ2hCO0FBQ3BCO0FBQ1U7QUFDaUI7QUFDN0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZWFuZ2lsL0Rlc2t0b3AvQ2hlZiBDViBCdWlsZGVyL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IHsgY29udmV4VG9Kc29uLCBqc29uVG9Db252ZXggfSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuZXhwb3J0IHsgdiwgYXNPYmplY3RWYWxpZGF0b3IgfSBmcm9tIFwiLi92YWxpZGF0b3IuanNcIjtcbmltcG9ydCAqIGFzIEJhc2U2NCBmcm9tIFwiLi9iYXNlNjQuanNcIjtcbmV4cG9ydCB7IEJhc2U2NCB9O1xuZXhwb3J0ICogZnJvbSBcIi4vZXJyb3JzLmpzXCI7XG5leHBvcnQgeyBjb21wYXJlVmFsdWVzIH0gZnJvbSBcIi4vY29tcGFyZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/validator.js":
/*!**********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validator.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asObjectValidator: () => (/* binding */ asObjectValidator),\n/* harmony export */   isValidator: () => (/* binding */ isValidator),\n/* harmony export */   v: () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var _validators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validators.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validators.js\");\n\n\nfunction isValidator(v2) {\n  return !!v2.isConvexValidator;\n}\nfunction asObjectValidator(obj) {\n  if (isValidator(obj)) {\n    return obj;\n  } else {\n    return v.object(obj);\n  }\n}\nconst v = {\n  /**\n   * Validates that the value corresponds to an ID of a document in given table.\n   * @param tableName The name of the table.\n   */\n  id: (tableName) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VId({\n      isOptional: \"required\",\n      tableName\n    });\n  },\n  /**\n   * Validates that the value is of type Null.\n   */\n  null: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VNull({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Float64 (Number in JS).\n   *\n   * Alias for `v.float64()`\n   */\n  number: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VFloat64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Float64 (Number in JS).\n   */\n  float64: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VFloat64({ isOptional: \"required\" });\n  },\n  /**\n   * @deprecated Use `v.int64()` instead\n   */\n  bigint: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VInt64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Int64 (BigInt in JS).\n   */\n  int64: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VInt64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of type Boolean.\n   */\n  boolean: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VBoolean({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of type String.\n   */\n  string: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VString({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Bytes (constructed in JS via `ArrayBuffer`).\n   */\n  bytes: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VBytes({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is equal to the given literal value.\n   * @param literal The literal value to compare against.\n   */\n  literal: (literal) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VLiteral({ isOptional: \"required\", value: literal });\n  },\n  /**\n   * Validates that the value is an Array of the given element type.\n   * @param element The validator for the elements of the array.\n   */\n  array: (element) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VArray({ isOptional: \"required\", element });\n  },\n  /**\n   * Validates that the value is an Object with the given properties.\n   * @param fields An object specifying the validator for each property.\n   */\n  object: (fields) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VObject({ isOptional: \"required\", fields });\n  },\n  /**\n   * Validates that the value is a Record with keys and values that match the given types.\n   * @param keys The validator for the keys of the record. This cannot contain string literals.\n   * @param values The validator for the values of the record.\n   */\n  record: (keys, values) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VRecord({\n      isOptional: \"required\",\n      key: keys,\n      value: values\n    });\n  },\n  /**\n   * Validates that the value matches one of the given validators.\n   * @param members The validators to match against.\n   */\n  union: (...members) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VUnion({\n      isOptional: \"required\",\n      members\n    });\n  },\n  /**\n   * Does not validate the value.\n   */\n  any: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VAny({ isOptional: \"required\" });\n  },\n  /**\n   * Allows not specifying a value for a property in an Object.\n   * @param value The property value validator to make optional.\n   *\n   * ```typescript\n   * const objectWithOptionalFields = v.object({\n   *   requiredField: v.string(),\n   *   optionalField: v.optional(v.string()),\n   * });\n   * ```\n   */\n  optional: (value) => {\n    return value.asOptional();\n  }\n};\n//# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhO0FBZVk7QUFDbEI7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0NBQUc7QUFDbEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFLLEdBQUcsd0JBQXdCO0FBQy9DLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9EQUFRLEdBQUcsd0JBQXdCO0FBQ2xELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVEsR0FBRyx3QkFBd0I7QUFDbEQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrREFBTSxHQUFHLHdCQUF3QjtBQUNoRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsd0JBQXdCO0FBQ2hELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVEsR0FBRyx3QkFBd0I7QUFDbEQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtREFBTyxHQUFHLHdCQUF3QjtBQUNqRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsd0JBQXdCO0FBQ2hELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvREFBUSxHQUFHLHdDQUF3QztBQUNsRSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU0sR0FBRyxpQ0FBaUM7QUFDekQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1EQUFPLEdBQUcsZ0NBQWdDO0FBQ3pELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1EQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU07QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFJLEdBQUcsd0JBQXdCO0FBQzlDLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc2VhbmdpbC9EZXNrdG9wL0NoZWYgQ1YgQnVpbGRlci9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQge1xuICBWQW55LFxuICBWQXJyYXksXG4gIFZCb29sZWFuLFxuICBWQnl0ZXMsXG4gIFZGbG9hdDY0LFxuICBWSWQsXG4gIFZJbnQ2NCxcbiAgVkxpdGVyYWwsXG4gIFZOdWxsLFxuICBWT2JqZWN0LFxuICBWUmVjb3JkLFxuICBWU3RyaW5nLFxuICBWVW5pb25cbn0gZnJvbSBcIi4vdmFsaWRhdG9ycy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRhdG9yKHYyKSB7XG4gIHJldHVybiAhIXYyLmlzQ29udmV4VmFsaWRhdG9yO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzT2JqZWN0VmFsaWRhdG9yKG9iaikge1xuICBpZiAoaXNWYWxpZGF0b3Iob2JqKSkge1xuICAgIHJldHVybiBvYmo7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHYub2JqZWN0KG9iaik7XG4gIH1cbn1cbmV4cG9ydCBjb25zdCB2ID0ge1xuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGNvcnJlc3BvbmRzIHRvIGFuIElEIG9mIGEgZG9jdW1lbnQgaW4gZ2l2ZW4gdGFibGUuXG4gICAqIEBwYXJhbSB0YWJsZU5hbWUgVGhlIG5hbWUgb2YgdGhlIHRhYmxlLlxuICAgKi9cbiAgaWQ6ICh0YWJsZU5hbWUpID0+IHtcbiAgICByZXR1cm4gbmV3IFZJZCh7XG4gICAgICBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsXG4gICAgICB0YWJsZU5hbWVcbiAgICB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiB0eXBlIE51bGwuXG4gICAqL1xuICBudWxsOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWTnVsbCh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiBDb252ZXggdHlwZSBGbG9hdDY0IChOdW1iZXIgaW4gSlMpLlxuICAgKlxuICAgKiBBbGlhcyBmb3IgYHYuZmxvYXQ2NCgpYFxuICAgKi9cbiAgbnVtYmVyOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWRmxvYXQ2NCh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiBDb252ZXggdHlwZSBGbG9hdDY0IChOdW1iZXIgaW4gSlMpLlxuICAgKi9cbiAgZmxvYXQ2NDogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkZsb2F0NjQoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHYuaW50NjQoKWAgaW5zdGVhZFxuICAgKi9cbiAgYmlnaW50OiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWSW50NjQoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgb2YgQ29udmV4IHR5cGUgSW50NjQgKEJpZ0ludCBpbiBKUykuXG4gICAqL1xuICBpbnQ2NDogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkludDY0KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIHR5cGUgQm9vbGVhbi5cbiAgICovXG4gIGJvb2xlYW46ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZCb29sZWFuKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIHR5cGUgU3RyaW5nLlxuICAgKi9cbiAgc3RyaW5nOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWU3RyaW5nKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIENvbnZleCB0eXBlIEJ5dGVzIChjb25zdHJ1Y3RlZCBpbiBKUyB2aWEgYEFycmF5QnVmZmVyYCkuXG4gICAqL1xuICBieXRlczogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkJ5dGVzKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIGVxdWFsIHRvIHRoZSBnaXZlbiBsaXRlcmFsIHZhbHVlLlxuICAgKiBAcGFyYW0gbGl0ZXJhbCBUaGUgbGl0ZXJhbCB2YWx1ZSB0byBjb21wYXJlIGFnYWluc3QuXG4gICAqL1xuICBsaXRlcmFsOiAobGl0ZXJhbCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkxpdGVyYWwoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsIHZhbHVlOiBsaXRlcmFsIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIGFuIEFycmF5IG9mIHRoZSBnaXZlbiBlbGVtZW50IHR5cGUuXG4gICAqIEBwYXJhbSBlbGVtZW50IFRoZSB2YWxpZGF0b3IgZm9yIHRoZSBlbGVtZW50cyBvZiB0aGUgYXJyYXkuXG4gICAqL1xuICBhcnJheTogKGVsZW1lbnQpID0+IHtcbiAgICByZXR1cm4gbmV3IFZBcnJheSh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiwgZWxlbWVudCB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBhbiBPYmplY3Qgd2l0aCB0aGUgZ2l2ZW4gcHJvcGVydGllcy5cbiAgICogQHBhcmFtIGZpZWxkcyBBbiBvYmplY3Qgc3BlY2lmeWluZyB0aGUgdmFsaWRhdG9yIGZvciBlYWNoIHByb3BlcnR5LlxuICAgKi9cbiAgb2JqZWN0OiAoZmllbGRzKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWT2JqZWN0KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiLCBmaWVsZHMgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgYSBSZWNvcmQgd2l0aCBrZXlzIGFuZCB2YWx1ZXMgdGhhdCBtYXRjaCB0aGUgZ2l2ZW4gdHlwZXMuXG4gICAqIEBwYXJhbSBrZXlzIFRoZSB2YWxpZGF0b3IgZm9yIHRoZSBrZXlzIG9mIHRoZSByZWNvcmQuIFRoaXMgY2Fubm90IGNvbnRhaW4gc3RyaW5nIGxpdGVyYWxzLlxuICAgKiBAcGFyYW0gdmFsdWVzIFRoZSB2YWxpZGF0b3IgZm9yIHRoZSB2YWx1ZXMgb2YgdGhlIHJlY29yZC5cbiAgICovXG4gIHJlY29yZDogKGtleXMsIHZhbHVlcykgPT4ge1xuICAgIHJldHVybiBuZXcgVlJlY29yZCh7XG4gICAgICBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsXG4gICAgICBrZXk6IGtleXMsXG4gICAgICB2YWx1ZTogdmFsdWVzXG4gICAgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgbWF0Y2hlcyBvbmUgb2YgdGhlIGdpdmVuIHZhbGlkYXRvcnMuXG4gICAqIEBwYXJhbSBtZW1iZXJzIFRoZSB2YWxpZGF0b3JzIHRvIG1hdGNoIGFnYWluc3QuXG4gICAqL1xuICB1bmlvbjogKC4uLm1lbWJlcnMpID0+IHtcbiAgICByZXR1cm4gbmV3IFZVbmlvbih7XG4gICAgICBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsXG4gICAgICBtZW1iZXJzXG4gICAgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBEb2VzIG5vdCB2YWxpZGF0ZSB0aGUgdmFsdWUuXG4gICAqL1xuICBhbnk6ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZBbnkoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBBbGxvd3Mgbm90IHNwZWNpZnlpbmcgYSB2YWx1ZSBmb3IgYSBwcm9wZXJ0eSBpbiBhbiBPYmplY3QuXG4gICAqIEBwYXJhbSB2YWx1ZSBUaGUgcHJvcGVydHkgdmFsdWUgdmFsaWRhdG9yIHRvIG1ha2Ugb3B0aW9uYWwuXG4gICAqXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3Qgb2JqZWN0V2l0aE9wdGlvbmFsRmllbGRzID0gdi5vYmplY3Qoe1xuICAgKiAgIHJlcXVpcmVkRmllbGQ6IHYuc3RyaW5nKCksXG4gICAqICAgb3B0aW9uYWxGaWVsZDogdi5vcHRpb25hbCh2LnN0cmluZygpKSxcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgb3B0aW9uYWw6ICh2YWx1ZSkgPT4ge1xuICAgIHJldHVybiB2YWx1ZS5hc09wdGlvbmFsKCk7XG4gIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/validators.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validators.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VAny: () => (/* binding */ VAny),\n/* harmony export */   VArray: () => (/* binding */ VArray),\n/* harmony export */   VBoolean: () => (/* binding */ VBoolean),\n/* harmony export */   VBytes: () => (/* binding */ VBytes),\n/* harmony export */   VFloat64: () => (/* binding */ VFloat64),\n/* harmony export */   VId: () => (/* binding */ VId),\n/* harmony export */   VInt64: () => (/* binding */ VInt64),\n/* harmony export */   VLiteral: () => (/* binding */ VLiteral),\n/* harmony export */   VNull: () => (/* binding */ VNull),\n/* harmony export */   VObject: () => (/* binding */ VObject),\n/* harmony export */   VRecord: () => (/* binding */ VRecord),\n/* harmony export */   VString: () => (/* binding */ VString),\n/* harmony export */   VUnion: () => (/* binding */ VUnion)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nclass BaseValidator {\n  constructor({ isOptional }) {\n    /**\n     * Only for TypeScript, the TS type of the JS values validated\n     * by this validator.\n     */\n    __publicField(this, \"type\");\n    /**\n     * Only for TypeScript, if this an Object validator, then\n     * this is the TS type of its property names.\n     */\n    __publicField(this, \"fieldPaths\");\n    /**\n     * Whether this is an optional Object property value validator.\n     */\n    __publicField(this, \"isOptional\");\n    /**\n     * Always `\"true\"`.\n     */\n    __publicField(this, \"isConvexValidator\");\n    this.isOptional = isOptional;\n    this.isConvexValidator = true;\n  }\n  /** @deprecated - use isOptional instead */\n  get optional() {\n    return this.isOptional === \"optional\" ? true : false;\n  }\n}\nclass VId extends BaseValidator {\n  /**\n   * Usually you'd use `v.id(tableName)` instead.\n   */\n  constructor({\n    isOptional,\n    tableName\n  }) {\n    super({ isOptional });\n    /**\n     * The name of the table that the validated IDs must belong to.\n     */\n    __publicField(this, \"tableName\");\n    /**\n     * The kind of validator, `\"id\"`.\n     */\n    __publicField(this, \"kind\", \"id\");\n    this.tableName = tableName;\n  }\n  /** @internal */\n  get json() {\n    return { type: \"id\", tableName: this.tableName };\n  }\n  /** @internal */\n  asOptional() {\n    return new VId({\n      isOptional: \"optional\",\n      tableName: this.tableName\n    });\n  }\n}\nclass VFloat64 extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"float64\"`.\n     */\n    __publicField(this, \"kind\", \"float64\");\n  }\n  /** @internal */\n  get json() {\n    return { type: \"number\" };\n  }\n  /** @internal */\n  asOptional() {\n    return new VFloat64({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VInt64 extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"int64\"`.\n     */\n    __publicField(this, \"kind\", \"int64\");\n  }\n  /** @internal */\n  get json() {\n    return { type: \"bigint\" };\n  }\n  /** @internal */\n  asOptional() {\n    return new VInt64({ isOptional: \"optional\" });\n  }\n}\nclass VBoolean extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"boolean\"`.\n     */\n    __publicField(this, \"kind\", \"boolean\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VBoolean({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VBytes extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"bytes\"`.\n     */\n    __publicField(this, \"kind\", \"bytes\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VBytes({ isOptional: \"optional\" });\n  }\n}\nclass VString extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"string\"`.\n     */\n    __publicField(this, \"kind\", \"string\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VString({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VNull extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"null\"`.\n     */\n    __publicField(this, \"kind\", \"null\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VNull({ isOptional: \"optional\" });\n  }\n}\nclass VAny extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"any\"`.\n     */\n    __publicField(this, \"kind\", \"any\");\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VAny({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VObject extends BaseValidator {\n  /**\n   * Usually you'd use `v.object({ ... })` instead.\n   */\n  constructor({\n    isOptional,\n    fields\n  }) {\n    super({ isOptional });\n    /**\n     * An object with the validator for each property.\n     */\n    __publicField(this, \"fields\");\n    /**\n     * The kind of validator, `\"object\"`.\n     */\n    __publicField(this, \"kind\", \"object\");\n    this.fields = fields;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: globalThis.Object.fromEntries(\n        globalThis.Object.entries(this.fields).map(([k, v]) => [\n          k,\n          {\n            fieldType: v.json,\n            optional: v.isOptional === \"optional\" ? true : false\n          }\n        ])\n      )\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VObject({\n      isOptional: \"optional\",\n      fields: this.fields\n    });\n  }\n}\nclass VLiteral extends BaseValidator {\n  /**\n   * Usually you'd use `v.literal(value)` instead.\n   */\n  constructor({ isOptional, value }) {\n    super({ isOptional });\n    /**\n     * The value that the validated values must be equal to.\n     */\n    __publicField(this, \"value\");\n    /**\n     * The kind of validator, `\"literal\"`.\n     */\n    __publicField(this, \"kind\", \"literal\");\n    this.value = value;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(this.value)\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VLiteral({\n      isOptional: \"optional\",\n      value: this.value\n    });\n  }\n}\nclass VArray extends BaseValidator {\n  /**\n   * Usually you'd use `v.array(element)` instead.\n   */\n  constructor({\n    isOptional,\n    element\n  }) {\n    super({ isOptional });\n    /**\n     * The validator for the elements of the array.\n     */\n    __publicField(this, \"element\");\n    /**\n     * The kind of validator, `\"array\"`.\n     */\n    __publicField(this, \"kind\", \"array\");\n    this.element = element;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: this.element.json\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VArray({\n      isOptional: \"optional\",\n      element: this.element\n    });\n  }\n}\nclass VRecord extends BaseValidator {\n  /**\n   * Usually you'd use `v.record(key, value)` instead.\n   */\n  constructor({\n    isOptional,\n    key,\n    value\n  }) {\n    super({ isOptional });\n    /**\n     * The validator for the keys of the record.\n     */\n    __publicField(this, \"key\");\n    /**\n     * The validator for the values of the record.\n     */\n    __publicField(this, \"value\");\n    /**\n     * The kind of validator, `\"record\"`.\n     */\n    __publicField(this, \"kind\", \"record\");\n    if (key.isOptional === \"optional\") {\n      throw new Error(\"Record validator cannot have optional keys\");\n    }\n    if (value.isOptional === \"optional\") {\n      throw new Error(\"Record validator cannot have optional values\");\n    }\n    this.key = key;\n    this.value = value;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      // This cast is needed because TypeScript thinks the key type is too wide\n      keys: this.key.json,\n      values: {\n        fieldType: this.value.json,\n        optional: false\n      }\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VRecord({\n      isOptional: \"optional\",\n      key: this.key,\n      value: this.value\n    });\n  }\n}\nclass VUnion extends BaseValidator {\n  /**\n   * Usually you'd use `v.union(...members)` instead.\n   */\n  constructor({ isOptional, members }) {\n    super({ isOptional });\n    /**\n     * The array of validators, one of which must match the value.\n     */\n    __publicField(this, \"members\");\n    /**\n     * The kind of validator, `\"union\"`.\n     */\n    __publicField(this, \"kind\", \"union\");\n    this.members = members;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: this.members.map((v) => v.json)\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VUnion({\n      isOptional: \"optional\",\n      members: this.members\n    });\n  }\n}\n//# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/value.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/value.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToBigInt: () => (/* binding */ base64ToBigInt),\n/* harmony export */   bigIntToBase64: () => (/* binding */ bigIntToBase64),\n/* harmony export */   convexOrUndefinedToJson: () => (/* binding */ convexOrUndefinedToJson),\n/* harmony export */   convexToJson: () => (/* binding */ convexToJson),\n/* harmony export */   jsonToConvex: () => (/* binding */ jsonToConvex),\n/* harmony export */   modernBase64ToBigInt: () => (/* binding */ modernBase64ToBigInt),\n/* harmony export */   modernBigIntToBase64: () => (/* binding */ modernBigIntToBase64),\n/* harmony export */   patchValueToJson: () => (/* binding */ patchValueToJson),\n/* harmony export */   slowBase64ToBigInt: () => (/* binding */ slowBase64ToBigInt),\n/* harmony export */   slowBigIntToBase64: () => (/* binding */ slowBigIntToBase64),\n/* harmony export */   stringifyValueForError: () => (/* binding */ stringifyValueForError)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n\n\n\nconst LITTLE_ENDIAN = true;\nconst MIN_INT64 = BigInt(\"-9223372036854775808\");\nconst MAX_INT64 = BigInt(\"9223372036854775807\");\nconst ZERO = BigInt(\"0\");\nconst EIGHT = BigInt(\"8\");\nconst TWOFIFTYSIX = BigInt(\"256\");\nfunction isSpecial(n) {\n  return Number.isNaN(n) || !Number.isFinite(n) || Object.is(n, -0);\n}\nfunction slowBigIntToBase64(value) {\n  if (value < ZERO) {\n    value -= MIN_INT64 + MIN_INT64;\n  }\n  let hex = value.toString(16);\n  if (hex.length % 2 === 1) hex = \"0\" + hex;\n  const bytes = new Uint8Array(new ArrayBuffer(8));\n  let i = 0;\n  for (const hexByte of hex.match(/.{2}/g).reverse()) {\n    bytes.set([parseInt(hexByte, 16)], i++);\n    value >>= EIGHT;\n  }\n  return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(bytes);\n}\nfunction slowBase64ToBigInt(encoded) {\n  const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`\n    );\n  }\n  let value = ZERO;\n  let power = ZERO;\n  for (const byte of integerBytes) {\n    value += BigInt(byte) * TWOFIFTYSIX ** power;\n    power++;\n  }\n  if (value > MAX_INT64) {\n    value += MIN_INT64 + MIN_INT64;\n  }\n  return value;\n}\nfunction modernBigIntToBase64(value) {\n  if (value < MIN_INT64 || MAX_INT64 < value) {\n    throw new Error(\n      `BigInt ${value} does not fit into a 64-bit signed integer.`\n    );\n  }\n  const buffer = new ArrayBuffer(8);\n  new DataView(buffer).setBigInt64(0, value, true);\n  return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer));\n}\nfunction modernBase64ToBigInt(encoded) {\n  const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`\n    );\n  }\n  const intBytesView = new DataView(integerBytes.buffer);\n  return intBytesView.getBigInt64(0, true);\n}\nconst bigIntToBase64 = DataView.prototype.setBigInt64 ? modernBigIntToBase64 : slowBigIntToBase64;\nconst base64ToBigInt = DataView.prototype.getBigInt64 ? modernBase64ToBigInt : slowBase64ToBigInt;\nconst MAX_IDENTIFIER_LEN = 1024;\nfunction validateObjectField(k) {\n  if (k.length > MAX_IDENTIFIER_LEN) {\n    throw new Error(\n      `Field name ${k} exceeds maximum field name length ${MAX_IDENTIFIER_LEN}.`\n    );\n  }\n  if (k.startsWith(\"$\")) {\n    throw new Error(`Field name ${k} starts with a '$', which is reserved.`);\n  }\n  for (let i = 0; i < k.length; i += 1) {\n    const charCode = k.charCodeAt(i);\n    if (charCode < 32 || charCode >= 127) {\n      throw new Error(\n        `Field name ${k} has invalid character '${k[i]}': Field names can only contain non-control ASCII characters`\n      );\n    }\n  }\n}\nfunction jsonToConvex(value) {\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map((value2) => jsonToConvex(value2));\n  }\n  if (typeof value !== \"object\") {\n    throw new Error(`Unexpected type of ${value}`);\n  }\n  const entries = Object.entries(value);\n  if (entries.length === 1) {\n    const key = entries[0][0];\n    if (key === \"$bytes\") {\n      if (typeof value.$bytes !== \"string\") {\n        throw new Error(`Malformed $bytes field on ${value}`);\n      }\n      return _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$bytes).buffer;\n    }\n    if (key === \"$integer\") {\n      if (typeof value.$integer !== \"string\") {\n        throw new Error(`Malformed $integer field on ${value}`);\n      }\n      return base64ToBigInt(value.$integer);\n    }\n    if (key === \"$float\") {\n      if (typeof value.$float !== \"string\") {\n        throw new Error(`Malformed $float field on ${value}`);\n      }\n      const floatBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$float);\n      if (floatBytes.byteLength !== 8) {\n        throw new Error(\n          `Received ${floatBytes.byteLength} bytes, expected 8 for $float`\n        );\n      }\n      const floatBytesView = new DataView(floatBytes.buffer);\n      const float = floatBytesView.getFloat64(0, LITTLE_ENDIAN);\n      if (!isSpecial(float)) {\n        throw new Error(`Float ${float} should be encoded as a number`);\n      }\n      return float;\n    }\n    if (key === \"$set\") {\n      throw new Error(\n        `Received a Set which is no longer supported as a Convex type.`\n      );\n    }\n    if (key === \"$map\") {\n      throw new Error(\n        `Received a Map which is no longer supported as a Convex type.`\n      );\n    }\n  }\n  const out = {};\n  for (const [k, v] of Object.entries(value)) {\n    validateObjectField(k);\n    out[k] = jsonToConvex(v);\n  }\n  return out;\n}\nfunction stringifyValueForError(value) {\n  return JSON.stringify(value, (_key, value2) => {\n    if (value2 === void 0) {\n      return \"undefined\";\n    }\n    if (typeof value2 === \"bigint\") {\n      return `${value2.toString()}n`;\n    }\n    return value2;\n  });\n}\nfunction convexToJsonInternal(value, originalValue, context, includeTopLevelUndefined) {\n  if (value === void 0) {\n    const contextText = context && ` (present at path ${context} in original object ${stringifyValueForError(\n      originalValue\n    )})`;\n    throw new Error(\n      `undefined is not a valid Convex value${contextText}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`\n    );\n  }\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"bigint\") {\n    if (value < MIN_INT64 || MAX_INT64 < value) {\n      throw new Error(\n        `BigInt ${value} does not fit into a 64-bit signed integer.`\n      );\n    }\n    return { $integer: bigIntToBase64(value) };\n  }\n  if (typeof value === \"number\") {\n    if (isSpecial(value)) {\n      const buffer = new ArrayBuffer(8);\n      new DataView(buffer).setFloat64(0, value, LITTLE_ENDIAN);\n      return { $float: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer)) };\n    } else {\n      return value;\n    }\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (value instanceof ArrayBuffer) {\n    return { $bytes: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(value)) };\n  }\n  if (Array.isArray(value)) {\n    return value.map(\n      (value2, i) => convexToJsonInternal(value2, originalValue, context + `[${i}]`, false)\n    );\n  }\n  if (value instanceof Set) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Set\", [...value], originalValue)\n    );\n  }\n  if (value instanceof Map) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Map\", [...value], originalValue)\n    );\n  }\n  if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isSimpleObject)(value)) {\n    const theType = value?.constructor?.name;\n    const typeName = theType ? `${theType} ` : \"\";\n    throw new Error(\n      errorMessageForUnsupportedType(context, typeName, value, originalValue)\n    );\n  }\n  const out = {};\n  const entries = Object.entries(value);\n  entries.sort(([k1, _v1], [k2, _v2]) => k1 === k2 ? 0 : k1 < k2 ? -1 : 1);\n  for (const [k, v] of entries) {\n    if (v !== void 0) {\n      validateObjectField(k);\n      out[k] = convexToJsonInternal(v, originalValue, context + `.${k}`, false);\n    } else if (includeTopLevelUndefined) {\n      validateObjectField(k);\n      out[k] = convexOrUndefinedToJsonInternal(\n        v,\n        originalValue,\n        context + `.${k}`\n      );\n    }\n  }\n  return out;\n}\nfunction errorMessageForUnsupportedType(context, typeName, value, originalValue) {\n  if (context) {\n    return `${typeName}${stringifyValueForError(\n      value\n    )} is not a supported Convex type (present at path ${context} in original object ${stringifyValueForError(\n      originalValue\n    )}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`;\n  } else {\n    return `${typeName}${stringifyValueForError(\n      value\n    )} is not a supported Convex type.`;\n  }\n}\nfunction convexOrUndefinedToJsonInternal(value, originalValue, context) {\n  if (value === void 0) {\n    return { $undefined: null };\n  } else {\n    if (originalValue === void 0) {\n      throw new Error(\n        `Programming error. Current value is ${stringifyValueForError(\n          value\n        )} but original value is undefined`\n      );\n    }\n    return convexToJsonInternal(value, originalValue, context, false);\n  }\n}\nfunction convexToJson(value) {\n  return convexToJsonInternal(value, value, \"\", false);\n}\nfunction convexOrUndefinedToJson(value) {\n  return convexOrUndefinedToJsonInternal(value, value, \"\");\n}\nfunction patchValueToJson(value) {\n  return convexToJsonInternal(value, value, \"\", true);\n}\n//# sourceMappingURL=value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/value.js\n");

/***/ })

};
;