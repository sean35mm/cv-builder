"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@convex-dev";
exports.ids = ["vendor-chunks/@convex-dev"];
exports.modules = {

/***/ "(ssr)/./node_modules/@convex-dev/auth/dist/react/client.js":
/*!************************************************************!*\
  !*** ./node_modules/@convex-dev/auth/dist/react/client.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   ConvexAuthActionsContext: () => (/* binding */ ConvexAuthActionsContext),\n/* harmony export */   ConvexAuthTokenContext: () => (/* binding */ ConvexAuthTokenContext),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst ConvexAuthActionsContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst ConvexAuthInternalContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useAuth() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexAuthInternalContext);\n}\nconst ConvexAuthTokenContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nconst VERIFIER_STORAGE_KEY = \"__convexAuthOAuthVerifier\";\nconst JWT_STORAGE_KEY = \"__convexAuthJWT\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"__convexAuthRefreshToken\";\nconst SERVER_STATE_FETCH_TIME_STORAGE_KEY = \"__convexAuthServerStateFetchTime\";\nfunction AuthProvider({ client, serverState, onChange, storage, storageNamespace, replaceURL, children, }) {\n    const token = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(serverState?._state.token ?? null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(token.current === null);\n    const [tokenState, setTokenState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(token.current);\n    const verbose = client.verbose ?? false;\n    const logVerbose = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((message) => {\n        if (verbose) {\n            console.debug(`${new Date().toISOString()} ${message}`);\n        }\n    }, [verbose]);\n    const { storageSet, storageGet, storageRemove, storageKey } = useNamespacedStorage(storage, storageNamespace);\n    const [isRefreshingToken, setIsRefreshingToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const setToken = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (args) => {\n        const wasAuthenticated = token.current !== null;\n        let newToken;\n        if (args.tokens === null) {\n            token.current = null;\n            if (args.shouldStore) {\n                await storageRemove(JWT_STORAGE_KEY);\n                await storageRemove(REFRESH_TOKEN_STORAGE_KEY);\n            }\n            newToken = null;\n        }\n        else {\n            const { token: value } = args.tokens;\n            token.current = value;\n            if (args.shouldStore) {\n                const { refreshToken } = args.tokens;\n                await storageSet(JWT_STORAGE_KEY, value);\n                await storageSet(REFRESH_TOKEN_STORAGE_KEY, refreshToken);\n            }\n            newToken = value;\n        }\n        if (wasAuthenticated !== (newToken !== null)) {\n            await onChange?.();\n        }\n        setTokenState(newToken);\n        setIsLoading(false);\n    }, [storageSet, storageRemove]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        const listener = async (e) => {\n            if (isRefreshingToken) {\n                // There are 3 different ways to trigger this pop up so just try all of\n                // them.\n                e.preventDefault();\n                // This confirmation message doesn't actually appear in most modern\n                // browsers but we tried.\n                const confirmationMessage = \"Are you sure you want to leave? Your changes may not be saved.\";\n                e.returnValue = true;\n                return confirmationMessage;\n            }\n        };\n        browserAddEventListener(\"beforeunload\", listener);\n        return () => {\n            browserRemoveEventListener(\"beforeunload\", listener);\n        };\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        // We're listening for:\n        // 1. sibling tabs in case of localStorage\n        // 2. other frames in case of sessionStorage\n        const listener = (event) => {\n            void (async () => {\n                // TODO: Test this if statement works in iframes correctly\n                if (event.storageArea !== storage) {\n                    return;\n                }\n                // Another tab/frame set the access token, use it\n                if (event.key === storageKey(JWT_STORAGE_KEY)) {\n                    const value = event.newValue;\n                    logVerbose(`synced access token, is null: ${value === null}`);\n                    // We don't write into storage since the event came from there and\n                    // we'd trigger a loop, plus we get each key as a separate event so\n                    // we don't have the refresh key here.\n                    await setToken({\n                        shouldStore: false,\n                        tokens: value === null ? null : { token: value },\n                    });\n                }\n            })();\n        };\n        browserAddEventListener(\"storage\", listener);\n        return () => browserRemoveEventListener(\"storage\", listener);\n    }, [setToken]);\n    const verifyCodeAndSetToken = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (args) => {\n        const { tokens } = await client.unauthenticatedCall(\"auth:signIn\", \"code\" in args\n            ? { params: { code: args.code }, verifier: args.verifier }\n            : args);\n        logVerbose(`retrieved tokens, is null: ${tokens === null}`);\n        await setToken({ shouldStore: true, tokens: tokens ?? null });\n        return tokens !== null;\n    }, [client, setToken]);\n    const signIn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (provider, args) => {\n        const params = args instanceof FormData\n            ? Array.from(args.entries()).reduce((acc, [key, value]) => {\n                acc[key] = value;\n                return acc;\n            }, {})\n            : args ?? {};\n        const verifier = (await storageGet(VERIFIER_STORAGE_KEY)) ?? undefined;\n        await storageRemove(VERIFIER_STORAGE_KEY);\n        const result = await client.authenticatedCall(\"auth:signIn\", { provider, params, verifier });\n        if (result.redirect !== undefined) {\n            const url = new URL(result.redirect);\n            await storageSet(VERIFIER_STORAGE_KEY, result.verifier);\n            // Do not redirect in React Native\n            if (window.location !== undefined) {\n                window.location.href = url.toString();\n            }\n            return { signingIn: false, redirect: url };\n        }\n        else if (result.tokens !== undefined) {\n            const { tokens } = result;\n            logVerbose(`signed in and got tokens, is null: ${tokens === null}`);\n            await setToken({ shouldStore: true, tokens });\n            return { signingIn: result.tokens !== null };\n        }\n        return { signingIn: false };\n    }, [client, setToken, storageGet]);\n    const signOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async () => {\n        try {\n            await client.authenticatedCall(\"auth:signOut\");\n        }\n        catch (error) {\n            // Ignore any errors, they are usually caused by being\n            // already signed out, which is ok.\n        }\n        logVerbose(`signed out, erasing tokens`);\n        await setToken({ shouldStore: true, tokens: null });\n    }, [setToken, client]);\n    const fetchAccessToken = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ({ forceRefreshToken }) => {\n        if (forceRefreshToken) {\n            const tokenBeforeLockAquisition = token.current;\n            return await browserMutex(REFRESH_TOKEN_STORAGE_KEY, async () => {\n                const tokenAfterLockAquisition = token.current;\n                // Another tab or frame just refreshed the token, we can use it\n                // and skip another refresh.\n                if (tokenAfterLockAquisition !== tokenBeforeLockAquisition) {\n                    logVerbose(`returning synced token, is null: ${tokenAfterLockAquisition === null}`);\n                    return tokenAfterLockAquisition;\n                }\n                const refreshToken = (await storageGet(REFRESH_TOKEN_STORAGE_KEY)) ?? null;\n                if (refreshToken !== null) {\n                    setIsRefreshingToken(true);\n                    await verifyCodeAndSetToken({ refreshToken }).finally(() => {\n                        setIsRefreshingToken(false);\n                    });\n                    logVerbose(`returning retrieved token, is null: ${tokenAfterLockAquisition === null}`);\n                    return token.current;\n                }\n                else {\n                    setIsRefreshingToken(false);\n                    logVerbose(`returning null, there is no refresh token`);\n                    return null;\n                }\n            });\n        }\n        return token.current;\n    }, [verifyCodeAndSetToken, signOut, storageGet]);\n    const signingInWithCodeFromURL = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        // Has to happen in useEffect to avoid SSR.\n        if (storage === undefined) {\n            throw new Error(\"`localStorage` is not available in this environment, \" +\n                \"set the `storage` prop on `ConvexAuthProvider`!\");\n        }\n        const readStateFromStorage = async () => {\n            const token = (await storageGet(JWT_STORAGE_KEY)) ?? null;\n            logVerbose(`retrieved token from storage, is null: ${token === null}`);\n            await setToken({\n                shouldStore: false,\n                tokens: token === null ? null : { token },\n            });\n        };\n        if (serverState !== undefined) {\n            // First check that this isn't a subsequent render\n            // with stale serverState.\n            const timeFetched = storageGet(SERVER_STATE_FETCH_TIME_STORAGE_KEY);\n            const setTokensFromServerState = (timeFetched) => {\n                if (!timeFetched || serverState._timeFetched > +timeFetched) {\n                    const { token, refreshToken } = serverState._state;\n                    const tokens = token === null || refreshToken === null\n                        ? null\n                        : { token, refreshToken };\n                    void storageSet(SERVER_STATE_FETCH_TIME_STORAGE_KEY, serverState._timeFetched.toString());\n                    void setToken({ tokens, shouldStore: true });\n                }\n                else {\n                    void readStateFromStorage();\n                }\n            };\n            // We want to avoid async if possible.\n            if (timeFetched instanceof Promise) {\n                void timeFetched.then(setTokensFromServerState);\n            }\n            else {\n                setTokensFromServerState(timeFetched);\n            }\n            return;\n        }\n        const code = typeof window?.location !== \"undefined\"\n            ? new URLSearchParams(window.location.search).get(\"code\")\n            : null;\n        // code from URL is only consumed initially,\n        // ref avoids racing in Strict mode\n        if (signingInWithCodeFromURL.current || code) {\n            if (code && !signingInWithCodeFromURL.current) {\n                signingInWithCodeFromURL.current = true;\n                const url = new URL(window.location.href);\n                url.searchParams.delete(\"code\");\n                void (async () => {\n                    await replaceURL(url.pathname + url.search + url.hash);\n                    await signIn(undefined, { code });\n                    signingInWithCodeFromURL.current = false;\n                })();\n            }\n        }\n        else {\n            void readStateFromStorage();\n        }\n    }, \n    // Explicitly chosen dependencies.\n    // This effect should mostly only run once\n    // on mount.\n    [client, storageGet]);\n    const actions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({ signIn, signOut }), [signIn, signOut]);\n    const isAuthenticated = tokenState !== null;\n    const authState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({\n        isLoading,\n        isAuthenticated,\n        fetchAccessToken,\n    }), [fetchAccessToken, isLoading, isAuthenticated]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConvexAuthInternalContext.Provider, { value: authState, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConvexAuthActionsContext.Provider, { value: actions, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConvexAuthTokenContext.Provider, { value: tokenState, children: children }) }) }));\n}\nfunction useNamespacedStorage(peristentStorage, namespace) {\n    const inMemoryStorage = useInMemoryStorage();\n    const storage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => peristentStorage ?? inMemoryStorage(), [peristentStorage]);\n    const escapedNamespace = namespace.replace(/[^a-zA-Z0-9]/g, \"\");\n    const storageKey = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key) => `${key}_${escapedNamespace}`, [namespace]);\n    const storageSet = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key, value) => storage.setItem(storageKey(key), value), [storage, storageKey]);\n    const storageGet = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key) => storage.getItem(storageKey(key)), [storage, storageKey]);\n    const storageRemove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key) => storage.removeItem(storageKey(key)), [storage, storageKey]);\n    return { storageSet, storageGet, storageRemove, storageKey };\n}\nfunction useInMemoryStorage() {\n    const [inMemoryStorage, setInMemoryStorage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    return () => ({\n        getItem: (key) => inMemoryStorage[key],\n        setItem: (key, value) => {\n            setInMemoryStorage((prev) => ({ ...prev, [key]: value }));\n        },\n        removeItem: (key) => {\n            setInMemoryStorage((prev) => {\n                const { [key]: _, ...rest } = prev;\n                return rest;\n            });\n        },\n    });\n}\n// In the browser, executes the callback as the only tab / frame at a time.\nasync function browserMutex(key, callback) {\n    const lockManager = window?.navigator?.locks;\n    return lockManager !== undefined\n        ? await lockManager.request(key, callback)\n        : await manualMutex(key, callback);\n}\nfunction getMutexValue(key) {\n    if (globalThis.__convexAuthMutexes === undefined) {\n        globalThis.__convexAuthMutexes = {};\n    }\n    let mutex = globalThis.__convexAuthMutexes[key];\n    if (mutex === undefined) {\n        globalThis.__convexAuthMutexes[key] = {\n            currentlyRunning: null,\n            waiting: [],\n        };\n    }\n    mutex = globalThis.__convexAuthMutexes[key];\n    return mutex;\n}\nfunction setMutexValue(key, value) {\n    globalThis.__convexAuthMutexes[key] = value;\n}\nasync function enqueueCallbackForMutex(key, callback) {\n    const mutex = getMutexValue(key);\n    if (mutex.currentlyRunning === null) {\n        setMutexValue(key, {\n            currentlyRunning: callback().finally(() => {\n                const nextCb = getMutexValue(key).waiting.shift();\n                getMutexValue(key).currentlyRunning = null;\n                setMutexValue(key, {\n                    ...getMutexValue(key),\n                    currentlyRunning: nextCb === undefined ? null : enqueueCallbackForMutex(key, nextCb),\n                });\n            }),\n            waiting: [],\n        });\n    }\n    else {\n        setMutexValue(key, {\n            ...mutex,\n            waiting: [...mutex.waiting, callback],\n        });\n    }\n}\nasync function manualMutex(key, callback) {\n    const outerPromise = new Promise((resolve, reject) => {\n        const wrappedCallback = () => {\n            return callback()\n                .then((v) => resolve(v))\n                .catch((e) => reject(e));\n        };\n        void enqueueCallbackForMutex(key, wrappedCallback);\n    });\n    return outerPromise;\n}\nfunction browserAddEventListener(type, listener, options) {\n    window.addEventListener?.(type, listener, options);\n}\nfunction browserRemoveEventListener(type, listener, options) {\n    window.removeEventListener?.(type, listener, options);\n}\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@convex-dev/auth/dist/react/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@convex-dev/auth/dist/react/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@convex-dev/auth/dist/react/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexAuthProvider: () => (/* binding */ ConvexAuthProvider),\n/* harmony export */   useAuthActions: () => (/* binding */ useAuthActions),\n/* harmony export */   useAuthToken: () => (/* binding */ useAuthToken)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var convex_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! convex/browser */ \"(ssr)/./node_modules/convex/dist/esm/browser/index-node.js\");\n/* harmony import */ var convex_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! convex/react */ \"(ssr)/./node_modules/convex/dist/esm/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@convex-dev/auth/dist/react/client.js\");\n/**\n * React bindings for Convex Auth.\n *\n * @module\n */ /* __next_internal_client_entry_do_not_use__ useAuthActions,ConvexAuthProvider,useAuthToken auto */ \n\n\n\n\n/**\n * Use this hook to access the `signIn` and `signOut` methods:\n *\n * ```ts\n * import { useAuthActions } from \"@convex-dev/auth/react\";\n *\n * function SomeComponent() {\n *   const { signIn, signOut } = useAuthActions();\n *   // ...\n * }\n * ```\n */ function useAuthActions() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_client_js__WEBPACK_IMPORTED_MODULE_4__.ConvexAuthActionsContext);\n}\n/**\n * Replace your `ConvexProvider` with this component to enable authentication.\n *\n * ```tsx\n * import { ConvexAuthProvider } from \"@convex-dev/auth/react\";\n * import { ConvexReactClient } from \"convex/react\";\n * import { ReactNode } from \"react\";\n *\n * const convex = new ConvexReactClient(/* ... *\\/);\n *\n * function RootComponent({ children }: { children: ReactNode }) {\n *   return <ConvexAuthProvider client={convex}>{children}</ConvexAuthProvider>;\n * }\n * ```\n */ function ConvexAuthProvider(props) {\n    const { client, storage, storageNamespace, replaceURL, children } = props;\n    const authClient = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)({\n        \"ConvexAuthProvider.useMemo[authClient]\": ()=>({\n                authenticatedCall (action, args) {\n                    return client.action(action, args);\n                },\n                unauthenticatedCall (action, args) {\n                    return new convex_browser__WEBPACK_IMPORTED_MODULE_1__.ConvexHttpClient(client.address).action(action, args);\n                },\n                verbose: client.options?.verbose\n            })\n    }[\"ConvexAuthProvider.useMemo[authClient]\"], [\n        client\n    ]);\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_client_js__WEBPACK_IMPORTED_MODULE_4__.AuthProvider, {\n        client: authClient,\n        storage: storage ?? // Handle SSR, RN, Web, etc.\n        // Pretend we always have storage, the component checks\n        // it in first useEffect.\n        ( true ? undefined : 0),\n        storageNamespace: storageNamespace ?? client.address,\n        replaceURL: replaceURL ?? ((url)=>{\n            window.history.replaceState({}, \"\", url);\n        }),\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(convex_react__WEBPACK_IMPORTED_MODULE_2__.ConvexProviderWithAuth, {\n            client: client,\n            useAuth: _client_js__WEBPACK_IMPORTED_MODULE_4__.useAuth,\n            children: children\n        })\n    });\n}\n/**\n * Use this hook to access the JWT token on the client, for authenticating\n * your Convex HTTP actions.\n *\n * You should not pass this token to other servers (think of it\n * as an \"ID token\").\n *\n * ```ts\n * import { useAuthToken } from \"@convex-dev/auth/react\";\n *\n * function SomeComponent() {\n *   const token = useAuthToken();\n *   const onClick = async () => {\n *     await fetch(`${CONVEX_SITE_URL}/someEndpoint`, {\n *       headers: {\n *         Authorization: `Bearer ${token}`,\n *       },\n *     });\n *   };\n *   // ...\n * }\n * ```\n */ function useAuthToken() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_client_js__WEBPACK_IMPORTED_MODULE_4__.ConvexAuthTokenContext);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnZleC1kZXYvYXV0aC9kaXN0L3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7R0FJRztBQUkrQztBQUN1QjtBQUVsQjtBQU1sQztBQUdyQjs7Ozs7Ozs7Ozs7R0FXRyxDQUNHLFNBQVUsY0FBYztJQUM1QixPQUFPLGlEQUFVLENBQUMsZ0VBQXdCLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQ7Ozs7Ozs7Ozs7Ozs7O0dBY0csQ0FDRyxTQUFVLGtCQUFrQixDQUFDLEtBMENsQztJQUNDLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDMUUsTUFBTSxVQUFVLEdBQUcsOENBQU87a0RBQ3hCLEdBQUcsRUFBRSxDQUNIO2dCQUNFLGlCQUFpQixFQUFDLE1BQU0sRUFBRSxJQUFJO29CQUM1QixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUNyQyxDQUFDO2dCQUNELG1CQUFtQixFQUFDLE1BQU0sRUFBRSxJQUFJO29CQUM5QixPQUFPLElBQUksNERBQWdCLENBQUUsTUFBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FDekQsTUFBTSxFQUNOLElBQUksQ0FDTCxDQUFDO2dCQUNKLENBQUM7Z0JBQ0QsT0FBTyxFQUFHLE1BQWMsQ0FBQyxPQUFPLEVBQUUsT0FBTztjQUMxQztpREFDSDtRQUFDLE1BQU07S0FBQyxDQUNULENBQUM7SUFDRixPQUFPLHVEQUNKLG9EQUFZO1FBQ1gsTUFBTSxFQUFFLFVBQVU7UUFDbEIsT0FBTyxFQUNMLE9BQU8sSUFDUCw0QkFBNEI7UUFDNUIsdURBQXVEO1FBQ3ZELHlCQUF5QjtTQUN4QixLQUE2QixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQVEsQ0FBWSxDQUFFO1FBRXJFLGdCQUFnQixFQUFFLGdCQUFnQixJQUFLLE1BQWMsQ0FBQyxPQUFPO1FBQzdELFVBQVUsRUFDUixVQUFVLEtBQ1QsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNQLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDM0MsQ0FBQyxDQUFDO1FBQUEsVUFHSix1REFBQyxnRUFBc0I7WUFBQyxNQUFNLEVBQUUsTUFBTTtZQUFFLE9BQU8sRUFBRSwrQ0FBTztZQUFBLFVBQ3JELFFBQVE7UUFBQSxFQUNjO0lBQUEsRUFDWixDQUNoQjtBQUNILENBQUM7QUEwR0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkcsQ0FDRyxTQUFVLFlBQVk7SUFDMUIsT0FBTyxpREFBVSxDQUFDLDhEQUFzQixDQUFDLENBQUM7QUFDNUMsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NlYW5naWwvc3JjL3JlYWN0L2luZGV4LnRzeCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@convex-dev/auth/dist/react/index.js\n");

/***/ })

};
;